{"version":3,"sources":["utilities/common.jsx","models/definitions/text.jsx","models/definitions/fieldTypes.jsx","models/field.jsx","models/group.jsx","models/page.jsx","state/configurator.jsx","testData.jsx","state/actions.jsx","state/fields.jsx","state/ui.jsx","state/index.jsx","containers/configurator/components/navigator/panels/item.jsx","containers/configurator/components/navigator/panels/fields.jsx","containers/configurator/components/navigator/panels/groups.jsx","containers/configurator/components/navigator/panels/pages.jsx","containers/configurator/components/navigator/index.jsx","containers/configurator/components/properties/index.jsx","fields/input.jsx","fields/tag.jsx","fields/checkbox.jsx","fields/switch.jsx","fields/radio.jsx","fields/date.jsx","fields/dateRange.jsx","fields/time.jsx","fields/file.jsx","fields/number.jsx","fields/select.jsx","fields/index.js","fields/multiSelect.jsx","containers/configurator/components/preview/index.jsx","containers/configurator/index.jsx","containers/index.jsx","index.js"],"names":["uuid","n","arguments","length","undefined","replace","Math","random","toString","slice","TextFieldDefinition","Object","classCallCheck","this","FiledTypes","Page","name","labe","icon","rank","Group","Text","buildDefinition","d","Number","Select","Boolean","Date","File","Field","_ref","_ref$id","id","_ref$type","type","definition","_ref$title","title","description","_ref$order","order","_ref$visibleIf","visibleIf","_ref$fields","fields","map","f","header","_ref$groups","groups","g","defaultState","selected","form","pages","setPages","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","stop","_x","apply","setGroups","page","_ref2","_callee2","_context2","_x2","setFields","group","_ref3","_callee3","_context3","_x3","selectItem","field","_ref4","_callee4","_context4","_x4","list","screen","width","height","panel","setDimensions","rect","topOffset","window","innerWidth","innerHeight","top","data","middleware","thunk","appReducer","combineReducers","configurator","state","action","objectSpread","sgPages","p","sfPages","ui","composedEnhancers","compose","applyMiddleware","concat","store","createStore","ListItem","_this$props","props","_this$props$item","item","onSelect","openPanel","_this$props$picked","picked","itemSelected","dragHandleProps","react_default","createElement","className","buttons","minimal","onClick","assign","React","Component","FieldsPanel","renderBreadcrumb","text","Classes","BREADCRUMB","BREADCRUMB_CURRENT","_this2","_this$props$fields","closePanel","menu","card","elevation","toConsumableArray","simplebar_react_esm","style","ref","el","draggable","js_default","itemKey","template","padding","springConfig","stiffness","damping","onMoveEnd","newList","i","container","connect","find","bindActionCreators","GroupsPanel","openFieldsPanel","_this","component","_this$props2","_this$props2$groups","PagesPanel","openGroupsPanel","_this$props$pages","_this$props$selected","Navigator","panelStack","initialPanel","showPanelHeader","Properties","possibleConstructorReturn","getPrototypeOf","call","Elevation","ONE","InputField","defaultValue","_this$props$id","validate","_this$props$type","label","placeholder","info","extra","formik_esm","render","formGroup","helperText","labelFor","labelInfo","inputGroup","fill","TagField","onChange","value","persist","target","clearButton","disabled","_this$props2$id","_this$props2$type","tagInput","addOnBlur","tagProps","rightElement","v","values","CheckboxField","controls","checked","SwitchField","RadioField","_this$props$inline","inline","_this$props$options","options","radioGroup","selectedValue","index","key","DateField","momentFormatter","_this$props$format","format","formatDate","date","locale","moment","parseDate","str","toDate","dateInput","DateRangeField","dateRangeInput","TimeField","_this$props2$useAmPm","useAmPm","timePicker","selectAllOnFocus","FileField","setPendingFile","file","cb","setState","pending","setProcessedFile","filter","pend","processed","onRemove","processFile","reader","FileReader","readAsDataURL","onload","fileInfo","size","round","base64","result","bind","assertThisInitialized","_this$props2$multi","multi","_this$props2$types","types","spinner","tag_tag","rc_upload_es","accept","join","multiple","beforeUpload","fileObject","onStart","onSuccess","onProgress","onError","customRequest","uploadProps","rightIcon","NumberField","numericInput","max","MAX_SAFE_INTEGER","allowNumericCharactersOnly","onValueChange","SelectField","onItemSelect","renderOption","option","handleClick","modifiers","matchesPredicate","menuItem","active","activeOption","o","select_select","items","filterable","itemRenderer","inputProps","noResults","Fields","Input","Tag","Checkbox","Switch","Radio","DateRange","Time","MultiSelect","fieldValue","includes","fv","_","__","onClear","_this$props3","_ref4$value","shouldDismissPopover","renderTag","_ref5","_this$props4","_this$props4$id","_ref6","multiSelect","c","tagRenderer","popoverProps","tagInputProps","selectedItems","usePortal","Preview","error","onSubmit","console","log","enableReinitialize","initialValues","tag","number","is_true","switch","radio","select","validationSchema","Yup","shape","required","errors","wordBreak","JSON","stringify","FormConfigurator","updateWindowDimensions","ReactDOM","findDOMNode","getBoundingClientRect","addEventListener","removeEventListener","components_navigator","properties","preview","FormGenerator","FocusStyleManager","onlyShowFocusOnTabs","es","navbar","navbarGroup","navbarHeading","navbarDivider","MINIMAL","containers_configurator","root","document","getElementById","containers"],"mappings":"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","file":"static/js/main.8e5ab214.chunk.js","sourcesContent":["export const uuid = (n = 36) => {\n    return '00000000-0000-4000-8000-000000000000'.replace(/0/g, () => (0 | (Math.random() * 16)).toString(16)).slice(0, n);\n};\n","export class TextFieldDefinition {}\n","import { TextFieldDefinition } from './text';\n\nexport const FiledTypes = {\n    Page: { name: 'FT_PAGE', labe: 'Page', icon: 'File', rank: 1000 },\n    Group: { name: 'FT_GROUP', labe: 'Group', icon: 'Bookmark', rank: 900 },\n    Text: { name: 'FT_TEXT', labe: 'Text', buildDefinition: d => new TextFieldDefinition(d), icon: 'Type', rank: 100 },\n    Number: {\n        name: 'FT_NUMBER',\n        labe: 'Number',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'Hash',\n        rank: 100\n    },\n    Select: {\n        name: 'FT_SELECT',\n        labe: 'Select',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'List',\n        rank: 100\n    },\n    Boolean: {\n        name: 'FT_BOOLEAN',\n        labe: 'Checkbox',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'ToggleLeft',\n        rank: 100\n    },\n    Date: {\n        name: 'FT_DATE',\n        labe: 'Date',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'Calendar',\n        rank: 100\n    },\n    File: { name: 'FT_FILE', labe: 'File', buildDefinition: d => new TextFieldDefinition(d), icon: 'Upload', rank: 100 }\n};\n","import { uuid } from '../utilities/common';\nimport { FiledTypes } from './definitions/fieldTypes';\n\nexport class Field {\n    id;\n    title;\n    description;\n    type;\n    definition;\n    order;\n    visibleIf;\n\n    constructor({ id = uuid(), type = FiledTypes.Text, definition, title = 'New Field', description, order = 0, visibleIf = true }) {\n        this.id = id;\n        this.title = title;\n        this.description = description;\n\n        this.type = type;\n        this.definition = this.type.buildDefinition(definition);\n\n        this.order = order;\n        this.visibleIf = visibleIf;\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Field } from './field';\nimport { FiledTypes } from './definitions/fieldTypes';\n\nexport class Group {\n    id;\n    title;\n    description;\n    order;\n    visibleIf;\n    fields;\n\n    constructor({ id = uuid(), title = 'New Group', description, order = 0, visibleIf = true, fields = [] }) {\n        this.id = id;\n        this.title = title;\n        this.type = FiledTypes.Group;\n        this.description = description;\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.fields = fields.map(f => new Field(f));\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Group } from './group';\nimport { FiledTypes } from './definitions/fieldTypes';\n\nexport class Page {\n    id;\n    title;\n    type;\n    description;\n    header;\n    order;\n    visibleIf;\n    groups;\n\n    constructor({ id = uuid(), title = 'New Page', description, header, order = 0, visibleIf = true, groups = [] }) {\n        this.id = id;\n        this.title = title;\n        this.type = FiledTypes.Page;\n        this.description = description;\n        this.header = header;\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.groups = groups.map(g => new Group(g));\n    }\n}\n","import {\n    CONFIGURATOR_SELECT_ITEM,\n    CONFIGURATOR_REMOVE_ITEM,\n    CONFIGURATOR_SHOW_PROPERTIES,\n    CONFIGURATOR_SET_PAGES,\n    CONFIGURATOR_SET_GROUPS,\n    CONFIGURATOR_SET_FIELDS\n} from './actions';\nimport { TEST_PAGES } from '../testData';\n\nconst defaultState = {\n    selected: {},\n    form: undefined,\n    pages: TEST_PAGES\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        // Select item to display properties\n        case CONFIGURATOR_SELECT_ITEM:\n            return { ...state, selected: { page: action.page, group: action.group, field: action.field } };\n\n        // Assign pages\n        case CONFIGURATOR_SET_PAGES:\n            return { ...state, pages: action.pages };\n        // Assign groups\n        case CONFIGURATOR_SET_GROUPS:\n            const sgPages = state.pages.map(p => (p.id === action.page.id ? { ...p, groups: action.groups } : p));\n            return { ...state, pages: sgPages };\n        // Assign fields\n        case CONFIGURATOR_SET_FIELDS:\n            const sfPages = state.pages.map(p => {\n                return p.id === action.page.id\n                    ? {\n                          ...p,\n                          groups: p.groups.map(g => {\n                              return g.id === action.group.id ? { ...g, fields: action.fields } : g;\n                          })\n                      }\n                    : p;\n            });\n            return { ...state, pages: sfPages };\n\n        default:\n            return state;\n    }\n}\n\nexport const setPages = pages => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, pages });\n};\nexport const setGroups = (page, groups) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_GROUPS, page, groups });\n};\nexport const setFields = (page, group, fields) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_FIELDS, page, group, fields });\n};\n\nexport const selectItem = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SELECT_ITEM, page, group, field });\n};\n\n//\n// --------------------------------------------------------\n//\n\nexport const removeItem = () => async dispatch => {\n    dispatch({ type: CONFIGURATOR_REMOVE_ITEM });\n};\n\nexport const showProperties = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SHOW_PROPERTIES, page, group, field });\n};\n\nexport const setForm = form => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, form });\n};\n","import { Page } from './models/page';\nimport { Group } from './models/group';\nimport { Field } from './models/field';\n\nexport const TEST_PAGES = [\n    new Page({\n        title: 'Intro',\n        groups: [\n            new Group({\n                title: 'Personal Info',\n                fields: [new Field({ title: 'Name' }), new Field({ title: 'Email' })]\n            }),\n            new Group({\n                title: 'Location',\n                fields: [\n                    new Field({ title: 'Country' }),\n                    new Field({ title: 'City' }),\n                    new Field({ title: 'Address' }),\n                    new Field({ title: 'Post Code' })\n                ]\n            })\n        ]\n    })\n    // new Page({\n    //     title: 'Tax Details',\n    //     groups: [\n    //         new Group({ title: 'SSN', fields: [new Field({ title: 'Type' }), new Field({ title: 'Number' })] }),\n    //         new Group({\n    //             title: 'Registration',\n    //             fields: [new Field({ title: 'Date' }), new Field({ title: 'Unit' })]\n    //         })\n    //     ]\n    // }),\n    // new Page({ title: 'Documents 1' }),\n    // new Page({ title: 'Documents 2' }),\n    // new Page({ title: 'Documents 3' }),\n    // new Page({\n    //     title: 'Some extra long PAGE name',\n    //     groups: [\n    //         new Group({\n    //             title: 'Some extra long GROUP name, seriously really long name',\n    //             fields: [new Field({ title: 'Some extra long FILED name' })]\n    //         })\n    //     ]\n    // })\n];\n","export const CONFIGURATOR_SELECT_ITEM = 'CONFIGURATOR_SELECT_ITEM';\nexport const CONFIGURATOR_REMOVE_ITEM = 'CONFIGURATOR_REMOVE_ITEM';\nexport const CONFIGURATOR_SHOW_PROPERTIES = 'CONFIGURATOR_SHOW_PROPERTIES';\nexport const CONFIGURATOR_SET_FORM = 'CONFIGURATOR_SET_FORM';\nexport const CONFIGURATOR_SET_PAGES = 'CONFIGURATOR_SET_PAGES';\nexport const CONFIGURATOR_SET_GROUPS = 'CONFIGURATOR_SET_GROUPS';\nexport const CONFIGURATOR_SET_FIELDS = 'CONFIGURATOR_SET_FIELDS';\n\nexport const UI_SET_DIMENSIONS = 'UI_SET_DIMENSIONS';\n\nexport const FIELDS_SET_FIELD = 'FIELDS_SET_FIELD';\n","import { FIELDS_SET_FIELD } from './actions';\n\nconst defaultState = {\n    list: undefined\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case FIELDS_SET_FIELD:\n            return { ...state, list: action.data };\n\n        default:\n            return state;\n    }\n}\n","import { UI_SET_DIMENSIONS } from './actions';\n\nconst defaultState = {\n    screen: { width: 0, height: 0 },\n    panel: { height: 0 }\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case UI_SET_DIMENSIONS:\n            return { ...state, ...action.data };\n\n        default:\n            return state;\n    }\n}\n\nexport const setDimensions = rect => async dispatch => {\n    const screen = { width: window.innerWidth, height: window.innerHeight };\n    const topOffset = rect ? rect.top : 0;\n    const panel = { height: screen.height - topOffset - 59 };\n\n    dispatch({ type: UI_SET_DIMENSIONS, data: { screen, panel } });\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { combineReducers } from 'redux';\n\nimport configurator from './configurator';\nimport fields from './fields';\nimport ui from './ui';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    if (typeof window === 'object') {\n        const { __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ } = window;\n        if (__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && typeof __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function') {\n            enhancers.push(__REDUX_DEVTOOLS_EXTENSION_COMPOSE__());\n        }\n    }\n}\n\nconst appReducer = combineReducers({\n    configurator,\n    ui,\n    fields\n});\n\nconst rootReducer = (state, action) => appReducer(state, action);\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\nexport const store = createStore(rootReducer, initialState, composedEnhancers);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass ListItem extends React.Component {\n    render() {\n        const {\n            item: {\n                data: { title },\n                selected,\n                onSelect,\n                openPanel\n            },\n            picked = this.props.itemSelected > 0,\n            dragHandleProps\n        } = this.props;\n\n        return (\n            <div className={`fg-panel-item ${picked ? 'dragged' : ''} ${selected ? 'selected' : ''}`}>\n                <Button minimal={true} icon={selected ? 'manually-entered-data' : 'cog'} onClick={onSelect} />\n                <div className=\"item-title ellipsis\" {...dragHandleProps}>\n                    {title}\n                </div>\n                {openPanel && <Button minimal={true} icon=\"caret-right\" onClick={openPanel} />}\n            </div>\n        );\n    }\n}\n\nexport default ListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, Classes } from '@blueprintjs/core';\nimport ListItem from './item';\nimport { selectItem, setFields } from '../../../../../state/configurator';\nimport { Field } from '../../../../../models/field';\n\nclass FieldsPanel extends React.Component {\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, group, fields = [], closePanel, height, selected, selectItem, setFields } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page, group);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{group.title}</div>\n                        </div>\n                        <Button\n                            icon=\"plus\"\n                            minimal={true}\n                            onClick={() => setFields(page, group, [...fields, new Field({ title: 'New Field' })])}\n                        />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={fields.map(field => ({\n                                    id: field.id,\n                                    data: field,\n                                    selected: selected && selected.field && selected.field.id === field.id,\n                                    onSelect: () => selectItem(page, group, field)\n                                }))}\n                                onMoveEnd={newList =>\n                                    setFields(page, group, newList.map((f, i) => ({ ...f.data, order: i })))\n                                }\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const group = ((page || {}).groups || []).find(g => g.id === props.group.id);\n    const fields = (group || {}).fields;\n    return {\n        page,\n        group,\n        fields,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            selectItem,\n            setFields\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, Classes } from '@blueprintjs/core';\nimport FieldsPanel from './fields';\nimport ListItem from './item';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\nimport { Group } from '../../../../../models/group';\n\nclass GroupsPanel extends React.Component {\n    openFieldsPanel = group => {\n        const { page, openPanel } = this.props;\n        openPanel({ component: FieldsPanel, props: { page, group } });\n    };\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, groups = [], closePanel, height, selected, setGroups, selectItem } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{page.title}</div>\n                        </div>\n                        <Button\n                            icon=\"plus\"\n                            minimal={true}\n                            onClick={() => setGroups(page, [...groups, new Group({ title: 'New Group' })])}\n                        />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={groups.map(group => ({\n                                    id: group.id,\n                                    data: group,\n                                    selected: selected && selected.group && selected.group.id === group.id,\n                                    onSelect: () => selectItem(page, group),\n                                    openPanel: () => this.openFieldsPanel(group)\n                                }))}\n                                onMoveEnd={newList => setGroups(page, newList.map((g, i) => ({ ...g.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const groups = (page || {}).groups;\n    return {\n        page,\n        groups,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SimpleBar from 'simplebar-react';\nimport DraggableList from 'react-draggable-list';\nimport { Card, Menu, Button } from '@blueprintjs/core';\nimport GroupsPanel from './groups';\nimport ListItem from './item';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport { Page } from '../../../../../models/page';\n\nclass PagesPanel extends React.Component {\n    openGroupsPanel = page => {\n        const { openPanel } = this.props;\n        openPanel({ component: GroupsPanel, props: { page } });\n    };\n\n    render() {\n        const { height, pages = [], selected = {}, setPages, selectItem } = this.props;\n\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Pages</span>\n                        </div>\n                        <Button\n                            icon=\"plus\"\n                            minimal={true}\n                            onClick={() => setPages([...pages, new Page({ title: 'New Page', order: pages.length })])}\n                        />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={pages.map(page => ({\n                                    id: page.id,\n                                    data: page,\n                                    selected: selected && selected.page && selected.page.id === page.id,\n                                    onSelect: () => selectItem(page),\n                                    openPanel: () => this.openGroupsPanel(page)\n                                }))}\n                                onMoveEnd={newList => setPages(newList.map((p, i) => ({ ...p.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    pages: state.configurator.pages,\n    selected: state.configurator.selected,\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PagesPanel);\n","import React from 'react';\nimport { PanelStack } from '@blueprintjs/core';\nimport PagesPanel from './panels/pages';\n\nclass Navigator extends React.Component {\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-navigator\" style={{ height: `${height - 70}px` }}>\n                <div className=\"panel-wrapper bp3-elevation-1\">\n                    <PanelStack initialPanel={{ component: PagesPanel }} showPanelHeader={false} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navigator;\n","import React from 'react';\nimport { Card, Elevation } from '@blueprintjs/core';\n\nclass Properties extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div className=\"configurator-properties\">\n                <Card elevation={Elevation.ONE}>\n                    <h4 className=\"configurator-pane-title\">properties</h4>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Properties;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, InputGroup } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass InputField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <InputGroup\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default InputField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Button, TagInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TagField extends React.Component {\n    defaultValue = [];\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: value || []\n            }\n        });\n    };\n\n    clearButton = field => {\n        const { disabled } = this.props;\n        if (field.value.length === 0) return null;\n\n        return <Button disabled={disabled} icon={'cross'} minimal={true} onClick={() => this.onChange([], field)} />;\n    };\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TagInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                addOnBlur={true}\n                                tagProps={{ minimal: true }}\n                                rightElement={this.clearButton(field)}\n                                onChange={v => this.onChange(v, field)}\n                                values={field.value || []}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TagField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass CheckboxField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Checkbox\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default CheckboxField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Switch } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SwitchField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Switch\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SwitchField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, RadioGroup, Radio } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass RadioField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, inline = true, validate, options = [], label, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            className={className}\n                        >\n                            <RadioGroup\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                label={label}\n                                onChange={field.onChange}\n                                selectedValue={field.value}\n                                className={`radio-field`}\n                                inline={inline}\n                            >\n                                {options.map(({ value, label }, index) => (\n                                    <Radio\n                                        key={index}\n                                        label={label}\n                                        value={value.toString()}\n                                        checked={field.value === value}\n                                    />\n                                ))}\n                            </RadioGroup>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default RadioField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'M/D/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <DateInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateRangeInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateRangeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'M/D/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <DateRangeInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateRangeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { TimePicker } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TimeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, useAmPm = true, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TimePicker\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                useAmPm={useAmPm}\n                                selectAllOnFocus={true}\n                                onChange={v => this.onChange(v, field)}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TimeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Spinner, Button, Tag } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\nimport Upload from 'rc-upload';\n\nimport './fields.scss';\n\nclass FileField extends React.Component {\n    defaultValue = [];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pending: [],\n            processed: []\n        };\n\n        this.setPendingFile = this.setPendingFile.bind(this);\n        this.setProcessedFile = this.setProcessedFile.bind(this);\n        this.processFile = this.processFile.bind(this);\n    }\n\n    setPendingFile = (file, cb) => {\n        this.setState({ ...this.state, pending: [...this.state.pending, file] }, cb);\n    };\n    setProcessedFile = (file, field) => {\n        const pending = [...this.state.pending.filter(pend => pend.id !== file.id)];\n        this.setState(\n            {\n                ...this.state,\n                processed: [...this.state.processed, file],\n                pending\n            },\n            () => this.onChange(this.state.processed, field)\n        );\n    };\n    onRemove = (id, field) => {\n        const processed = this.state.processed.filter(f => f.id !== id);\n        this.setState({ ...this.state, processed }, () => this.onChange(processed, field));\n    };\n\n    processFile = ({ id, file }, field) => {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            let fileInfo = {\n                id,\n                name: file.name,\n                type: file.type,\n                size: Math.round(file.size / 1000) + ' kB',\n                base64: reader.result,\n                file: file\n            };\n\n            this.setProcessedFile(fileInfo, field);\n        };\n    };\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            multi = false,\n            types = [],\n            validate,\n            label,\n            placeholder,\n            info,\n            className\n        } = this.props;\n\n        const uploadProps = field => ({\n            action: 'api uri',\n            type: 'drag',\n            accept: types.join(','),\n            multiple: multi,\n            beforeUpload: file => {\n                const fileObject = { file, id: uuid() };\n                this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n            },\n            onStart: () => null,\n            onSuccess: () => null,\n            onProgress: () => null,\n            onError: () => null,\n            customRequest: () => null\n        });\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <div>\n                                {this.state.pending.length > 0 && <Spinner size={15} />}\n                                {this.state.processed.map((p, i) => (\n                                    <Tag\n                                        key={i}\n                                        minimal={true}\n                                        onRemove={() => this.onRemove(p.id, field)}\n                                        fill={true}\n                                        className=\"mg-b-5\"\n                                    >\n                                        {p.name}\n                                    </Tag>\n                                ))}\n                                <Upload\n                                    {...uploadProps(field)}\n                                    beforeUpload={file => {\n                                        const fileObject = { file, id: uuid() };\n                                        this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n                                    }}\n                                >\n                                    <Button rightIcon=\"upload\" text={placeholder} />\n                                </Upload>\n                            </div>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default FileField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, NumericInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass NumberField extends React.Component {\n    defaultValue = 0;\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <NumericInput\n                                max={Number.MAX_SAFE_INTEGER}\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                placeholder={placeholder}\n                                fill={true}\n                                allowNumericCharactersOnly={false}\n                                onValueChange={v => this.onChange(v, field)}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default NumberField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { Select } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = ({ value }, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    renderOption = (option, { handleClick, modifiers }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                className=\"fg-field-fill\"\n                active={modifiers.active}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n            />\n        );\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    const activeOption = options.find(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Select\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                itemRenderer={this.renderOption}\n                                className=\"fg-field-fill\"\n                                inputProps={{ className: 'fg-field-fill' }}\n                                noResults={<MenuItem disabled={true} text=\"-\" />}\n                                onItemSelect={v => this.onItemSelect(v, field)}\n                            >\n                                <Button\n                                    rightIcon=\"caret-down\"\n                                    text={activeOption ? activeOption.label : placeholder}\n                                    className=\"fg-field-fill space-between\"\n                                />\n                            </Select>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SelectField;\n","import InputField from './input';\nimport TagField from './tag';\nimport CheckboxField from './checkbox';\nimport SwitchField from './switch';\nimport RadioField from './radio';\nimport DateField from './date';\nimport DateRangeField from './dateRange';\nimport TimeField from './time';\nimport FileField from './file';\nimport NumberField from './number';\nimport SelectField from './select';\nimport MultiSelectField from './multiSelect';\n\nexport const Fields = {\n    Input: InputField,\n    Tag: TagField,\n    Checkbox: CheckboxField,\n    Switch: SwitchField,\n    Radio: RadioField,\n    Date: DateField,\n    DateRange: DateRangeField,\n    Time: TimeField,\n    File: FileField,\n    Number: NumberField,\n    Select: SelectField,\n    MultiSelect: MultiSelectField\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass MultiSelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = ({ value }, field) => {\n        const { id, name } = this.props;\n        const fieldValue = field.value || [];\n        const values = fieldValue.includes(value) ? fieldValue.filter(fv => fv !== value) : [...fieldValue, value];\n\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onRemove = (_, index, field) => {\n        const { id, name } = this.props;\n        const values = (field.value || []).filter((__, i) => i !== index);\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onClear = ({ onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: []\n            }\n        });\n    };\n\n    renderOption = (option, { handleClick, modifiers }, { value = [] }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                icon={value.includes(option.value) ? 'tick' : 'blank'}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n                shouldDismissPopover={false}\n            />\n        );\n    };\n\n    renderTag = (value, { tagProps, onRemove, rightElement }) => {\n        const { options } = this.props;\n        return (options.find(o => o.value === value) || {}).label;\n    };\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    // const selectedOptions = options.filter(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <MultiSelect\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                placeholder={placeholder}\n                                itemRenderer={(o, c) => this.renderOption(o, c, field)}\n                                tagRenderer={this.renderTag}\n                                popoverProps={{\n                                    className: 'fg-field-fill'\n                                }}\n                                tagInputProps={{\n                                    className: 'fg-field-fill',\n                                    tagProps: { minimal: true },\n                                    onRemove: (_, index) => this.onRemove(_, index, field),\n                                    rightElement:\n                                        !!field.value && field.value.length > 0 ? (\n                                            <Button icon=\"cross\" minimal={true} onClick={() => this.onClear(field)} />\n                                        ) : (\n                                            undefined\n                                        )\n                                }}\n                                noResults={<MenuItem disabled={true} text=\"No results.\" />}\n                                onItemSelect={v => this.onItemSelect(v, field)}\n                                selectedItems={field.value || []}\n                                usePortal={false}\n                                inline={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default MultiSelectField;\n","import React from 'react';\nimport { Card, Elevation } from '@blueprintjs/core';\nimport { Fields } from '../../../../fields';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nclass Preview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    validate = value => {\n        let error;\n        if (!value || value === '') {\n            error = 'Required';\n        }\n        return error;\n    };\n\n    onSubmit = values => {\n        console.log(values);\n    };\n\n    render() {\n        return (\n            <div className=\"configurator-preview\">\n                <Card elevation={Elevation.ONE}>\n                    <h4 className=\"configurator-pane-title\">preview</h4>\n\n                    <Formik\n                        enableReinitialize={true}\n                        initialValues={{\n                            text: '',\n                            tag: [],\n                            number: 0.0,\n                            is_true: false,\n                            switch: false,\n                            radio: '',\n                            select: null\n                        }}\n                        validationSchema={Yup.object().shape({\n                            select: Yup.mixed().required('Required')\n                        })}\n                        onSubmit={this.onSubmit}\n                        render={({ values, errors }) => {\n                            return (\n                                <Form>\n                                    <div className=\"fg-field-wrapper\">\n                                        <Fields.Input\n                                            name={'text'}\n                                            label={'text'}\n                                            placeholder={'placeholder'}\n                                            className=\"fg-field width-40\"\n                                        />\n                                        <Fields.Tag\n                                            name={'tag'}\n                                            label={'tag'}\n                                            placeholder={'placeholder'}\n                                            className=\"fg-field width-60\"\n                                        />\n                                        <Fields.Checkbox\n                                            name={'is_true'}\n                                            label={'Is true'}\n                                            placeholder={'is true'}\n                                            className=\"fg-field width-50\"\n                                        />\n\n                                        <Fields.Radio\n                                            name={'radio'}\n                                            label={'radio'}\n                                            options={[\n                                                { value: 1, label: 'one' },\n                                                { value: 2, label: 'two' },\n                                                { value: 3, label: 'three' }\n                                            ]}\n                                            className=\"fg-field width-50\"\n                                        />\n                                        <Fields.Switch\n                                            name={'switch'}\n                                            label={'Is on'}\n                                            placeholder={'is on'}\n                                            className=\"fg-field width-20\"\n                                        />\n                                        <Fields.Number\n                                            name={'number'}\n                                            label={'number'}\n                                            placeholder={'placeholder'}\n                                            className=\"fg-field width-30\"\n                                        />\n                                        <Fields.Time name={'time'} label={'time'} className=\"fg-field width-25\" />\n                                        <Fields.Date name={'date'} label={'date'} className=\"fg-field width-25\" />\n                                        <Fields.DateRange\n                                            name={'date_range'}\n                                            label={'date range'}\n                                            className=\"fg-field width-100\"\n                                        />\n                                        <Fields.Select\n                                            name={'select'}\n                                            label={'select'}\n                                            info={\n                                                \"(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.)\"\n                                            }\n                                            options={[\n                                                { value: 1, label: 'one' },\n                                                { value: 2, label: 'two' },\n                                                { value: 3, label: 'three' }\n                                            ]}\n                                            placeholder={'select one option'}\n                                            className=\"fg-field width-50\"\n                                        />\n                                        <Fields.MultiSelect\n                                            name={'multi_select'}\n                                            label={'multi select'}\n                                            info={'(select some options, multiple if applicable)'}\n                                            options={[\n                                                { value: 1, label: 'one' },\n                                                { value: 2, label: 'two' },\n                                                { value: 3, label: 'three' }\n                                            ]}\n                                            placeholder={'select options'}\n                                            className=\"fg-field width-50\"\n                                        />\n                                        <Fields.File\n                                            name={'file'}\n                                            label={'file'}\n                                            multi={true}\n                                            placeholder={'put some files'}\n                                            className=\"fg-field width-100\"\n                                        />\n                                    </div>\n                                    <p style={{ wordBreak: 'break-all' }}>{JSON.stringify(values)}</p>\n                                    <p style={{ wordBreak: 'break-all' }}>{JSON.stringify(errors)}</p>\n                                    <button type=\"submit\">submit</button>\n                                </Form>\n                            );\n                        }}\n                    />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Preview;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Navigator from './components/navigator';\nimport Properties from './components/properties';\nimport Preview from './components/preview';\nimport { setDimensions } from '../../state/ui';\n\nimport 'simplebar/dist/simplebar.min.css';\nimport './configurator.scss';\n\nclass FormConfigurator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        const { setDimensions } = this.props;\n        var rect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n        setDimensions(rect);\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-wrapper\">\n                <Navigator height={height} />\n                <Properties height={height} />\n                <Preview height={height} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setDimensions\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormConfigurator);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from '../state';\nimport FormConfigurator from './configurator';\nimport {\n    FocusStyleManager,\n    Navbar,\n    NavbarGroup,\n    NavbarDivider,\n    NavbarHeading,\n    Button,\n    Classes\n} from '@blueprintjs/core';\n\nclass FormGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        FocusStyleManager.onlyShowFocusOnTabs();\n\n        return (\n            <Provider store={store}>\n                <div className=\"form-generator\">\n                    <Navbar className=\"fg-navbar\">\n                        <NavbarGroup>\n                            <NavbarHeading>Form Generator</NavbarHeading>\n                            <NavbarDivider />\n                            <Button className={Classes.MINIMAL} icon=\"floppy-disk\" text=\"Save\" />\n                        </NavbarGroup>\n                    </Navbar>\n                    <div className=\"stage\">\n                        <FormConfigurator />\n                    </div>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default FormGenerator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FormGenerator from './containers';\n\nimport './styles/root.scss';\n\nconst root = document.getElementById('root');\nReactDOM.render(<FormGenerator />, root);\n"],"sourceRoot":""}