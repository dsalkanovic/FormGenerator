{"version":3,"sources":["utilities/common.jsx","fields/input.jsx","fields/tag.jsx","fields/checkbox.jsx","fields/switch.jsx","fields/radio.jsx","fields/date.jsx","fields/dateRange.jsx","fields/time.jsx","fields/file.jsx","fields/number.jsx","fields/slider.jsx","fields/select.jsx","fields/index.js","fields/multiSelect.jsx","models/definitions/text.jsx","models/definitions/fieldTypes.jsx","models/field.jsx","models/group.jsx","models/page.jsx","state/configurator.jsx","testData.jsx","state/actions.jsx","state/fields.jsx","state/ui.jsx","state/index.jsx","containers/configurator/components/navigator/panels/item.jsx","containers/configurator/components/navigator/panels/fields.jsx","containers/configurator/components/navigator/panels/groups.jsx","containers/configurator/components/navigator/panels/pages.jsx","containers/configurator/components/navigator/index.jsx","containers/configurator/components/properties/forms/field.jsx","containers/configurator/components/properties/forms/group.jsx","containers/configurator/components/properties/components/propertiesGroup.jsx","containers/configurator/components/properties/forms/page.jsx","containers/configurator/components/properties/index.jsx","containers/renderer/components/buttons.jsx","containers/renderer/components/field.jsx","containers/renderer/components/group.jsx","containers/renderer/components/page.jsx","containers/renderer/index.jsx","containers/configurator/components/preview/index.jsx","containers/configurator/index.jsx","containers/index.jsx","renderedForm.jsx","index.js"],"names":["uuid","n","arguments","length","undefined","replace","Math","random","toString","slice","isEmpty","string","InputField","defaultValue","_this$props","this","props","_this$props$id","id","name","validate","_this$props$type","type","label","placeholder","info","className","extra","react_default","a","createElement","formik_esm","render","_ref","field","formGroup","helperText","labelFor","labelInfo","inputGroup","Object","assign","onChange","e","fill","autoComplete","concat","React","Component","TagField","value","_this","persist","target","clearButton","disabled","button_buttons","icon","minimal","onClick","_this2","_this$props2","_this$props2$id","_this$props2$type","_ref2","tagInput","addOnBlur","tagProps","rightElement","v","values","CheckboxField","controls","checked","SwitchField","RadioField","_this$props$inline","inline","_this$props$options","options","radioGroup","selectedValue","map","index","key","DateField","momentFormatter","_this$props$format","format","formatDate","date","locale","moment","parseDate","str","toDate","dateInput","DateRangeField","dateRangeInput","TimeField","_this$props2$useAmPm","useAmPm","timePicker","selectAllOnFocus","FileField","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setPendingFile","file","cb","setState","objectSpread","state","pending","toConsumableArray","setProcessedFile","filter","pend","processed","onRemove","f","processFile","reader","FileReader","readAsDataURL","onload","fileInfo","size","round","base64","result","bind","assertThisInitialized","_this$props2$multi","multi","_this$props2$types","types","_ref3","spinner","p","i","tag_tag","rc_upload_es","action","accept","join","multiple","beforeUpload","fileObject","onStart","onSuccess","onProgress","onError","customRequest","uploadProps","rightIcon","text","NumberField","numericInput","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","allowNumericCharactersOnly","onValueChange","SliderField","_callee","submitForm","_this$props$submitOnC","submitOnChange","regenerator_default","wrap","_context","prev","next","stop","_this$props2$extra","stepSize","labelStepSize","_this$props2$disabled","_ref4","form","slider","vertical","SelectField","onItemSelect","renderOption","option","_ref5","handleClick","modifiers","matchesPredicate","menuItem","active","_ref6","activeOption","find","o","select_select","items","filterable","itemRenderer","inputProps","noResults","Fields","Input","Tag","Checkbox","Switch","Radio","Date","DateRange","Time","File","Slider","Select","MultiSelect","fieldValue","includes","fv","_","__","onClear","_this$props3","_ref4$value","shouldDismissPopover","renderTag","_this$props4","_this$props4$id","multiSelect","c","tagRenderer","popoverProps","tagInputProps","selectedItems","usePortal","TextFieldDefinition","_ref$validation","validation","_ref$isRequired","isRequired","_ref$isMulti","isMulti","_ref$mask","mask","validationFunc","email","Yup","zip","test","val","ssn","matches","message","excludeEmptyString","FieldTypeDefinitions","Page","rank","Group","Text","buildDefinition","d","Boolean","FieldTypes","Field","_ref$id","property","_ref$type","_ref$definition","definition","_ref$width","width","mobile","desktop","_ref$title","title","description","_ref$order","order","_ref$visibleIf","visibleIf","typeDefinition","Map","ftd","buildTypeDefinitionDetails","_ref$description","_ref$block","block","_ref$fields","fields","page","_page$id","_page$title","_page$description","_page$header","header","_page$order","_page$visibleIf","_page$groups","groups","_page$buttons","buttons","image","show","showProgress","g","cancel","back","save","defaultState","selected","pages","setPages","asyncToGenerator","mark","dispatch","_x","apply","setGroups","_callee2","_context2","_x2","setFields","group","_callee3","_context3","_x3","selectItem","_callee4","_context4","_x4","list","screen","height","panel","setDimensions","rect","topOffset","window","innerWidth","innerHeight","top","data","middleware","thunk","appReducer","combineReducers","configurator","sgPages","sfPages","ui","composedEnhancers","compose","applyMiddleware","store","createStore","ListItem","_this$props$item","item","_this$props$item$data","_this$props$item$data2","onSelect","openPanel","_this$props$picked","picked","itemSelected","dragHandleProps","FieldsPanel","renderBreadcrumb","Classes","BREADCRUMB","BREADCRUMB_CURRENT","_this$props$fields","_this$props$selected","_this$props2$group","_this$props2$fields","closePanel","menu","card","elevation","popover","content","toArray","slicedToArray","_ref2$","simplebar_react_esm","style","ref","el","draggable","js_default","itemKey","template","padding","springConfig","stiffness","damping","onMoveEnd","newList","container","connect","bindActionCreators","GroupsPanel","addGroup","_this$props$groups","newGroup","openFieldsPanel","component","_this$props3$groups","_this$props3$selected","_this$props4$groups","PagesPanel","addPage","_this$props$pages","newPage","openGroupsPanel","_this$props2$pages","_this$props2$selected","_this$props3$pages","Navigator","panelStack","initialPanel","showPanelHeader","FieldProperties","onSubmit","enableReinitialize","initialValues","validationSchema","shape","handleChange","Fragment","intent","GroupProperties","PropertiesGroup","toggle","open","children","PageProperties","propertiesGroup","Properties","renderPropertiesForm","forms_field","forms_group","forms_page","FormButtons","_this$props$buttons","Intent","SUCCESS","FieldRenderer","getFieldName","getField","_this$props2$field","_this$props2$definiti","fieldProps","JSON","stringify","_this$props$field","GroupRenderer","renderFields","_this$props$group","_group$fields","_group$width","components_field","_group$width2","_group$fields2","PageRenderer","progress","borderRadius","marginBottom","backgroundImage","components_group","FromRenderer","console","log","getValidationSchema","flat","forEach","pageIndex","activePageOverride","isNaN","parseInt","components_page","progressBar","animate","position","components_buttons","Preview","containers_renderer","FormConfigurator","updateWindowDimensions","ReactDOM","findDOMNode","getBoundingClientRect","addEventListener","removeEventListener","components_navigator","properties","preview","FormGenerator","FocusStyleManager","onlyShowFocusOnTabs","es","navbar","navbarGroup","navbarHeading","navbarDivider","history","push","getState","menuDivider","containers_configurator","_this$props$location$","location","_this$props$location$2","root","document","getElementById","react_router_dom","react_router","exact","path","RenderedForm"],"mappings":"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","file":"static/js/main.0274bf45.chunk.js","sourcesContent":["export const uuid = (n = 36) => {\n    return '00000000-0000-4000-8000-000000000000'\n        .replace(/0/g, () => (0 | (Math.random() * 16)).toString(16))\n        .slice(0, n);\n};\n\nexport const isEmpty = string => {\n    return string === undefined || string === null || string === '';\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, InputGroup } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass InputField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <InputGroup\n                                {...field}\n                                {...extra}\n                                onChange={e => field.onChange(e)}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                autoComplete={`${uuid()}`}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default InputField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Button, TagInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TagField extends React.Component {\n    defaultValue = [];\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: value || []\n            }\n        });\n    };\n\n    clearButton = field => {\n        const { disabled } = this.props;\n        if (!field.value || field.value.length === 0) return null;\n\n        return <Button disabled={disabled} icon={'cross'} minimal={true} onClick={() => this.onChange([], field)} />;\n    };\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TagInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                addOnBlur={true}\n                                tagProps={{ minimal: true }}\n                                rightElement={this.clearButton(field)}\n                                onChange={v => this.onChange(v, field)}\n                                values={field.value || []}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TagField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass CheckboxField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Checkbox\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default CheckboxField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Switch } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SwitchField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Switch\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SwitchField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, RadioGroup, Radio } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass RadioField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, inline = true, validate, options = [], label, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            className={className}\n                        >\n                            <RadioGroup\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                label={label}\n                                onChange={field.onChange}\n                                selectedValue={field.value}\n                                className={`radio-field`}\n                                inline={inline}\n                            >\n                                {options.map(({ value, label }, index) => (\n                                    <Radio\n                                        key={index}\n                                        label={label}\n                                        value={value.toString()}\n                                        checked={field.value === value}\n                                    />\n                                ))}\n                            </RadioGroup>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default RadioField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'M/D/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={`${className} fg-date-field`}\n                        >\n                            <DateInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateRangeInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateRangeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'M/D/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <DateRangeInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateRangeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { TimePicker } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TimeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, useAmPm = true, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TimePicker\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                useAmPm={useAmPm}\n                                selectAllOnFocus={true}\n                                onChange={v => this.onChange(v, field)}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TimeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Spinner, Button, Tag } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\nimport Upload from 'rc-upload';\n\nimport './fields.scss';\n\nclass FileField extends React.Component {\n    defaultValue = [];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pending: [],\n            processed: []\n        };\n\n        this.setPendingFile = this.setPendingFile.bind(this);\n        this.setProcessedFile = this.setProcessedFile.bind(this);\n        this.processFile = this.processFile.bind(this);\n    }\n\n    setPendingFile = (file, cb) => {\n        this.setState({ ...this.state, pending: [...this.state.pending, file] }, cb);\n    };\n    setProcessedFile = (file, field) => {\n        const pending = [...this.state.pending.filter(pend => pend.id !== file.id)];\n        this.setState(\n            {\n                ...this.state,\n                processed: [...this.state.processed, file],\n                pending\n            },\n            () => this.onChange(this.state.processed, field)\n        );\n    };\n    onRemove = (id, field) => {\n        const processed = this.state.processed.filter(f => f.id !== id);\n        this.setState({ ...this.state, processed }, () => this.onChange(processed, field));\n    };\n\n    processFile = ({ id, file }, field) => {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            let fileInfo = {\n                id,\n                name: file.name,\n                type: file.type,\n                size: Math.round(file.size / 1000) + ' kB',\n                base64: reader.result,\n                file: file\n            };\n\n            this.setProcessedFile(fileInfo, field);\n        };\n    };\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            multi = false,\n            types = [],\n            validate,\n            label,\n            placeholder,\n            info,\n            className\n        } = this.props;\n\n        const uploadProps = field => ({\n            action: 'api uri',\n            type: 'drag',\n            accept: types.join(','),\n            multiple: multi,\n            beforeUpload: file => {\n                const fileObject = { file, id: uuid() };\n                this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n            },\n            onStart: () => null,\n            onSuccess: () => null,\n            onProgress: () => null,\n            onError: () => null,\n            customRequest: () => null\n        });\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <div>\n                                {this.state.pending.length > 0 && <Spinner size={15} />}\n                                {this.state.processed.map((p, i) => (\n                                    <Tag\n                                        key={i}\n                                        minimal={true}\n                                        onRemove={() => this.onRemove(p.id, field)}\n                                        fill={true}\n                                        className=\"mg-b-5\"\n                                    >\n                                        {p.name}\n                                    </Tag>\n                                ))}\n                                <Upload\n                                    {...uploadProps(field)}\n                                    beforeUpload={file => {\n                                        const fileObject = { file, id: uuid() };\n                                        this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n                                    }}\n                                >\n                                    <Button rightIcon=\"upload\" text={placeholder} />\n                                </Upload>\n                            </div>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default FileField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, NumericInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass NumberField extends React.Component {\n    defaultValue = 0;\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <NumericInput\n                                min={Number.MIN_SAFE_INTEGER}\n                                max={Number.MAX_SAFE_INTEGER}\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                placeholder={placeholder}\n                                fill={true}\n                                allowNumericCharactersOnly={false}\n                                onValueChange={v => this.onChange(v, field)}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default NumberField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Slider } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SliderField extends React.Component {\n    defaultValue = 0;\n\n    onChange = async (value, { onChange }, { submitForm }) => {\n        const { id, name, submitOnChange = false } = this.props;\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            label,\n            info,\n            className,\n            extra = { min: 1, max: 100, stepSize: 1, labelStepSize: 100 },\n            disabled = false\n        } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field, form }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Slider\n                                disabled={disabled}\n                                {...field}\n                                {...extra}\n                                onChange={v => this.onChange(v, field, form)}\n                                value={field.value}\n                                vertical={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SliderField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { Select } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = async ({ value }, { onChange }, { submitForm }) => {\n        const { id, name, submitOnChange } = this.props;\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    renderOption = (option, { handleClick, modifiers }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                className=\"fg-field-fill\"\n                active={modifiers.active}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n            />\n        );\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field, form }) => {\n                    const activeOption = options.find(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Select\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                itemRenderer={this.renderOption}\n                                className=\"fg-field-fill\"\n                                inputProps={{ className: 'fg-field-fill' }}\n                                noResults={<MenuItem disabled={true} text=\"-\" />}\n                                onItemSelect={v => this.onItemSelect(v, field, form)}\n                            >\n                                <Button\n                                    rightIcon=\"caret-down\"\n                                    text={activeOption ? activeOption.label : placeholder}\n                                    className=\"fg-field-fill space-between\"\n                                />\n                            </Select>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SelectField;\n","import InputField from './input';\nimport TagField from './tag';\nimport CheckboxField from './checkbox';\nimport SwitchField from './switch';\nimport RadioField from './radio';\nimport DateField from './date';\nimport DateRangeField from './dateRange';\nimport TimeField from './time';\nimport FileField from './file';\nimport NumberField from './number';\nimport SliderField from './slider';\nimport SelectField from './select';\nimport MultiSelectField from './multiSelect';\n\nexport const Fields = {\n    Input: InputField,\n    Tag: TagField,\n    Checkbox: CheckboxField,\n    Switch: SwitchField,\n    Radio: RadioField,\n    Date: DateField,\n    DateRange: DateRangeField,\n    Time: TimeField,\n    File: FileField,\n    Number: NumberField,\n    Slider: SliderField,\n    Select: SelectField,\n    MultiSelect: MultiSelectField\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass MultiSelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = ({ value }, field) => {\n        const { id, name } = this.props;\n        const fieldValue = field.value || [];\n        const values = fieldValue.includes(value) ? fieldValue.filter(fv => fv !== value) : [...fieldValue, value];\n\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onRemove = (_, index, field) => {\n        const { id, name } = this.props;\n        const values = (field.value || []).filter((__, i) => i !== index);\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onClear = ({ onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: []\n            }\n        });\n    };\n\n    renderOption = (option, { handleClick, modifiers }, { value = [] }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                icon={value.includes(option.value) ? 'tick' : 'blank'}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n                shouldDismissPopover={false}\n            />\n        );\n    };\n\n    renderTag = (value, { tagProps, onRemove, rightElement }) => {\n        const { options } = this.props;\n        return (options.find(o => o.value === value) || {}).label;\n    };\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <MultiSelect\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                placeholder={placeholder}\n                                itemRenderer={(o, c) => this.renderOption(o, c, field)}\n                                tagRenderer={this.renderTag}\n                                popoverProps={{\n                                    className: 'fg-field-fill'\n                                }}\n                                tagInputProps={{\n                                    className: 'fg-field-fill',\n                                    tagProps: { minimal: true },\n                                    onRemove: (_, index) => this.onRemove(_, index, field),\n                                    rightElement:\n                                        !!field.value && field.value.length > 0 ? (\n                                            <Button icon=\"cross\" minimal={true} onClick={() => this.onClear(field)} />\n                                        ) : (\n                                            undefined\n                                        )\n                                }}\n                                noResults={<MenuItem disabled={true} text=\"No results.\" />}\n                                onItemSelect={v => this.onItemSelect(v, field)}\n                                selectedItems={field.value || []}\n                                usePortal={false}\n                                inline={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default MultiSelectField;\n","import React from 'react';\nimport { Fields } from '../../fields';\nimport * as Yup from 'yup';\n\nexport class TextFieldDefinition {\n    validation;\n    isRequired;\n    isMulti;\n    mask;\n\n    constructor({ validation = '', isRequired = false, isMulti = false, mask = '' }) {\n        this.validation = validation;\n        this.isRequired = isRequired;\n        this.isMulti = isMulti;\n        this.mask = mask;\n    }\n}\n\nexport const validationFunc = type => {\n    const validators = {\n        email: Yup.string().email(),\n        zip: Yup.string().test('len', 'Must be exactly 5 characters', val => val.length === 5),\n        ssn: Yup.string().matches(/^[0-9]{3}-?[0-9]{2}-?[0-9]{4}$/, {\n            message: 'Invalid SSN.',\n            excludeEmptyString: true\n        })\n    };\n\n    return validators[type];\n};\n\nconst validationOptions = () => {\n    return [{ value: 'email', label: 'Email' }, { value: 'zip', label: 'ZIP' }, { value: 'ssn', label: 'SSN' }];\n};\n\nexport const getPropertyFields = () => {\n    return (\n        <React.Fragment>\n            <Fields.Checkbox\n                name={'definition.isMulti'}\n                placeholder={'Is Multi-text ?'}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Checkbox\n                name={'definition.isRequired'}\n                placeholder={'Is Required ?'}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Select\n                name={'definition.validation'}\n                placeholder={'Validation'}\n                submitOnChange={true}\n                options={validationOptions()}\n                className=\"fg-field width-100\"\n            />\n        </React.Fragment>\n    );\n};\n","import { Map } from 'immutable';\nimport { TextFieldDefinition } from './text';\n\nexport const FieldTypeDefinitions = {\n    Page: { name: 'FT_PAGE', label: 'Page', icon: 'applications', rank: 1000 },\n    Group: { name: 'FT_GROUP', label: 'Group', icon: 'application', rank: 900 },\n    Text: {\n        name: 'FT_TEXT',\n        label: 'Text',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'new-text-box',\n        rank: 100\n    },\n    Number: {\n        name: 'FT_NUMBER',\n        label: 'Number',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'numerical',\n        rank: 100\n    },\n    Select: {\n        name: 'FT_SELECT',\n        label: 'Select',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'property',\n        rank: 100\n    },\n    Boolean: {\n        name: 'FT_BOOLEAN',\n        label: 'Checkbox',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'form',\n        rank: 100\n    },\n    Date: {\n        name: 'FT_DATE',\n        label: 'Date',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'calendar',\n        rank: 100\n    },\n    File: {\n        name: 'FT_FILE',\n        label: 'File',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'cloud-upload',\n        rank: 100\n    }\n};\n\nexport const FieldTypes = {\n    Page: 'FT_PAGE',\n    Group: 'FT_GROUP',\n    Text: 'FT_TEXT',\n    Number: 'FT_NUMBER',\n    Select: 'FT_SELECT',\n    Boolean: 'FT_BOOLEAN',\n    Date: 'FT_DATE',\n    File: 'FT_FILE'\n};\n\nexport const buildTypeDefinitionDetails = (type, definition) => {\n    const typeDefinition = new Map(FieldTypeDefinitions).find(ftd => ftd.name === type) || {};\n    const { icon, buildDefinition } = typeDefinition;\n    return { icon, ...(!!buildDefinition ? buildDefinition(definition) : {}) };\n};\n\nexport const getFieldTypeMenuItems = () => {\n    return new Map(FieldTypeDefinitions)\n        .toArray()\n        .map(([_, { name, label, icon }]) => ({ name, label, icon }))\n        .filter(f => ![FieldTypes.Page, FieldTypes.Group].includes(f.name));\n};\n","import { uuid } from '../utilities/common';\nimport { FieldTypes, buildTypeDefinitionDetails } from './definitions/fieldTypes';\n\nexport class Field {\n    id;\n    property;\n    title;\n    description;\n    type;\n    definition;\n    width;\n    order;\n    visibleIf;\n\n    constructor({\n        id = uuid(8),\n        property,\n        type = FieldTypes.Text,\n        definition = {},\n        width = { mobile: 100, desktop: 100 },\n        title = 'New Field',\n        description,\n        order = 0,\n        visibleIf = true\n    }) {\n        this.id = id;\n        this.property = property || `field_${id}`;\n        this.title = title;\n        this.description = description;\n\n        this.type = type;\n        this.definition = buildTypeDefinitionDetails(type, { ...this.definition, ...definition });\n        this.width = width;\n\n        this.order = order;\n        this.visibleIf = visibleIf;\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Field } from './field';\nimport { FieldTypes } from './definitions/fieldTypes';\n\nexport class Group {\n    id;\n    property;\n    title;\n    description;\n    block;\n    width;\n    order;\n    visibleIf;\n    fields;\n\n    constructor({\n        id = uuid(8),\n        property,\n        title = 'New Group',\n        description = '',\n        block = true,\n        width = { mobile: 100, desktop: 100 },\n        order = 0,\n        visibleIf = true,\n        fields = []\n    }) {\n        this.id = id;\n        this.property = property || `group_${id}`;\n        this.title = title;\n        this.type = FieldTypes.Group;\n        this.description = description;\n        this.block = block;\n        this.width = width;\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.fields = fields.map(f => new Field(f));\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Group } from './group';\nimport { FieldTypes } from './definitions/fieldTypes';\n\nexport class Page {\n    id;\n    property;\n    title;\n    type;\n    header;\n    order;\n    visibleIf;\n    groups;\n    buttons;\n\n    constructor(page = {}) {\n        const {\n            id = uuid(8),\n            property,\n            title = 'New Page',\n            description = '',\n            header = {},\n            order = 0,\n            visibleIf = true,\n            groups = [],\n            buttons = {}\n        } = page;\n\n        this.id = id;\n        this.property = property || `page_${id}`;\n        this.title = title;\n        this.type = FieldTypes.Page;\n        this.description = description;\n        this.header = {\n            description: '',\n            image: '',\n            show: true,\n            showProgress: true,\n            ...header\n        };\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.groups = groups.map(g => new Group(g));\n        this.buttons = {\n            cancel: { show: true, text: 'Cancel' },\n            back: { show: true, text: 'Back' },\n            save: { show: true, text: 'Save' },\n            next: { show: true, text: 'Next' },\n            ...buttons\n        };\n    }\n}\n","import {\n    CONFIGURATOR_SELECT_ITEM,\n    CONFIGURATOR_REMOVE_ITEM,\n    CONFIGURATOR_SHOW_PROPERTIES,\n    CONFIGURATOR_SET_PAGES,\n    CONFIGURATOR_SET_GROUPS,\n    CONFIGURATOR_SET_FIELDS\n} from './actions';\nimport { TEST_PAGES } from '../testData';\n\nconst defaultState = {\n    selected: {},\n    form: undefined,\n    pages: TEST_PAGES\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        // Select item to display properties\n        case CONFIGURATOR_SELECT_ITEM:\n            return { ...state, selected: { page: action.page, group: action.group, field: action.field } };\n\n        // Assign pages\n        case CONFIGURATOR_SET_PAGES:\n            return { ...state, pages: action.pages };\n        // Assign groups\n        case CONFIGURATOR_SET_GROUPS:\n            const sgPages = state.pages.map(p => (p.id === action.page.id ? { ...p, groups: action.groups } : p));\n            return { ...state, pages: sgPages };\n        // Assign fields\n        case CONFIGURATOR_SET_FIELDS:\n            const sfPages = state.pages.map(p => {\n                return p.id === action.page.id\n                    ? {\n                          ...p,\n                          groups: p.groups.map(g => {\n                              return g.id === action.group.id ? { ...g, fields: action.fields } : g;\n                          })\n                      }\n                    : p;\n            });\n            return { ...state, pages: sfPages };\n\n        default:\n            return state;\n    }\n}\n\nexport const setPages = pages => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, pages });\n};\nexport const setGroups = (page, groups) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_GROUPS, page, groups });\n};\nexport const setFields = (page, group, fields) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_FIELDS, page, group, fields });\n};\n\nexport const selectItem = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SELECT_ITEM, page, group, field });\n};\n\n//\n// --------------------------------------------------------\n//\n\nexport const removeItem = () => async dispatch => {\n    dispatch({ type: CONFIGURATOR_REMOVE_ITEM });\n};\n\nexport const showProperties = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SHOW_PROPERTIES, page, group, field });\n};\n\nexport const setForm = form => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, form });\n};\n","import { Page } from './models/page';\nimport { Group } from './models/group';\nimport { Field } from './models/field';\nimport { FieldTypes } from './models/definitions/fieldTypes';\n\nexport const TEST_PAGES = [\n    new Page({\n        title: 'Intro',\n        header: {\n            description:\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a rutrum tellus. Fusce ut mauris id nunc bibendum fringilla. Cras rutrum non ipsum in malesuada. Aliquam semper est vitae magna laoreet sagittis. Integer maximus blandit dictum. Fusce iaculis lacus id quam blandit rhoncus. Sed accumsan massa ac turpis congue fringilla. Etiam rutrum elit non est lacinia, ut posuere velit fringilla. Sed vehicula pharetra elit in suscipit. Phasellus nec ultrices dui. Cras lectus est, fringilla ut velit ut, commodo ullamcorper justo. Maecenas facilisis diam in ante venenatis, sit amet porta nisi auctor. Aenean a ante ut nisi efficitur lacinia.',\n            image: 'http://clipart-library.com/img/752503.jpg',\n            show: true,\n            showProgress: true\n        },\n        buttons: { next: { show: true, text: 'Move forward' } },\n        groups: [\n            new Group({\n                title: 'Personal Info',\n                description:\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a rutrum tellus. Fusce ut mauris id nunc bibendum fringilla.',\n                width: { desktop: 100, mobile: 100 },\n                fields: [\n                    new Field({ title: 'Name', width: { desktop: 50, mobile: 100 } }),\n                    new Field({ title: 'Email', width: { desktop: 50, mobile: 100 } }),\n                    new Field({ title: 'Age', width: { desktop: 50, mobile: 100 }, type: FieldTypes.Number }),\n                    new Field({ title: 'Sex', width: { desktop: 50, mobile: 100 }, type: FieldTypes.Select }),\n                    new Field({ title: 'Date of birth', width: { desktop: 50, mobile: 100 }, type: FieldTypes.Date }),\n                    new Field({\n                        title: 'Eligible',\n                        description: 'Is Eligible ?',\n                        width: { desktop: 50, mobile: 100 },\n                        type: FieldTypes.Boolean\n                    })\n                ]\n            }),\n            new Group({\n                title: 'Location',\n                width: { desktop: 50, mobile: 100 },\n                fields: [new Field({ title: 'Country' }), new Field({ title: 'City' })]\n            }),\n            new Group({\n                title: 'Some other group',\n                width: { desktop: 50, mobile: 100 },\n                fields: [new Field({ title: 'Address' }), new Field({ title: 'Post Code' })]\n            })\n        ]\n    }),\n    new Page({\n        title: 'Tax Details',\n        groups: [\n            new Group({ title: 'SSN', fields: [new Field({ title: 'Type' }), new Field({ title: 'Number' })] }),\n            new Group({\n                title: 'Registration',\n                fields: [new Field({ title: 'Date' }), new Field({ title: 'Unit' })]\n            })\n        ]\n    }),\n    new Page({\n        title: 'Lorem ipsum dolor',\n        groups: [\n            new Group({\n                title:\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n                fields: [new Field({ title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit' })]\n            })\n        ]\n    })\n];\n","export const CONFIGURATOR_SELECT_ITEM = 'CONFIGURATOR_SELECT_ITEM';\nexport const CONFIGURATOR_REMOVE_ITEM = 'CONFIGURATOR_REMOVE_ITEM';\nexport const CONFIGURATOR_SHOW_PROPERTIES = 'CONFIGURATOR_SHOW_PROPERTIES';\nexport const CONFIGURATOR_SET_FORM = 'CONFIGURATOR_SET_FORM';\nexport const CONFIGURATOR_SET_PAGES = 'CONFIGURATOR_SET_PAGES';\nexport const CONFIGURATOR_SET_GROUPS = 'CONFIGURATOR_SET_GROUPS';\nexport const CONFIGURATOR_SET_FIELDS = 'CONFIGURATOR_SET_FIELDS';\n\nexport const UI_SET_DIMENSIONS = 'UI_SET_DIMENSIONS';\n\nexport const FIELDS_SET_FIELD = 'FIELDS_SET_FIELD';\n","import { FIELDS_SET_FIELD } from './actions';\n\nconst defaultState = {\n    list: undefined\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case FIELDS_SET_FIELD:\n            return { ...state, list: action.data };\n\n        default:\n            return state;\n    }\n}\n","import { UI_SET_DIMENSIONS } from './actions';\n\nconst defaultState = {\n    screen: { width: 0, height: 0 },\n    panel: { height: 0 }\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case UI_SET_DIMENSIONS:\n            return { ...state, ...action.data };\n\n        default:\n            return state;\n    }\n}\n\nexport const setDimensions = rect => async dispatch => {\n    const screen = { width: window.innerWidth, height: window.innerHeight };\n    const topOffset = rect ? rect.top : 0;\n    const panel = { height: screen.height - topOffset - 59 };\n\n    dispatch({ type: UI_SET_DIMENSIONS, data: { screen, panel } });\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { combineReducers } from 'redux';\n\nimport configurator from './configurator';\nimport fields from './fields';\nimport ui from './ui';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    if (typeof window === 'object') {\n        const { __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ } = window;\n        if (__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && typeof __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function') {\n            enhancers.push(__REDUX_DEVTOOLS_EXTENSION_COMPOSE__());\n        }\n    }\n}\n\nconst appReducer = combineReducers({\n    configurator,\n    ui,\n    fields\n});\n\nconst rootReducer = (state, action) => appReducer(state, action);\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\nexport const store = createStore(rootReducer, initialState, composedEnhancers);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass ListItem extends React.Component {\n    render() {\n        const {\n            item: {\n                data: { title, definition: { icon } = {} },\n                selected,\n                onSelect,\n                openPanel\n            },\n            picked = this.props.itemSelected > 0,\n            dragHandleProps\n        } = this.props;\n\n        return (\n            <div className={`fg-panel-item ${picked ? 'dragged' : ''} ${selected ? 'selected' : ''}`}>\n                <Button minimal={true} icon={selected ? 'manually-entered-data' : 'cog'} onClick={onSelect} />\n                <div className=\"item-title ellipsis\" {...dragHandleProps}>\n                    {title}\n                </div>\n                {!!openPanel ? (\n                    <Button minimal={true} icon=\"caret-right\" onClick={openPanel} />\n                ) : (\n                    <Button className=\"fg-type-indicator\" disabled={true} icon={icon} />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, MenuItem, Popover, Classes } from '@blueprintjs/core';\nimport ListItem from './item';\nimport { selectItem, setFields } from '../../../../../state/configurator';\nimport { Field } from '../../../../../models/field';\nimport { getFieldTypeMenuItems } from '../../../../../models/definitions/fieldTypes';\n\nclass FieldsPanel extends React.Component {\n    componentDidMount() {\n        const { page, group, fields = [], selected: { field } = {}, selectItem } = this.props;\n        if (!field && fields.length > 0) selectItem(page, group, fields[0]);\n    }\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, group = {}, fields = [], closePanel, height, selected, selectItem, setFields } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page, group);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{group.title}</div>\n                        </div>\n\n                        <Popover\n                            content={\n                                <Menu>\n                                    {getFieldTypeMenuItems().map(({ name, label, icon }, i) => (\n                                        <MenuItem\n                                            key={i}\n                                            icon={icon}\n                                            text={label}\n                                            onClick={() =>\n                                                setFields(page, group, [\n                                                    ...fields,\n                                                    new Field({ title: 'New Field', type: name })\n                                                ])\n                                            }\n                                        />\n                                    ))}\n                                </Menu>\n                            }\n                        >\n                            <Button minimal={true} icon=\"plus\" />\n                        </Popover>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={fields.map(field => ({\n                                    id: field.id,\n                                    data: field,\n                                    selected: selected && selected.field && selected.field.id === field.id,\n                                    onSelect: () => selectItem(page, group, field)\n                                }))}\n                                onMoveEnd={newList =>\n                                    setFields(page, group, newList.map((f, i) => ({ ...f.data, order: i })))\n                                }\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const group = ((page || {}).groups || []).find(g => g.id === props.group.id);\n    const fields = (group || {}).fields;\n    return {\n        page,\n        group,\n        fields,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            selectItem,\n            setFields\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, Classes } from '@blueprintjs/core';\nimport FieldsPanel from './fields';\nimport ListItem from './item';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\nimport { Group } from '../../../../../models/group';\n\nclass GroupsPanel extends React.Component {\n    componentDidMount() {\n        const { page, groups = [], selected: { group } = {}, selectItem } = this.props;\n        if (!group && groups.length > 0) selectItem(page, groups[0]);\n    }\n\n    addGroup = async () => {\n        const { page, groups = [], setGroups, selectItem } = this.props;\n        const newGroup = new Group({ title: 'New Group', order: groups.length });\n        await setGroups(page, [...groups, newGroup]);\n        selectItem(page, newGroup);\n    };\n\n    openFieldsPanel = group => {\n        const { page, openPanel } = this.props;\n        openPanel({ component: FieldsPanel, props: { page, group } });\n    };\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, groups = [], closePanel, height, selected, setGroups, selectItem } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{page.title}</div>\n                        </div>\n                        <Button icon=\"plus\" minimal={true} onClick={this.addGroup} />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={groups.map(group => ({\n                                    id: group.id,\n                                    data: group,\n                                    selected: selected && selected.group && selected.group.id === group.id,\n                                    onSelect: () => selectItem(page, group),\n                                    openPanel: () => this.openFieldsPanel(group)\n                                }))}\n                                onMoveEnd={newList => setGroups(page, newList.map((g, i) => ({ ...g.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const groups = (page || {}).groups;\n    return {\n        page,\n        groups,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SimpleBar from 'simplebar-react';\nimport DraggableList from 'react-draggable-list';\nimport { Card, Menu, Button } from '@blueprintjs/core';\nimport GroupsPanel from './groups';\nimport ListItem from './item';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport { Page } from '../../../../../models/page';\n\nclass PagesPanel extends React.Component {\n    componentDidMount() {\n        const { pages = [], selected: { page } = {}, selectItem } = this.props;\n        if (!page && pages.length > 0) selectItem(pages[0]);\n    }\n\n    addPage = async () => {\n        const { pages = [], setPages, selectItem } = this.props;\n        const newPage = new Page({ title: 'New Page', order: pages.length });\n        await setPages([...pages, newPage]);\n        selectItem(newPage);\n    };\n\n    openGroupsPanel = page => {\n        const { openPanel } = this.props;\n        openPanel({ component: GroupsPanel, props: { page } });\n    };\n\n    render() {\n        const { height, pages = [], selected = {}, setPages, selectItem } = this.props;\n\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Pages</span>\n                        </div>\n                        <Button icon=\"plus\" minimal={true} onClick={this.addPage} />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={pages.map(page => ({\n                                    id: page.id,\n                                    data: page,\n                                    selected: selected && selected.page && selected.page.id === page.id,\n                                    onSelect: () => selectItem(page),\n                                    openPanel: () => this.openGroupsPanel(page)\n                                }))}\n                                onMoveEnd={newList => setPages(newList.map((p, i) => ({ ...p.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    pages: state.configurator.pages,\n    selected: state.configurator.selected,\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PagesPanel);\n","import React from 'react';\nimport { PanelStack } from '@blueprintjs/core';\nimport PagesPanel from './panels/pages';\n\nclass Navigator extends React.Component {\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-navigator\" style={{ height: `${height - 70}px` }}>\n                <div className=\"panel-wrapper bp3-elevation-1\">\n                    <PanelStack initialPanel={{ component: PagesPanel }} showPanelHeader={false} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navigator;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setFields, selectItem } from '../../../../../state/configurator';\nimport { getPropertyFields } from '../../../../../models/definitions/text';\n\nclass FieldProperties extends React.Component {\n    onSubmit = values => {\n        const { setFields, page, group, fields = [] } = this.props;\n        setFields(page, group, [...fields.map(f => (f.id === values.id ? { ...f, ...values } : f))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setFields, page, group, fields, field } = this.props;\n        await selectItem();\n        setFields(page, group, [...fields.filter(f => f.id !== field.id)]);\n    };\n\n    render() {\n        const { field } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...field }}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'description'}\n                                label={'Description'}\n                                placeholder={'Description'}\n                                className=\"fg-field width-100\"\n                            />\n\n                            {getPropertyFields()}\n\n                            <Fields.Slider\n                                label={'Width'}\n                                info={'(desktop)'}\n                                name={'width.desktop'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100 mg-b-0\"\n                            />\n                            <Fields.Slider\n                                disabled={true}\n                                label={'Width'}\n                                info={'(mobile)'}\n                                name={'width.mobile'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'property'}\n                                label={'Property'}\n                                info={'(fields unique)'}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n\n                            <div className=\"pd-15\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    const groups = (page || {}).groups;\n    const group = (groups || []).find(g => g.id === selected.group.id);\n\n    const fields = (group || {}).fields;\n    const field = (fields || []).find(f => f.id === selected.field.id);\n\n    return {\n        selected,\n        pages,\n        page,\n        groups,\n        group,\n        fields,\n        field\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setFields,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldProperties);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\n\nclass GroupProperties extends React.Component {\n    onSubmit = values => {\n        const { setGroups, page, groups = [] } = this.props;\n        setGroups(page, [...groups.map(g => (g.id === values.id ? { ...g, ...values } : g))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setGroups, page, groups, group } = this.props;\n        await selectItem();\n        setGroups(page, [...groups.filter(g => g.id !== group.id)]);\n    };\n\n    render() {\n        const { group } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...group }}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'description'}\n                                label={'Description'}\n                                placeholder={'Description'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Checkbox\n                                name={'block'}\n                                placeholder={'Block (show as block?)'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Slider\n                                label={'Width'}\n                                info={'(desktop)'}\n                                name={'width.desktop'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100 mg-b-0\"\n                            />\n                            <Fields.Slider\n                                disabled={true}\n                                label={'Width'}\n                                info={'(mobile)'}\n                                name={'width.mobile'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'property'}\n                                label={'Property'}\n                                info={'(groups unique)'}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n                            <div className=\"pd-15\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    const groups = (page || {}).groups;\n    const group = (groups || []).find(g => g.id === selected.group.id);\n\n    return {\n        selected,\n        pages,\n        page,\n        groups,\n        group\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupProperties);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass PropertiesGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { open: !!props.open };\n    }\n\n    toggle = () => this.setState({ ...this.state, open: !this.state.open });\n\n    render() {\n        const { open } = this.state;\n        const { title, children } = this.props;\n        return (\n            <div className=\"fg-properties-group\">\n                <div className=\"fg-properties-group-header mg-x-15\">\n                    <Button\n                        fill={true}\n                        text={title}\n                        rightIcon={!!open ? 'caret-up' : 'caret-down'}\n                        onClick={this.toggle}\n                        className=\"mg-b-20\"\n                    />\n                </div>\n                {!!open && <div className=\"fg-properties-group-body\">{children}</div>}\n            </div>\n        );\n    }\n}\n\nexport default PropertiesGroup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport PropertiesGroup from '../components/propertiesGroup';\n\nclass PageProperties extends React.Component {\n    onSubmit = values => {\n        const { setPages, pages = [] } = this.props;\n        setPages([...pages.map(p => (p.id === values.id ? { ...p, ...values } : p))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setPages, pages, page } = this.props;\n        await selectItem();\n        setPages([...pages.filter(p => p.id !== page.id)]);\n    };\n\n    render() {\n        const { page } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...page }}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <PropertiesGroup title=\"Header\">\n                                <Fields.Input\n                                    name={'header.description'}\n                                    label={'Description'}\n                                    placeholder={'Description'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'header.image'}\n                                    label={'Header Image'}\n                                    placeholder={'Url'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Checkbox\n                                    name={'header.show'}\n                                    placeholder={'Show header ?'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'header.showProgress'}\n                                    placeholder={'Show progress bar ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                            </PropertiesGroup>\n\n                            <PropertiesGroup title=\"Buttons\">\n                                <Fields.Input\n                                    name={'buttons.cancel.text'}\n                                    label={'Cancel label'}\n                                    placeholder={'Cancel label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.cancel.show'}\n                                    placeholder={'Show cancel button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n\n                                <Fields.Input\n                                    name={'buttons.back.text'}\n                                    label={'Back label'}\n                                    placeholder={'Back label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.back.show'}\n                                    placeholder={'Show back button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'buttons.save.text'}\n                                    label={'Save label'}\n                                    placeholder={'Save label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.save.show'}\n                                    placeholder={'Show save button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'buttons.next.text'}\n                                    label={'Next label'}\n                                    placeholder={'Next label'}\n                                    className=\"fg-field width-100\"\n                                />\n                            </PropertiesGroup>\n\n                            <Fields.Input\n                                name={'property'}\n                                label={'Property'}\n                                info={'(pages unique)'}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n\n                            <div className=\"mg-x-15 mg-t-20\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    return {\n        selected,\n        pages,\n        page\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PageProperties);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\nimport FieldProperties from './forms/field';\nimport GroupProperties from './forms/group';\nimport PageProperties from './forms/page';\n\nclass Properties extends React.Component {\n    renderPropertiesForm = () => {\n        const { selected = {} } = this.props;\n        const { page, group, field } = selected;\n        if (!!field) {\n            return <FieldProperties />;\n        }\n        if (!!group) {\n            return <GroupProperties />;\n        }\n        if (!!page) {\n            return <PageProperties />;\n        }\n\n        return <div className=\"pd-20 tx-center\">Select item to show properties.</div>;\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-properties\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1}>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Properties</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-y-20 pd-x-5\">{this.renderPropertiesForm()}</div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Properties);\n","import React from 'react';\nimport { Card, Button, Intent } from '@blueprintjs/core';\n\nclass FormButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        const {\n            buttons: { cancel, back, save, next }\n        } = this.props;\n\n        return (\n            <Card elevation={0} className=\"fg-buttons\">\n                <div className=\"fg-left-buttons\">\n                    {!!cancel.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {cancel.text}\n                        </Button>\n                    )}\n                    {!!back.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {back.text}\n                        </Button>\n                    )}\n                </div>\n                <div className=\"fg-right-buttons\">\n                    {!!save.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {save.text}\n                        </Button>\n                    )}\n\n                    <Button type=\"submit\" intent={Intent.SUCCESS}>\n                        {next.text}\n                    </Button>\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default FormButtons;\n","import React from 'react';\nimport { FieldTypes } from '../../../models/definitions/fieldTypes';\nimport { Fields } from '../../../fields';\nimport { isEmpty } from '../../../utilities/common';\n\nclass FieldRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    getFieldName = () => {\n        const { page, group, field } = this.props;\n        let property = '';\n        property = isEmpty(page.property) ? property : `${page.property}`;\n        property = isEmpty(group.property) ? property : `${property}.${group.property}`;\n        property = isEmpty(field.property) ? property : `${property}.${field.property}`;\n        return property;\n    };\n\n    getField = () => {\n        const { field: { id, title, description, type } = {}, definition: { isMulti } = {} } = this.props;\n\n        const fieldProps = {\n            id,\n            name: this.getFieldName(),\n            label: title,\n            description,\n            info: description,\n            placeholder: title,\n            className: 'fg-field-fill'\n        };\n\n        switch (type) {\n            case FieldTypes.Text:\n                return !!isMulti ? <Fields.Tag {...fieldProps} /> : <Fields.Input {...fieldProps} />;\n\n            case FieldTypes.Number:\n                return <Fields.Number {...fieldProps} />;\n\n            case FieldTypes.Boolean:\n                return <Fields.Checkbox {...fieldProps} label={description} info={''} placeholder={title} />;\n\n            case FieldTypes.Date:\n                return <Fields.Date {...fieldProps} />;\n\n            case FieldTypes.Select:\n                return <Fields.Select {...fieldProps} options={[]} />;\n\n            default:\n                return (\n                    <div>\n                        <span>{title}</span> <span>{JSON.stringify(type)}</span>\n                    </div>\n                );\n        }\n    };\n\n    render() {\n        const { field: { width: { desktop } } = { width: { desktop: 100 } } } = this.props;\n        return (\n            <div className=\"fg-field-renderer\" style={{ width: `${desktop}%` }}>\n                {this.getField()}\n            </div>\n        );\n    }\n}\n\nexport default FieldRenderer;\n","import React from 'react';\nimport { Card } from '@blueprintjs/core';\nimport FieldRenderer from './field';\n\nclass GroupRenderer extends React.Component {\n    renderFields = () => {\n        const { page, group = {} } = this.props;\n        const { fields = [], width: { desktop } = { desktop: 100, mobile: 100 } } = group;\n\n        return (\n            <div className=\"fg-group-renderer\" style={{ width: `${desktop}%` }}>\n                <div className=\"fg-fields-wrapper pd-t-10\">\n                    {fields.map((field, i) => (\n                        <FieldRenderer key={i} page={page} group={group} field={field} definition={field.definition} />\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        const { page, group = {} } = this.props;\n        const { title, description, block, width: { desktop } = { desktop: 100, mobile: 100 }, fields = [] } = group;\n\n        if (!block) return this.renderFields();\n\n        return (\n            <div className=\"fg-group-renderer\" style={{ width: `${desktop}%` }}>\n                <Card elevation={0} className=\"\">\n                    <div className=\"fg-group-header mg-b-20\">\n                        <h3 className=\"mg-0\">{title}</h3>\n                        {!!description && <span className=\"bp3-text-small bp3-text-muted\">{description}</span>}\n                    </div>\n                    <div className=\"fg-fields-wrapper\">\n                        {fields.map((field, i) => (\n                            <FieldRenderer\n                                key={i}\n                                page={page}\n                                group={group}\n                                field={field}\n                                definition={field.definition}\n                            />\n                        ))}\n                    </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default GroupRenderer;\n","import React from 'react';\nimport { Card } from '@blueprintjs/core';\nimport GroupRenderer from './group';\n\nclass PageRenderer extends React.Component {\n    render() {\n        const { progress, page } = this.props;\n        const {\n            title,\n            header: { description, image, show, showProgress },\n            groups = []\n        } = page;\n\n        return (\n            <React.Fragment>\n                {progress({\n                    style: { borderRadius: !!show ? '3px 3px 0 0' : '3px', marginBottom: !!show ? '0px' : '20px' },\n                    showProgress\n                })}\n                {!!show && (\n                    <Card\n                        elevation={0}\n                        className=\"fg-renderer-header\"\n                        style={{ borderRadius: !!showProgress ? '0 0 3px 3px' : '3px' }}\n                    >\n                        {!!image && (\n                            <div\n                                className=\"fg-page-header-image\"\n                                style={{\n                                    backgroundImage: `url(${image})`,\n                                    borderRadius: !!showProgress ? '0px' : '3px 3px 0 0'\n                                }}\n                            />\n                        )}\n                        <h2 className=\"mg-0\">{title}</h2>\n                        {!!description && <span className=\"bp3-text-small bp3-text-muted\">{description}</span>}\n                    </Card>\n                )}\n                <div className=\"fg-groups-wrapper\">\n                    {groups.map((group, i) => (\n                        <GroupRenderer key={i} page={page} group={group} />\n                    ))}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PageRenderer;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Card, Button, ProgressBar, Popover, Menu, MenuItem } from '@blueprintjs/core';\nimport FormButtons from './components/buttons';\nimport PageRenderer from './components/page';\n\nimport './renderer.scss';\nimport { validationFunc } from '../../models/definitions/text';\n\nclass FromRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pageIndex: 0 };\n    }\n\n    onSubmit = values => {\n        console.log(values);\n    };\n\n    getValidationSchema = page => {\n        const shape = {};\n        if (!page) return Yup.object().shape(shape);\n\n        const { groups = [] } = page;\n        if (!groups || groups.length === 0) return Yup.object().shape(shape);\n        const rrr = groups\n            .map(g => g.fields)\n            .flat()\n            .filter(f => !!f.definition && !!f.definition.validation);\n\n        rrr.forEach(field => {\n            const { property, definition } = field;\n            const { validation } = definition;\n            shape[`${page.property}.${'group.property'}.${property}`] = validationFunc(validation);\n        });\n\n        debugger;\n\n        return Yup.object().shape(shape);\n    };\n\n    render() {\n        const { pageIndex } = this.state;\n        const { pages = [], activePageOverride } = this.props;\n        if (pages.length === 0) return null;\n\n        const index = Number.isNaN(Number.parseInt(activePageOverride)) ? pageIndex : activePageOverride;\n        const validationSchema = this.getValidationSchema(pages[index]);\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{}}\n                validationSchema={validationSchema}\n                onSubmit={this.onSubmit}\n                render={() => {\n                    return (\n                        <Form>\n                            <PageRenderer\n                                page={pages[index]}\n                                progress={({ style, showProgress }) =>\n                                    !!showProgress && (\n                                        <Card elevation={0} className=\"fg-renderer-navigation\" style={style}>\n                                            <ProgressBar\n                                                value={(index + 1) / (pages.length || 1)}\n                                                className=\"bp3-intent-success fg-renderer-progress\"\n                                                animate={false}\n                                            />\n                                            <Popover\n                                                position=\"left-top\"\n                                                content={\n                                                    <Menu>\n                                                        {pages.map((p, i) => (\n                                                            <MenuItem\n                                                                key={i}\n                                                                icon={i === index ? 'confirm' : 'circle'}\n                                                                disabled={i === index}\n                                                                text={p.title}\n                                                            />\n                                                        ))}\n                                                    </Menu>\n                                                }\n                                            >\n                                                <Button icon=\"menu\" minimal={true} className=\"fg-renderer-menu\" />\n                                            </Popover>\n                                        </Card>\n                                    )\n                                }\n                            />\n                            <FormButtons buttons={pages[index].buttons} />\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default FromRenderer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\nimport FromRenderer from '../../../renderer';\n\nclass Preview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const { height, pages = [], selected: { page } = {} } = this.props;\n        const index =\n            pages.map((p, i) => (p.id === (!!page ? page.id : p.id) ? i : undefined)).find(i => i !== undefined) || 0;\n\n        return (\n            <div className=\"configurator-preview\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1} className=\"fg-panel-wrapper\">\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Preview</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-20\">\n                            <FromRenderer pages={pages} activePageOverride={index} />\n                        </div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected,\n    pages: state.configurator.pages\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Preview);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Navigator from './components/navigator';\nimport Properties from './components/properties';\nimport Preview from './components/preview';\nimport { setDimensions } from '../../state/ui';\n\nimport 'simplebar/dist/simplebar.min.css';\nimport './configurator.scss';\n\nclass FormConfigurator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        const { setDimensions } = this.props;\n        var rect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n        setDimensions(rect);\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-wrapper\">\n                <Navigator height={height} />\n                <Properties height={height} />\n                <Preview height={height} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setDimensions\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormConfigurator);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from '../state';\nimport FormConfigurator from './configurator';\nimport {\n    FocusStyleManager,\n    Navbar,\n    NavbarGroup,\n    NavbarDivider,\n    NavbarHeading,\n    Menu,\n    MenuItem,\n    Popover,\n    Button,\n    MenuDivider\n} from '@blueprintjs/core';\n\nclass FormGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        FocusStyleManager.onlyShowFocusOnTabs();\n\n        return (\n            <Provider store={store}>\n                <div className=\"form-generator\">\n                    <Navbar className=\"fg-navbar\">\n                        <NavbarGroup>\n                            <NavbarHeading>Form Generator</NavbarHeading>\n                            <NavbarDivider />\n                            <Popover\n                                content={\n                                    <Menu>\n                                        <MenuItem\n                                            icon=\"eye-open\"\n                                            text=\"Preview\"\n                                            onClick={() =>\n                                                this.props.history.push('/form', {\n                                                    pages: store.getState().configurator.pages\n                                                })\n                                            }\n                                        />\n                                        <MenuItem icon=\"floppy-disk\" text=\"Save\" />\n                                        <MenuDivider />\n                                        <MenuItem icon=\"new-object\" text=\"New\" />\n                                        <MenuDivider />\n                                        <MenuItem icon=\"export\" text=\"Export\" />\n                                        <MenuItem icon=\"import\" text=\"Import\" />\n                                    </Menu>\n                                }\n                            >\n                                <Button minimal={true} text=\"File\" />\n                            </Popover>\n                        </NavbarGroup>\n                    </Navbar>\n                    <div className=\"stage\">\n                        <FormConfigurator />\n                    </div>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default FormGenerator;\n","import React from 'react';\nimport Renderer from './containers/renderer';\n\nclass FromRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {\n            location: { state: { pages = [] } = {} }\n        } = this.props;\n\n        return (\n            <div className=\"pd-20\">\n                <Renderer pages={pages} />\n            </div>\n        );\n    }\n}\n\nexport default FromRenderer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport FormGenerator from './containers';\nimport RenderedForm from './renderedForm';\n\nimport './styles/root.scss';\n\nconst root = document.getElementById('root');\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={FormGenerator} />\n            <Route path=\"/form\" component={RenderedForm} />\n        </Switch>\n    </BrowserRouter>,\n    root\n);\n"],"sourceRoot":""}