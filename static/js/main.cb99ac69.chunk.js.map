{"version":3,"sources":["utilities/common.jsx","models/definitions/text.jsx","models/definitions/fieldTypes.jsx","models/field.jsx","models/group.jsx","models/page.jsx","state/configurator.jsx","testData.jsx","state/actions.jsx","state/fields.jsx","state/ui.jsx","state/index.jsx","containers/configurator/components/navigator/panels/item.jsx","containers/configurator/components/navigator/panels/fields.jsx","containers/configurator/components/navigator/panels/groups.jsx","containers/configurator/components/navigator/panels/pages.jsx","containers/configurator/components/navigator/index.jsx","fields/input.jsx","fields/tag.jsx","fields/checkbox.jsx","fields/switch.jsx","fields/radio.jsx","fields/date.jsx","fields/dateRange.jsx","fields/time.jsx","fields/file.jsx","fields/number.jsx","fields/select.jsx","fields/index.js","fields/multiSelect.jsx","containers/configurator/components/properties/forms/group.jsx","containers/configurator/components/properties/components/propertiesGroup.jsx","containers/configurator/components/properties/forms/page.jsx","containers/configurator/components/properties/index.jsx","containers/renderer/components/buttons.jsx","containers/renderer/components/page.jsx","containers/renderer/index.jsx","containers/configurator/components/preview/index.jsx","containers/configurator/index.jsx","containers/index.jsx","index.js"],"names":["uuid","n","arguments","length","undefined","replace","Math","random","toString","slice","TextFieldDefinition","Object","classCallCheck","this","FiledTypes","Page","name","label","icon","rank","Group","Text","buildDefinition","d","Number","Select","Boolean","Date","File","Field","_ref","_ref$id","id","_ref$type","type","definition","_ref$width","width","mobile","desktop","_ref$title","title","description","_ref$order","order","_ref$visibleIf","visibleIf","_ref$description","_ref$block","block","_ref$fields","fields","map","f","page","_page$id","_page$title","_page$description","_page$header","header","_page$order","_page$visibleIf","_page$groups","groups","_page$buttons","buttons","objectSpread","image","show","showProgress","g","cancel","text","back","save","next","defaultState","selected","form","pages","setPages","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","stop","_x","apply","setGroups","_ref2","_callee2","_context2","_x2","setFields","group","_ref3","_callee3","_context3","_x3","selectItem","field","_ref4","_callee4","_context4","_x4","list","screen","height","panel","setDimensions","rect","topOffset","window","innerWidth","innerHeight","top","data","middleware","thunk","appReducer","combineReducers","configurator","state","action","sgPages","p","sfPages","ui","composedEnhancers","compose","applyMiddleware","concat","store","createStore","ListItem","_this$props","props","_this$props$item","item","_this$props$item$data","onSelect","openPanel","_this$props$picked","picked","itemSelected","dragHandleProps","react_default","createElement","className","button_buttons","minimal","onClick","assign","disabled","React","Component","FieldsPanel","renderBreadcrumb","Classes","BREADCRUMB","BREADCRUMB_CURRENT","_this$props$fields","_this$props$selected","_this2","_this$props2","_this$props2$fields","closePanel","menu","card","elevation","toConsumableArray","simplebar_react_esm","style","ref","el","draggable","js_default","itemKey","template","padding","springConfig","stiffness","damping","onMoveEnd","newList","i","container","connect","find","bindActionCreators","GroupsPanel","openFieldsPanel","_this","component","_this$props2$groups","_this$props2$selected","_this$props3","_this$props3$groups","PagesPanel","addPage","_this$props$pages","newPage","openGroupsPanel","_this$props2$pages","_this$props3$pages","_this$props3$selected","Navigator","panelStack","initialPanel","showPanelHeader","InputField","defaultValue","_this$props$id","validate","_this$props$type","placeholder","info","extra","formik_esm","render","formGroup","helperText","labelFor","labelInfo","inputGroup","onChange","e","fill","TagField","value","persist","target","clearButton","_this$props2$id","_this$props2$type","tagInput","addOnBlur","tagProps","rightElement","v","values","CheckboxField","controls","checked","SwitchField","RadioField","_this$props$inline","inline","_this$props$options","options","radioGroup","selectedValue","index","key","DateField","momentFormatter","_this$props$format","format","formatDate","date","locale","moment","parseDate","str","toDate","dateInput","DateRangeField","dateRangeInput","TimeField","_this$props2$useAmPm","useAmPm","timePicker","selectAllOnFocus","FileField","possibleConstructorReturn","getPrototypeOf","call","setPendingFile","file","cb","setState","pending","setProcessedFile","filter","pend","processed","onRemove","processFile","reader","FileReader","readAsDataURL","onload","fileInfo","size","round","base64","result","bind","assertThisInitialized","_this$props2$multi","multi","_this$props2$types","types","spinner","tag_tag","rc_upload_es","accept","join","multiple","beforeUpload","fileObject","onStart","onSuccess","onProgress","onError","customRequest","uploadProps","rightIcon","NumberField","numericInput","max","MAX_SAFE_INTEGER","allowNumericCharactersOnly","onValueChange","SelectField","onItemSelect","renderOption","option","handleClick","modifiers","matchesPredicate","menuItem","active","activeOption","o","select_select","items","filterable","itemRenderer","inputProps","noResults","Fields","Input","Tag","Checkbox","Switch","Radio","DateRange","Time","MultiSelect","fieldValue","includes","fv","_","__","onClear","_ref4$value","shouldDismissPopover","renderTag","_ref5","_this$props4","_this$props4$id","_ref6","multiSelect","c","tagRenderer","popoverProps","tagInputProps","selectedItems","usePortal","GroupProperties","onSubmit","enableReinitialize","initialValues","validationSchema","Yup","shape","handleChange","submitForm","min","leftIcon","intent","PropertiesGroup","toggle","open","children","PageProperties","propertiesGroup","Properties","renderPropertiesForm","forms_group","forms_page","FormButtons","_this$props$buttons","Intent","SUCCESS","PageRenderer","progress","Fragment","borderRadius","marginBottom","backgroundImage","FromRenderer","console","log","pageIndex","activePageOverride","isNaN","components_page","progressBar","animate","popover","position","content","components_buttons","Preview","containers_renderer","FormConfigurator","updateWindowDimensions","ReactDOM","findDOMNode","getBoundingClientRect","addEventListener","removeEventListener","components_navigator","properties","preview","FormGenerator","FocusStyleManager","onlyShowFocusOnTabs","es","navbar","navbarGroup","navbarHeading","navbarDivider","menuDivider","containers_configurator","root","document","getElementById","containers"],"mappings":"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","file":"static/js/main.cb99ac69.chunk.js","sourcesContent":["export const uuid = (n = 36) => {\n    return '00000000-0000-4000-8000-000000000000'.replace(/0/g, () => (0 | (Math.random() * 16)).toString(16)).slice(0, n);\n};\n","export class TextFieldDefinition {}\n","import { TextFieldDefinition } from './text';\n\nexport const FiledTypes = {\n    Page: { name: 'FT_PAGE', label: 'Page', icon: 'applications', rank: 1000 },\n    Group: { name: 'FT_GROUP', label: 'Group', icon: 'application', rank: 900 },\n    Text: {\n        name: 'FT_TEXT',\n        label: 'Text',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'new-text-box',\n        rank: 100\n    },\n    Number: {\n        name: 'FT_NUMBER',\n        label: 'Number',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'numerical',\n        rank: 100\n    },\n    Select: {\n        name: 'FT_SELECT',\n        label: 'Select',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'property',\n        rank: 100\n    },\n    Boolean: {\n        name: 'FT_BOOLEAN',\n        label: 'Checkbox',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'form',\n        rank: 100\n    },\n    Date: {\n        name: 'FT_DATE',\n        label: 'Date',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'calendar',\n        rank: 100\n    },\n    File: {\n        name: 'FT_FILE',\n        label: 'File',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'cloud-upload',\n        rank: 100\n    }\n};\n","import { uuid } from '../utilities/common';\nimport { FiledTypes } from './definitions/fieldTypes';\n\nexport class Field {\n    id;\n    title;\n    description;\n    type;\n    definition;\n    width;\n    order;\n    visibleIf;\n\n    constructor({\n        id = uuid(),\n        type = FiledTypes.Text,\n        definition,\n        width = { mobile: 100, desktop: 100 },\n        title = 'New Field',\n        description,\n        order = 0,\n        visibleIf = true\n    }) {\n        this.id = id;\n        this.title = title;\n        this.description = description;\n\n        this.type = type;\n        this.definition = this.type.buildDefinition(definition);\n        this.width = width;\n\n        this.order = order;\n        this.visibleIf = visibleIf;\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Field } from './field';\nimport { FiledTypes } from './definitions/fieldTypes';\n\nexport class Group {\n    id;\n    title;\n    description;\n    block;\n    width;\n    order;\n    visibleIf;\n    fields;\n\n    constructor({\n        id = uuid(),\n        title = 'New Group',\n        description = '',\n        block = true,\n        width = { mobile: 100, desktop: 100 },\n        order = 0,\n        visibleIf = true,\n        fields = []\n    }) {\n        this.id = id;\n        this.title = title;\n        this.type = FiledTypes.Group;\n        this.description = description;\n        this.block = block;\n        this.width = width;\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.fields = fields.map(f => new Field(f));\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Group } from './group';\nimport { FiledTypes } from './definitions/fieldTypes';\n\nexport class Page {\n    id;\n    title;\n    type;\n    header;\n    order;\n    visibleIf;\n    groups;\n    buttons;\n\n    constructor(page = {}) {\n        const {\n            id = uuid(),\n            title = 'New Page',\n            description = '',\n            header = {},\n            order = 0,\n            visibleIf = true,\n            groups = [],\n            buttons = {}\n        } = page;\n\n        this.id = id;\n        this.title = title;\n        this.type = FiledTypes.Page;\n        this.description = description;\n        this.header = {\n            description: '',\n            image: '',\n            show: true,\n            showProgress: true,\n            ...header\n        };\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.groups = groups.map(g => new Group(g));\n        this.buttons = {\n            cancel: { show: true, text: 'Cancel' },\n            back: { show: true, text: 'Back' },\n            save: { show: true, text: 'Save' },\n            next: { show: true, text: 'Next' },\n            ...buttons\n        };\n    }\n}\n","import {\n    CONFIGURATOR_SELECT_ITEM,\n    CONFIGURATOR_REMOVE_ITEM,\n    CONFIGURATOR_SHOW_PROPERTIES,\n    CONFIGURATOR_SET_PAGES,\n    CONFIGURATOR_SET_GROUPS,\n    CONFIGURATOR_SET_FIELDS\n} from './actions';\nimport { TEST_PAGES } from '../testData';\n\nconst defaultState = {\n    selected: {},\n    form: undefined,\n    pages: TEST_PAGES\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        // Select item to display properties\n        case CONFIGURATOR_SELECT_ITEM:\n            return { ...state, selected: { page: action.page, group: action.group, field: action.field } };\n\n        // Assign pages\n        case CONFIGURATOR_SET_PAGES:\n            return { ...state, pages: action.pages };\n        // Assign groups\n        case CONFIGURATOR_SET_GROUPS:\n            const sgPages = state.pages.map(p => (p.id === action.page.id ? { ...p, groups: action.groups } : p));\n            return { ...state, pages: sgPages };\n        // Assign fields\n        case CONFIGURATOR_SET_FIELDS:\n            const sfPages = state.pages.map(p => {\n                return p.id === action.page.id\n                    ? {\n                          ...p,\n                          groups: p.groups.map(g => {\n                              return g.id === action.group.id ? { ...g, fields: action.fields } : g;\n                          })\n                      }\n                    : p;\n            });\n            return { ...state, pages: sfPages };\n\n        default:\n            return state;\n    }\n}\n\nexport const setPages = pages => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, pages });\n};\nexport const setGroups = (page, groups) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_GROUPS, page, groups });\n};\nexport const setFields = (page, group, fields) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_FIELDS, page, group, fields });\n};\n\nexport const selectItem = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SELECT_ITEM, page, group, field });\n};\n\n//\n// --------------------------------------------------------\n//\n\nexport const removeItem = () => async dispatch => {\n    dispatch({ type: CONFIGURATOR_REMOVE_ITEM });\n};\n\nexport const showProperties = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SHOW_PROPERTIES, page, group, field });\n};\n\nexport const setForm = form => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, form });\n};\n","import { Page } from './models/page';\nimport { Group } from './models/group';\nimport { Field } from './models/field';\nimport { FiledTypes } from './models/definitions/fieldTypes';\n\nexport const TEST_PAGES = [\n    new Page({\n        title: 'Intro',\n        header: {\n            description:\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a rutrum tellus. Fusce ut mauris id nunc bibendum fringilla. Cras rutrum non ipsum in malesuada. Aliquam semper est vitae magna laoreet sagittis. Integer maximus blandit dictum. Fusce iaculis lacus id quam blandit rhoncus. Sed accumsan massa ac turpis congue fringilla. Etiam rutrum elit non est lacinia, ut posuere velit fringilla. Sed vehicula pharetra elit in suscipit. Phasellus nec ultrices dui. Cras lectus est, fringilla ut velit ut, commodo ullamcorper justo. Maecenas facilisis diam in ante venenatis, sit amet porta nisi auctor. Aenean a ante ut nisi efficitur lacinia.',\n            image: 'http://clipart-library.com/img/752503.jpg',\n            show: true,\n            showProgress: true\n        },\n        buttons: { next: { show: true, text: 'Move forward' } },\n        groups: [\n            new Group({\n                title: 'Personal Info',\n                description:\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a rutrum tellus. Fusce ut mauris id nunc bibendum fringilla. Cras rutrum non ipsum in malesuada. Aliquam semper est vitae magna laoreet sagittis. Integer maximus blandit dictum. Fusce iaculis lacus id quam blandit rhoncus. Sed accumsan massa ac turpis congue fringilla. Etiam rutrum elit non est lacinia, ut posuere velit fringilla. Sed vehicula pharetra elit in suscipit. Phasellus nec ultrices dui. Cras lectus est, fringilla ut velit ut, commodo ullamcorper justo. Maecenas facilisis diam in ante venenatis, sit amet porta nisi auctor. Aenean a ante ut nisi efficitur lacinia.',\n                fields: [\n                    new Field({ title: 'Name' }),\n                    new Field({ title: 'Email' }),\n                    new Field({ title: 'Age', type: FiledTypes.Number }),\n                    new Field({ title: 'Sex', type: FiledTypes.Select }),\n                    new Field({ title: 'Date of birth', type: FiledTypes.Date }),\n                    new Field({ title: 'Eligible', type: FiledTypes.Boolean })\n                ]\n            }),\n            new Group({\n                title: 'Location',\n                fields: [\n                    new Field({ title: 'Country' }),\n                    new Field({ title: 'City' }),\n                    new Field({ title: 'Address' }),\n                    new Field({ title: 'Post Code' })\n                ]\n            })\n        ]\n    }),\n    new Page({\n        title: 'Tax Details',\n        groups: [\n            new Group({ title: 'SSN', fields: [new Field({ title: 'Type' }), new Field({ title: 'Number' })] }),\n            new Group({\n                title: 'Registration',\n                fields: [new Field({ title: 'Date' }), new Field({ title: 'Unit' })]\n            })\n        ]\n    }),\n    new Page({\n        title: 'Lorem ipsum dolor',\n        groups: [\n            new Group({\n                title:\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n                fields: [new Field({ title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit' })]\n            })\n        ]\n    })\n];\n","export const CONFIGURATOR_SELECT_ITEM = 'CONFIGURATOR_SELECT_ITEM';\nexport const CONFIGURATOR_REMOVE_ITEM = 'CONFIGURATOR_REMOVE_ITEM';\nexport const CONFIGURATOR_SHOW_PROPERTIES = 'CONFIGURATOR_SHOW_PROPERTIES';\nexport const CONFIGURATOR_SET_FORM = 'CONFIGURATOR_SET_FORM';\nexport const CONFIGURATOR_SET_PAGES = 'CONFIGURATOR_SET_PAGES';\nexport const CONFIGURATOR_SET_GROUPS = 'CONFIGURATOR_SET_GROUPS';\nexport const CONFIGURATOR_SET_FIELDS = 'CONFIGURATOR_SET_FIELDS';\n\nexport const UI_SET_DIMENSIONS = 'UI_SET_DIMENSIONS';\n\nexport const FIELDS_SET_FIELD = 'FIELDS_SET_FIELD';\n","import { FIELDS_SET_FIELD } from './actions';\n\nconst defaultState = {\n    list: undefined\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case FIELDS_SET_FIELD:\n            return { ...state, list: action.data };\n\n        default:\n            return state;\n    }\n}\n","import { UI_SET_DIMENSIONS } from './actions';\n\nconst defaultState = {\n    screen: { width: 0, height: 0 },\n    panel: { height: 0 }\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case UI_SET_DIMENSIONS:\n            return { ...state, ...action.data };\n\n        default:\n            return state;\n    }\n}\n\nexport const setDimensions = rect => async dispatch => {\n    const screen = { width: window.innerWidth, height: window.innerHeight };\n    const topOffset = rect ? rect.top : 0;\n    const panel = { height: screen.height - topOffset - 59 };\n\n    dispatch({ type: UI_SET_DIMENSIONS, data: { screen, panel } });\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { combineReducers } from 'redux';\n\nimport configurator from './configurator';\nimport fields from './fields';\nimport ui from './ui';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    if (typeof window === 'object') {\n        const { __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ } = window;\n        if (__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && typeof __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function') {\n            enhancers.push(__REDUX_DEVTOOLS_EXTENSION_COMPOSE__());\n        }\n    }\n}\n\nconst appReducer = combineReducers({\n    configurator,\n    ui,\n    fields\n});\n\nconst rootReducer = (state, action) => appReducer(state, action);\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\nexport const store = createStore(rootReducer, initialState, composedEnhancers);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass ListItem extends React.Component {\n    render() {\n        const {\n            item: {\n                data: {\n                    title,\n                    type: { icon }\n                },\n                selected,\n                onSelect,\n                openPanel\n            },\n            picked = this.props.itemSelected > 0,\n            dragHandleProps\n        } = this.props;\n\n        return (\n            <div className={`fg-panel-item ${picked ? 'dragged' : ''} ${selected ? 'selected' : ''}`}>\n                <Button minimal={true} icon={selected ? 'manually-entered-data' : 'cog'} onClick={onSelect} />\n                <div className=\"item-title ellipsis\" {...dragHandleProps}>\n                    {title}\n                </div>\n                {!!openPanel ? (\n                    <Button minimal={true} icon=\"caret-right\" onClick={openPanel} />\n                ) : (\n                    <Button className=\"fg-type-indicator\" disabled={true} icon={icon} />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, Classes } from '@blueprintjs/core';\nimport ListItem from './item';\nimport { selectItem, setFields } from '../../../../../state/configurator';\nimport { Field } from '../../../../../models/field';\n\nclass FieldsPanel extends React.Component {\n    componentDidMount() {\n        const { page, group, fields = [], selected: { field } = {}, selectItem } = this.props;\n        if (!field && fields.length > 0) selectItem(page, group, fields[0]);\n    }\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, group, fields = [], closePanel, height, selected, selectItem, setFields } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page, group);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{group.title}</div>\n                        </div>\n                        <Button\n                            icon=\"plus\"\n                            minimal={true}\n                            onClick={() => setFields(page, group, [...fields, new Field({ title: 'New Field' })])}\n                        />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={fields.map(field => ({\n                                    id: field.id,\n                                    data: field,\n                                    selected: selected && selected.field && selected.field.id === field.id,\n                                    onSelect: () => selectItem(page, group, field)\n                                }))}\n                                onMoveEnd={newList =>\n                                    setFields(page, group, newList.map((f, i) => ({ ...f.data, order: i })))\n                                }\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const group = ((page || {}).groups || []).find(g => g.id === props.group.id);\n    const fields = (group || {}).fields;\n    return {\n        page,\n        group,\n        fields,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            selectItem,\n            setFields\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, Classes } from '@blueprintjs/core';\nimport FieldsPanel from './fields';\nimport ListItem from './item';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\nimport { Group } from '../../../../../models/group';\n\nclass GroupsPanel extends React.Component {\n    componentDidMount() {\n        const { page, groups = [], selected: { group } = {}, selectItem } = this.props;\n        if (!group && groups.length > 0) selectItem(page, groups[0]);\n    }\n\n    openFieldsPanel = group => {\n        const { page, openPanel } = this.props;\n        openPanel({ component: FieldsPanel, props: { page, group } });\n    };\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, groups = [], closePanel, height, selected, setGroups, selectItem } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{page.title}</div>\n                        </div>\n                        <Button\n                            icon=\"plus\"\n                            minimal={true}\n                            onClick={() => setGroups(page, [...groups, new Group({ title: 'New Group' })])}\n                        />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={groups.map(group => ({\n                                    id: group.id,\n                                    data: group,\n                                    selected: selected && selected.group && selected.group.id === group.id,\n                                    onSelect: () => selectItem(page, group),\n                                    openPanel: () => this.openFieldsPanel(group)\n                                }))}\n                                onMoveEnd={newList => setGroups(page, newList.map((g, i) => ({ ...g.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const groups = (page || {}).groups;\n    return {\n        page,\n        groups,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SimpleBar from 'simplebar-react';\nimport DraggableList from 'react-draggable-list';\nimport { Card, Menu, Button } from '@blueprintjs/core';\nimport GroupsPanel from './groups';\nimport ListItem from './item';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport { Page } from '../../../../../models/page';\n\nclass PagesPanel extends React.Component {\n    componentDidMount() {\n        const { pages = [], selected: { page } = {}, selectItem } = this.props;\n        if (!page && pages.length > 0) selectItem(pages[0]);\n    }\n\n    addPage = async () => {\n        const { pages = [], setPages, selectItem } = this.props;\n        const newPage = new Page({ title: 'New Page', order: pages.length });\n        await setPages([...pages, newPage]);\n        selectItem(newPage);\n    };\n\n    openGroupsPanel = page => {\n        const { openPanel } = this.props;\n        openPanel({ component: GroupsPanel, props: { page } });\n    };\n\n    render() {\n        const { height, pages = [], selected = {}, setPages, selectItem } = this.props;\n\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Pages</span>\n                        </div>\n                        <Button icon=\"plus\" minimal={true} onClick={this.addPage} />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={pages.map(page => ({\n                                    id: page.id,\n                                    data: page,\n                                    selected: selected && selected.page && selected.page.id === page.id,\n                                    onSelect: () => selectItem(page),\n                                    openPanel: () => this.openGroupsPanel(page)\n                                }))}\n                                onMoveEnd={newList => setPages(newList.map((p, i) => ({ ...p.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    pages: state.configurator.pages,\n    selected: state.configurator.selected,\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PagesPanel);\n","import React from 'react';\nimport { PanelStack } from '@blueprintjs/core';\nimport PagesPanel from './panels/pages';\n\nclass Navigator extends React.Component {\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-navigator\" style={{ height: `${height - 70}px` }}>\n                <div className=\"panel-wrapper bp3-elevation-1\">\n                    <PanelStack initialPanel={{ component: PagesPanel }} showPanelHeader={false} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navigator;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, InputGroup } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass InputField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <InputGroup\n                                {...field}\n                                {...extra}\n                                onChange={e => field.onChange(e)}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default InputField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Button, TagInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TagField extends React.Component {\n    defaultValue = [];\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: value || []\n            }\n        });\n    };\n\n    clearButton = field => {\n        const { disabled } = this.props;\n        if (field.value.length === 0) return null;\n\n        return <Button disabled={disabled} icon={'cross'} minimal={true} onClick={() => this.onChange([], field)} />;\n    };\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TagInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                addOnBlur={true}\n                                tagProps={{ minimal: true }}\n                                rightElement={this.clearButton(field)}\n                                onChange={v => this.onChange(v, field)}\n                                values={field.value || []}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TagField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass CheckboxField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Checkbox\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default CheckboxField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Switch } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SwitchField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Switch\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SwitchField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, RadioGroup, Radio } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass RadioField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, inline = true, validate, options = [], label, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            className={className}\n                        >\n                            <RadioGroup\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                label={label}\n                                onChange={field.onChange}\n                                selectedValue={field.value}\n                                className={`radio-field`}\n                                inline={inline}\n                            >\n                                {options.map(({ value, label }, index) => (\n                                    <Radio\n                                        key={index}\n                                        label={label}\n                                        value={value.toString()}\n                                        checked={field.value === value}\n                                    />\n                                ))}\n                            </RadioGroup>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default RadioField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'M/D/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <DateInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateRangeInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateRangeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'M/D/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <DateRangeInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateRangeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { TimePicker } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TimeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, useAmPm = true, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TimePicker\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                useAmPm={useAmPm}\n                                selectAllOnFocus={true}\n                                onChange={v => this.onChange(v, field)}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TimeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Spinner, Button, Tag } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\nimport Upload from 'rc-upload';\n\nimport './fields.scss';\n\nclass FileField extends React.Component {\n    defaultValue = [];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pending: [],\n            processed: []\n        };\n\n        this.setPendingFile = this.setPendingFile.bind(this);\n        this.setProcessedFile = this.setProcessedFile.bind(this);\n        this.processFile = this.processFile.bind(this);\n    }\n\n    setPendingFile = (file, cb) => {\n        this.setState({ ...this.state, pending: [...this.state.pending, file] }, cb);\n    };\n    setProcessedFile = (file, field) => {\n        const pending = [...this.state.pending.filter(pend => pend.id !== file.id)];\n        this.setState(\n            {\n                ...this.state,\n                processed: [...this.state.processed, file],\n                pending\n            },\n            () => this.onChange(this.state.processed, field)\n        );\n    };\n    onRemove = (id, field) => {\n        const processed = this.state.processed.filter(f => f.id !== id);\n        this.setState({ ...this.state, processed }, () => this.onChange(processed, field));\n    };\n\n    processFile = ({ id, file }, field) => {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            let fileInfo = {\n                id,\n                name: file.name,\n                type: file.type,\n                size: Math.round(file.size / 1000) + ' kB',\n                base64: reader.result,\n                file: file\n            };\n\n            this.setProcessedFile(fileInfo, field);\n        };\n    };\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            multi = false,\n            types = [],\n            validate,\n            label,\n            placeholder,\n            info,\n            className\n        } = this.props;\n\n        const uploadProps = field => ({\n            action: 'api uri',\n            type: 'drag',\n            accept: types.join(','),\n            multiple: multi,\n            beforeUpload: file => {\n                const fileObject = { file, id: uuid() };\n                this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n            },\n            onStart: () => null,\n            onSuccess: () => null,\n            onProgress: () => null,\n            onError: () => null,\n            customRequest: () => null\n        });\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <div>\n                                {this.state.pending.length > 0 && <Spinner size={15} />}\n                                {this.state.processed.map((p, i) => (\n                                    <Tag\n                                        key={i}\n                                        minimal={true}\n                                        onRemove={() => this.onRemove(p.id, field)}\n                                        fill={true}\n                                        className=\"mg-b-5\"\n                                    >\n                                        {p.name}\n                                    </Tag>\n                                ))}\n                                <Upload\n                                    {...uploadProps(field)}\n                                    beforeUpload={file => {\n                                        const fileObject = { file, id: uuid() };\n                                        this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n                                    }}\n                                >\n                                    <Button rightIcon=\"upload\" text={placeholder} />\n                                </Upload>\n                            </div>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default FileField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, NumericInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass NumberField extends React.Component {\n    defaultValue = 0;\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <NumericInput\n                                max={Number.MAX_SAFE_INTEGER}\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                placeholder={placeholder}\n                                fill={true}\n                                allowNumericCharactersOnly={false}\n                                onValueChange={v => this.onChange(v, field)}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default NumberField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { Select } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = ({ value }, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    renderOption = (option, { handleClick, modifiers }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                className=\"fg-field-fill\"\n                active={modifiers.active}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n            />\n        );\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    const activeOption = options.find(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Select\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                itemRenderer={this.renderOption}\n                                className=\"fg-field-fill\"\n                                inputProps={{ className: 'fg-field-fill' }}\n                                noResults={<MenuItem disabled={true} text=\"-\" />}\n                                onItemSelect={v => this.onItemSelect(v, field)}\n                            >\n                                <Button\n                                    rightIcon=\"caret-down\"\n                                    text={activeOption ? activeOption.label : placeholder}\n                                    className=\"fg-field-fill space-between\"\n                                />\n                            </Select>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SelectField;\n","import InputField from './input';\nimport TagField from './tag';\nimport CheckboxField from './checkbox';\nimport SwitchField from './switch';\nimport RadioField from './radio';\nimport DateField from './date';\nimport DateRangeField from './dateRange';\nimport TimeField from './time';\nimport FileField from './file';\nimport NumberField from './number';\nimport SelectField from './select';\nimport MultiSelectField from './multiSelect';\n\nexport const Fields = {\n    Input: InputField,\n    Tag: TagField,\n    Checkbox: CheckboxField,\n    Switch: SwitchField,\n    Radio: RadioField,\n    Date: DateField,\n    DateRange: DateRangeField,\n    Time: TimeField,\n    File: FileField,\n    Number: NumberField,\n    Select: SelectField,\n    MultiSelect: MultiSelectField\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass MultiSelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = ({ value }, field) => {\n        const { id, name } = this.props;\n        const fieldValue = field.value || [];\n        const values = fieldValue.includes(value) ? fieldValue.filter(fv => fv !== value) : [...fieldValue, value];\n\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onRemove = (_, index, field) => {\n        const { id, name } = this.props;\n        const values = (field.value || []).filter((__, i) => i !== index);\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onClear = ({ onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: []\n            }\n        });\n    };\n\n    renderOption = (option, { handleClick, modifiers }, { value = [] }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                icon={value.includes(option.value) ? 'tick' : 'blank'}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n                shouldDismissPopover={false}\n            />\n        );\n    };\n\n    renderTag = (value, { tagProps, onRemove, rightElement }) => {\n        const { options } = this.props;\n        return (options.find(o => o.value === value) || {}).label;\n    };\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    // const selectedOptions = options.filter(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <MultiSelect\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                placeholder={placeholder}\n                                itemRenderer={(o, c) => this.renderOption(o, c, field)}\n                                tagRenderer={this.renderTag}\n                                popoverProps={{\n                                    className: 'fg-field-fill'\n                                }}\n                                tagInputProps={{\n                                    className: 'fg-field-fill',\n                                    tagProps: { minimal: true },\n                                    onRemove: (_, index) => this.onRemove(_, index, field),\n                                    rightElement:\n                                        !!field.value && field.value.length > 0 ? (\n                                            <Button icon=\"cross\" minimal={true} onClick={() => this.onClear(field)} />\n                                        ) : (\n                                            undefined\n                                        )\n                                }}\n                                noResults={<MenuItem disabled={true} text=\"No results.\" />}\n                                onItemSelect={v => this.onItemSelect(v, field)}\n                                selectedItems={field.value || []}\n                                usePortal={false}\n                                inline={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default MultiSelectField;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\n\nclass GroupProperties extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    onSubmit = values => {\n        const { setGroups, page, groups } = this.props;\n        setGroups(page, [...groups.map(g => (g.id === values.id ? { ...g, ...values } : g))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setGroups, page, groups, group } = this.props;\n        await selectItem(page);\n        setGroups(page, [...groups.filter(g => g.id !== group.id)]);\n    };\n\n    render() {\n        const { group } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...group }}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'description'}\n                                label={'Description'}\n                                placeholder={'Description'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Checkbox\n                                name={'block'}\n                                placeholder={'Block (show as block?)'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Number\n                                label={'Width'}\n                                info={'(desktop)'}\n                                name={'width.desktop'}\n                                extra={{\n                                    min: 10,\n                                    max: 100,\n                                    leftIcon: 'percentage'\n                                }}\n                                placeholder={'Width (desktop)'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Number\n                                label={'Width'}\n                                info={'(mobile)'}\n                                name={'width.mobile'}\n                                extra={{\n                                    min: 10,\n                                    max: 100,\n                                    leftIcon: 'percentage'\n                                }}\n                                placeholder={'Width (mobile)'}\n                                className=\"fg-field width-100\"\n                            />\n                            <div className=\"pd-15\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    const groups = (page || {}).groups;\n    const group = (groups || []).find(g => g.id === selected.group.id);\n\n    return {\n        selected,\n        pages,\n        page,\n        groups,\n        group\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupProperties);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass PropertiesGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { open: !!props.open };\n    }\n\n    toggle = () => this.setState({ ...this.state, open: !this.state.open });\n\n    render() {\n        const { open } = this.state;\n        const { title, children } = this.props;\n        return (\n            <div className=\"fg-properties-group\">\n                <div className=\"fg-properties-group-header mg-x-15\">\n                    <Button\n                        fill={true}\n                        text={title}\n                        rightIcon={!!open ? 'caret-up' : 'caret-down'}\n                        onClick={this.toggle}\n                        className=\"mg-b-20\"\n                    />\n                </div>\n                {!!open && <div className=\"fg-properties-group-body\">{children}</div>}\n            </div>\n        );\n    }\n}\n\nexport default PropertiesGroup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport PropertiesGroup from '../components/propertiesGroup';\n\nclass PageProperties extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    onSubmit = values => {\n        const { setPages, pages } = this.props;\n        setPages([...pages.map(p => (p.id === values.id ? { ...p, ...values } : p))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setPages, pages, page } = this.props;\n        await selectItem();\n        setPages([...pages.filter(p => p.id !== page.id)]);\n    };\n\n    render() {\n        const { page } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...page }}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <PropertiesGroup title=\"Header\">\n                                <Fields.Input\n                                    name={'header.description'}\n                                    label={'Description'}\n                                    placeholder={'Description'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'header.image'}\n                                    label={'Header Image'}\n                                    placeholder={'Url'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Checkbox\n                                    name={'header.show'}\n                                    placeholder={'Show header ?'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'header.showProgress'}\n                                    placeholder={'Show progress bar ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                            </PropertiesGroup>\n\n                            <PropertiesGroup title=\"Buttons\">\n                                <Fields.Input\n                                    name={'buttons.cancel.text'}\n                                    label={'Cancel label'}\n                                    placeholder={'Cancel label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.cancel.show'}\n                                    placeholder={'Show cancel button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n\n                                <Fields.Input\n                                    name={'buttons.back.text'}\n                                    label={'Back label'}\n                                    placeholder={'Back label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.back.show'}\n                                    placeholder={'Show back button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'buttons.save.text'}\n                                    label={'Save label'}\n                                    placeholder={'Save label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.save.show'}\n                                    placeholder={'Show save button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                            </PropertiesGroup>\n\n                            <div className=\"mg-x-15 mg-t-20\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    return {\n        selected,\n        pages,\n        page\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PageProperties);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\nimport GroupProperties from './forms/group';\nimport PageProperties from './forms/page';\n\nclass Properties extends React.Component {\n    renderPropertiesForm = () => {\n        const { selected = {} } = this.props;\n        const { page, group, field } = selected;\n        if (!!field) {\n            return <div>field form ...</div>;\n        }\n        if (!!group) {\n            return <GroupProperties />;\n        }\n        if (!!page) {\n            return <PageProperties />;\n        }\n\n        return <div className=\"pd-20 tx-center\">Select item to show properties.</div>;\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-properties\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1}>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Properties</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-y-20 pd-x-5\">{this.renderPropertiesForm()}</div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Properties);\n","import React from 'react';\nimport { Card, Button, Intent } from '@blueprintjs/core';\n\nclass FormButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        const {\n            buttons: { cancel, back, save, next }\n        } = this.props;\n\n        return (\n            <Card elevation={0} className=\"fg-buttons\">\n                <div className=\"fg-left-buttons\">\n                    {!!cancel.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {cancel.text}\n                        </Button>\n                    )}\n                    {!!back.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {back.text}\n                        </Button>\n                    )}\n                </div>\n                <div className=\"fg-right-buttons\">\n                    {!!save.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {save.text}\n                        </Button>\n                    )}\n                    {!!next.show && (\n                        <Button type=\"submit\" intent={Intent.SUCCESS}>\n                            {next.text}\n                        </Button>\n                    )}\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default FormButtons;\n","import React from 'react';\nimport { Card } from '@blueprintjs/core';\n\nclass PageRenderer extends React.Component {\n    render() {\n        const { progress, page } = this.props;\n        const {\n            title,\n            header: { description, image, show, showProgress }\n        } = page;\n\n        return (\n            <React.Fragment>\n                {progress({\n                    style: { borderRadius: !!show ? '3px 3px 0 0' : '3px', marginBottom: !!show ? '0px' : '20px' },\n                    showProgress\n                })}\n                {!!show && (\n                    <Card\n                        elevation={0}\n                        className=\"fg-renderer-header\"\n                        style={{ borderRadius: !!showProgress ? '0 0 3px 3px' : '3px' }}\n                    >\n                        {!!image && (\n                            <div\n                                className=\"fg-page-header-image\"\n                                style={{\n                                    backgroundImage: `url(${image})`,\n                                    borderRadius: !!showProgress ? '0px' : '3px 3px 0 0'\n                                }}\n                            />\n                        )}\n                        <h3 className=\"mg-0\">{title}</h3>\n                        {!!description && <span className=\"bp3-text-small bp3-text-muted\">{description}</span>}\n                    </Card>\n                )}\n                <div>groups go here ...</div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PageRenderer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Card, Button, ProgressBar, Popover, Menu, MenuItem } from '@blueprintjs/core';\nimport FormButtons from './components/buttons';\nimport PageRenderer from './components/page';\n\nimport './renderer.scss';\n\nclass FromRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pageIndex: 0 };\n    }\n\n    onSubmit = values => {\n        console.log(values);\n    };\n\n    render() {\n        const { pageIndex } = this.state;\n        const { pages = [], activePageOverride } = this.props;\n        if (pages.length === 0) return null;\n\n        const index = Number.isNaN(activePageOverride) ? pageIndex : activePageOverride;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{}}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={() => {\n                    return (\n                        <Form>\n                            <PageRenderer\n                                page={pages[index]}\n                                progress={({ style, showProgress }) =>\n                                    !!showProgress && (\n                                        <Card elevation={0} className=\"fg-renderer-navigation\" style={style}>\n                                            <ProgressBar\n                                                value={(index + 1) / (pages.length || 1)}\n                                                className=\"bp3-intent-success fg-renderer-progress\"\n                                                animate={false}\n                                            />\n                                            <Popover\n                                                position=\"left-top\"\n                                                content={\n                                                    <Menu>\n                                                        {pages.map((p, i) => (\n                                                            <MenuItem\n                                                                key={i}\n                                                                icon={i === index ? 'confirm' : 'circle'}\n                                                                disabled={i === index}\n                                                                text={p.title}\n                                                            />\n                                                        ))}\n                                                    </Menu>\n                                                }\n                                            >\n                                                <Button icon=\"menu\" minimal={true} className=\"fg-renderer-menu\" />\n                                            </Popover>\n                                        </Card>\n                                    )\n                                }\n                            />\n                            <FormButtons buttons={pages[index].buttons} />\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FromRenderer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\nimport FromRenderer from '../../../renderer';\n\nclass Preview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const { height, pages = [], selected: { page } = {} } = this.props;\n        const index =\n            pages.map((p, i) => (p.id === (!!page ? page.id : p.id) ? i : undefined)).find(i => i !== undefined) || 0;\n\n        return (\n            <div className=\"configurator-preview\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1} className=\"fg-panel-wrapper\">\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Preview</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-20\">\n                            <FromRenderer pages={pages} activePageOverride={index} />\n                        </div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected,\n    pages: state.configurator.pages\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Preview);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Navigator from './components/navigator';\nimport Properties from './components/properties';\nimport Preview from './components/preview';\nimport { setDimensions } from '../../state/ui';\n\nimport 'simplebar/dist/simplebar.min.css';\nimport './configurator.scss';\n\nclass FormConfigurator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        const { setDimensions } = this.props;\n        var rect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n        setDimensions(rect);\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-wrapper\">\n                <Navigator height={height} />\n                <Properties height={height} />\n                <Preview height={height} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setDimensions\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormConfigurator);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from '../state';\nimport FormConfigurator from './configurator';\nimport {\n    FocusStyleManager,\n    Navbar,\n    NavbarGroup,\n    NavbarDivider,\n    NavbarHeading,\n    Menu,\n    MenuItem,\n    Popover,\n    Button,\n    MenuDivider\n} from '@blueprintjs/core';\n\nclass FormGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        FocusStyleManager.onlyShowFocusOnTabs();\n\n        return (\n            <Provider store={store}>\n                <div className=\"form-generator\">\n                    <Navbar className=\"fg-navbar\">\n                        <NavbarGroup>\n                            <NavbarHeading>Form Generator</NavbarHeading>\n                            <NavbarDivider />\n                            <Popover\n                                content={\n                                    <Menu>\n                                        <MenuItem icon=\"floppy-disk\" text=\"Save\" />\n                                        <MenuDivider />\n                                        <MenuItem icon=\"new-object\" text=\"New\" />\n                                        <MenuDivider />\n                                        <MenuItem icon=\"export\" text=\"Export\" />\n                                        <MenuItem icon=\"import\" text=\"Import\" />\n                                    </Menu>\n                                }\n                            >\n                                <Button minimal={true} text=\"File\" />\n                            </Popover>\n                        </NavbarGroup>\n                    </Navbar>\n                    <div className=\"stage\">\n                        <FormConfigurator />\n                    </div>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default FormGenerator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FormGenerator from './containers';\n\nimport './styles/root.scss';\n\nconst root = document.getElementById('root');\nReactDOM.render(<FormGenerator />, root);\n"],"sourceRoot":""}