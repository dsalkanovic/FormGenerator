{"version":3,"sources":["utilities/common.jsx","fields/input.jsx","fields/tag.jsx","fields/checkbox.jsx","fields/switch.jsx","fields/radio.jsx","fields/date.jsx","fields/dateRange.jsx","fields/time.jsx","fields/file.jsx","fields/number.jsx","fields/slider.jsx","fields/select.jsx","fields/index.js","fields/multiSelect.jsx","models/definitions/text.jsx","models/definitions/date.jsx","models/definitions/boolean.jsx","models/definitions/fieldTypes.jsx","models/field.jsx","models/group.jsx","models/page.jsx","state/configurator.jsx","testData.jsx","state/actions.jsx","state/fields.jsx","state/ui.jsx","state/index.jsx","containers/configurator/components/navigator/panels/item.jsx","containers/configurator/components/navigator/panels/fields.jsx","containers/configurator/components/navigator/panels/groups.jsx","containers/configurator/components/navigator/panels/pages.jsx","containers/configurator/components/navigator/index.jsx","containers/configurator/components/properties/forms/field.jsx","utilities/constants.jsx","containers/configurator/components/properties/forms/group.jsx","containers/configurator/components/properties/components/propertiesGroup.jsx","containers/configurator/components/properties/forms/page.jsx","containers/configurator/components/properties/index.jsx","containers/renderer/components/buttons.jsx","containers/renderer/components/field.jsx","containers/renderer/components/group.jsx","containers/renderer/components/page.jsx","containers/renderer/index.jsx","containers/configurator/components/preview/index.jsx","containers/configurator/index.jsx","containers/index.jsx","renderedForm.jsx","index.js"],"names":["uuid","n","arguments","length","undefined","replace","Math","random","toString","slice","isEmpty","string","InputField","defaultValue","_this$props","this","props","_this$props$id","id","name","validate","_this$props$type","type","label","placeholder","info","className","extra","react_default","a","createElement","formik_esm","render","_ref","field","formGroup","helperText","labelFor","labelInfo","inputGroup","Object","assign","onChange","e","fill","autoComplete","concat","React","Component","TagField","value","_this","persist","target","clearButton","disabled","button_buttons","icon","minimal","onClick","_this2","_this$props2","_this$props2$id","_this$props2$type","_ref2","tagInput","addOnBlur","tagProps","rightElement","v","values","CheckboxField","controls","checked","SwitchField","RadioField","_this$props$inline","inline","_this$props$options","options","radioGroup","selectedValue","map","index","key","DateField","_callee","submitForm","submitOnChange","regenerator_default","wrap","_context","prev","next","momentFormatter","formatDate","stop","_this$props$format","format","date","moment","parseDate","str","toDate","_this$props2$min","min","add","_this$props2$max","max","_ref4","form","dateInput","minDate","maxDate","timePrecision","inputProps","onKeyDown","preventDefault","DateRangeField","locale","dateRangeInput","TimeField","_this$props2$useAmPm","useAmPm","timePicker","selectAllOnFocus","FileField","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setPendingFile","file","cb","setState","objectSpread","state","pending","toConsumableArray","setProcessedFile","filter","pend","processed","onRemove","f","processFile","reader","FileReader","readAsDataURL","onload","fileInfo","size","round","base64","result","bind","assertThisInitialized","_this$props2$multi","multi","_this$props2$types","types","_ref3","spinner","p","i","tag_tag","rc_upload_es","action","accept","join","multiple","beforeUpload","fileObject","onStart","onSuccess","onProgress","onError","customRequest","uploadProps","rightIcon","text","NumberField","numericInput","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","allowNumericCharactersOnly","onValueChange","SliderField","_this$props$submitOnC","_this$props2$extra","stepSize","labelStepSize","_this$props2$disabled","slider","vertical","SelectField","onItemSelect","renderOption","option","_ref5","handleClick","modifiers","matchesPredicate","menuItem","active","_ref6","activeOption","find","o","select_select","items","filterable","itemRenderer","noResults","Fields","Input","Tag","Checkbox","Switch","Radio","Date","DateRange","Time","File","Slider","Select","MultiSelect","fieldValue","includes","fv","_","__","onClear","_this$props3","_ref4$value","shouldDismissPopover","renderTag","_this$props4","_this$props4$id","multiSelect","c","tagRenderer","popoverProps","tagInputProps","selectedItems","usePortal","TextFieldDefinition","_ref$defaultValue","_ref$validation","validation","_ref$isRequired","isRequired","_ref$isMulti","isMulti","_ref$mask","mask","getProperties","getPropertyFields","validationFunc","_ref2$validation","_ref2$isRequired","Yup","required","validator","email","zip","test","val","ssn","matches","message","excludeEmptyString","Fragment","DateFieldDefinition","_ref$format","definition","BooleanFieldDefinition","FieldTypeDefinitions","Page","rank","Group","Text","buildDefinition","d","Boolean","FieldTypes","Field","_ref$id","property","_ref$type","_ref$definition","_ref$width","width","mobile","desktop","_ref$title","title","_ref$description","description","_ref$order","order","_ref$visibleIf","visibleIf","typeDefinition","Map","ftd","buildTypeDefinitionDetails","_ref$block","block","_ref$fields","fields","page","_page$id","_page$title","_page$description","_page$header","header","_page$order","_page$visibleIf","_page$groups","groups","_page$buttons","buttons","image","show","showProgress","g","cancel","back","save","defaultState","selected","pages","setPages","asyncToGenerator","mark","dispatch","_x","apply","setGroups","_callee2","_context2","_x2","setFields","group","_callee3","_context3","_x3","selectItem","_callee4","_context4","_x4","list","screen","height","panel","setDimensions","rect","topOffset","window","innerWidth","innerHeight","top","data","middleware","thunk","appReducer","combineReducers","configurator","sgPages","sfPages","ui","composedEnhancers","compose","applyMiddleware","store","createStore","ListItem","_this$props$item","item","_this$props$item$data","_this$props$item$data2","onSelect","openPanel","_this$props$picked","picked","itemSelected","dragHandleProps","FieldsPanel","addField","_this$props$fields","newField","renderBreadcrumb","Classes","BREADCRUMB","BREADCRUMB_CURRENT","_this$props2$fields","_this$props2$selected","_this$props3$group","_this$props3$fields","closePanel","menu","card","elevation","popover","content","toArray","slicedToArray","_ref2$","tooltip","hoverOpenDelay","simplebar_react_esm","style","ref","el","draggable","js_default","itemKey","template","padding","springConfig","stiffness","damping","onMoveEnd","newList","container","connect","bindActionCreators","GroupsPanel","addGroup","_this$props$groups","newGroup","openFieldsPanel","component","_this$props3$groups","_this$props3$selected","_this$props4$groups","PagesPanel","addPage","_this$props$pages","newPage","openGroupsPanel","_this$props2$pages","_this$props3$pages","Navigator","panelStack","initialPanel","showPanelHeader","FieldProperties","onSubmit","enableReinitialize","initialValues","validationSchema","shape","handleChange","getFieldProperties","intent","safeVariablePattern","GroupProperties","PropertiesGroup","toggle","open","children","PageProperties","propertiesGroup","Properties","renderPropertiesForm","_this$props$selected","forms_field","forms_group","forms_page","FormButtons","_this$props$buttons","isValid","Intent","SUCCESS","FieldRenderer","getFieldName","getField","_this$props2$field","_this$props2$definiti","fieldProps","JSON","stringify","_this$props$field","GroupRenderer","renderFields","_this$props$group","_group$fields","_group$width","components_field","_this$props2$group","_group$width2","_group$fields2","PageRenderer","progress","borderRadius","marginBottom","backgroundImage","components_group","FromRenderer","console","log","getInitialValues","groupProperty","flat","forEach","getValidationSchema","pageShape","formShape","pageIndex","activePageOverride","isNaN","parseInt","components_page","progressBar","animate","position","components_buttons","Preview","containers_renderer","hash","FormConfigurator","updateWindowDimensions","ReactDOM","findDOMNode","getBoundingClientRect","addEventListener","removeEventListener","components_navigator","properties","preview","FormGenerator","FocusStyleManager","onlyShowFocusOnTabs","es","navbar","navbarGroup","navbarHeading","navbarDivider","history","push","process","getState","menuDivider","containers_configurator","_this$props$location$","location","_this$props$location$2","root","document","getElementById","react_router_dom","react_router","exact","path","RenderedForm"],"mappings":"qXAAaA,EAAO,WAAY,IAAXC,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACrB,MAAO,uCACFG,QAAQ,KAAM,kBAAO,EAAqB,GAAhBC,KAAKC,UAAgBC,SAAS,MACxDC,MAAM,EAAGR,IAGLS,EAAU,SAAAC,GACnB,YAAkBP,IAAXO,GAAmC,OAAXA,GAA8B,KAAXA,+CC0CvCC,oNAzCXC,aAAe,2EAEN,IAAAC,EAC8FC,KAAKC,MADnGC,EAAAH,EACGI,UADH,IAAAD,EACQjB,IADRiB,EACgBE,EADhBL,EACgBK,KAAMC,EADtBN,EACsBM,SADtBC,EAAAP,EACgCQ,YADhC,IAAAD,EACuC,OADvCA,EAC+CE,EAD/CT,EAC+CS,MAAOC,EADtDV,EACsDU,YAAaC,EADnEX,EACmEW,KAAMC,EADzEZ,EACyEY,UAAWC,EADpFb,EACoFa,MAEzF,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACP,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAACS,EAAA,EAADC,OAAAC,OAAA,GACQP,EACAP,EAFR,CAGIe,SAAU,SAAAC,GAAC,OAAIT,EAAMQ,SAASC,IAC9BzB,GAAIA,EACJC,KAAMA,EACNG,KAAMA,EACNE,YAAaA,EACboB,MAAM,EACNC,aAAY,GAAAC,OAAK9C,mBAhCxB+C,IAAMC,6BCiEhBC,6MAhEXpC,aAAe,KAEf6B,SAAW,SAACQ,EAADjB,GAAyB,IAAfS,EAAeT,EAAfS,SAAe5B,EACXqC,EAAKnC,MAC1B0B,EAAS,CACLU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,GANwBJ,EACxBI,GAMAC,KAPwBL,EACpBK,KAOJ+B,MAAOA,GAAS,SAK5BI,YAAc,SAAApB,GAAS,IACXqB,EAAaJ,EAAKnC,MAAlBuC,SACR,OAAKrB,EAAMgB,OAAgC,IAAvBhB,EAAMgB,MAAM/C,OAEzByB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQD,SAAUA,EAAUE,KAAM,QAASC,SAAS,EAAMC,QAAS,kBAAMR,EAAKT,SAAS,GAAIR,MAF7C,8EAKhD,IAAA0B,EAAA7C,KAAA8C,EAC8F9C,KAAKC,MADnG8C,EAAAD,EACG3C,UADH,IAAA4C,EACQ9D,IADR8D,EACgB3C,EADhB0C,EACgB1C,KAAMC,EADtByC,EACsBzC,SADtB2C,EAAAF,EACgCvC,YADhC,IAAAyC,EACuC,OADvCA,EAC+CxC,EAD/CsC,EAC+CtC,MAAOC,EADtDqC,EACsDrC,YAAaC,EADnEoC,EACmEpC,KAAMC,EADzEmC,EACyEnC,UAAWC,EADpFkC,EACoFlC,MAEzF,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAAgC,GAAe,IAAZ9B,EAAY8B,EAAZ9B,MACP,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAACmC,EAAA,EAADzB,OAAAC,OAAA,GACQP,EACAP,EAFR,CAGIT,GAAIA,EACJC,KAAMA,EACNG,KAAMA,EACNE,YAAaA,EACboB,MAAM,EACNsB,WAAW,EACXC,SAAU,CAAET,SAAS,GACrBU,aAAcR,EAAKN,YAAYpB,GAC/BQ,SAAU,SAAA2B,GAAC,OAAIT,EAAKlB,SAAS2B,EAAGnC,IAChCoC,OAAQpC,EAAMgB,OAAS,iBAvDhCH,IAAMC,oBCwCduB,6MAvCX1D,cAAe,0EAEN,IAAAC,EAC+EC,KAAKC,MADpFC,EAAAH,EACGI,UADH,IAAAD,EACQjB,IADRiB,EACgBE,EADhBL,EACgBK,KAAMC,EADtBN,EACsBM,SAAUG,EADhCT,EACgCS,MAAOC,EADvCV,EACuCU,YAAaC,EADpDX,EACoDW,KAAMC,EAD1DZ,EAC0DY,UAAWC,EADrEb,EACqEa,MAE1E,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACP,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAAC0C,EAAA,EAADhC,OAAAC,OAAA,GACQP,EACAP,EAFR,CAGIT,GAAIA,EACJC,KAAMA,EACNsD,UAAWvC,EAAMgB,MACjB3B,MAAOC,EACPkB,SAAUR,EAAMQ,uBA9BpBK,IAAMC,WCwCnB0B,6MAvCX7D,cAAe,0EAEN,IAAAC,EAC+EC,KAAKC,MADpFC,EAAAH,EACGI,UADH,IAAAD,EACQjB,IADRiB,EACgBE,EADhBL,EACgBK,KAAMC,EADtBN,EACsBM,SAAUG,EADhCT,EACgCS,MAAOC,EADvCV,EACuCU,YAAaC,EADpDX,EACoDW,KAAMC,EAD1DZ,EAC0DY,UAAWC,EADrEb,EACqEa,MAE1E,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACP,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAAC0C,EAAA,EAADhC,OAAAC,OAAA,GACQP,EACAP,EAFR,CAGIT,GAAIA,EACJC,KAAMA,EACNsD,UAAWvC,EAAMgB,MACjB3B,MAAOC,EACPkB,SAAUR,EAAMQ,uBA9BtBK,IAAMC,oBCgDjB2B,6MA/CX9D,aAAe,2EAEN,IAAAC,EACyFC,KAAKC,MAD9FC,EAAAH,EACGI,UADH,IAAAD,EACQjB,IADRiB,EACgBE,EADhBL,EACgBK,KADhByD,EAAA9D,EACsB+D,cADtB,IAAAD,KACqCxD,EADrCN,EACqCM,SADrC0D,EAAAhE,EAC+CiE,eAD/C,IAAAD,EACyD,GADzDA,EAC6DvD,EAD7DT,EAC6DS,MAAOG,EADpEZ,EACoEY,UAAWC,EAD/Eb,EAC+Ea,MAEpF,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACP,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BO,UAAWA,GAEXE,EAAAC,EAAAC,cAACkD,EAAA,EAADxC,OAAAC,OAAA,GACQP,EACAP,EAFR,CAGIT,GAAIA,EACJC,KAAMA,EACNI,MAAOA,EACPmB,SAAUR,EAAMQ,SAChBuC,cAAe/C,EAAMgB,MACrBxB,UAAS,cACTmD,OAAQA,IAEPE,EAAQG,IAAI,SAAAlB,EAAmBmB,GAAnB,IAAGjC,EAAHc,EAAGd,MAAO3B,EAAVyC,EAAUzC,MAAV,OACTK,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CACIY,IAAKD,EACL5D,MAAOA,EACP2B,MAAOA,EAAM1C,WACbiE,QAASvC,EAAMgB,QAAUA,kBApCxCH,IAAMC,qCCuFhBqC,6MApFXxE,aAAe,KAEf6B,+CAAW,SAAA4C,EAAOpC,EAAPjB,EAAA+B,GAAA,IAAAtB,EAAA6C,EAAAzE,EAAAG,EAAAC,EAAAC,EAAAqE,EAAA,OAAAC,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAgBnD,EAAhBT,EAAgBS,SAAc6C,EAA9BvB,EAA8BuB,WAA9BzE,EACuCqC,EAAKnC,MAD5CC,EAAAH,EACCI,UADD,IAAAD,EACMjB,IADNiB,EACcE,EADdL,EACcK,KAAMqE,EADpB1E,EACoB0E,eADpBG,EAAAE,KAAA,EAEDnD,EAAS,CACXU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,KACAC,OACA+B,MAAOC,EAAK2C,kBAAkBC,WAAW7C,MAR1C,OAYDsC,GACFD,IAbG,wBAAAI,EAAAK,SAAAV,kEAiBXQ,gBAAkB,WAAM,IAAAG,EACa9C,EAAKnC,MAA9BkF,cADY,IAAAD,EACH,YADGA,EAEpB,MAAO,CACHF,WAAY,SAAAI,GAAI,OAAIC,IAAOD,GAAMD,OAAOA,IACxCG,UAAW,SAAAC,GAAG,OAAIF,IAAOE,EAAKJ,GAAQK,UACtC/E,YAAa0E,4EAIZ,IAAAtC,EAAA7C,KAAA8C,EAcD9C,KAAKC,MAdJ8C,EAAAD,EAED3C,UAFC,IAAA4C,EAEI9D,IAFJ8D,EAGD3C,EAHC0C,EAGD1C,KACAC,EAJCyC,EAIDzC,SACAG,EALCsC,EAKDtC,MACAE,EANCoC,EAMDpC,KACAC,EAPCmC,EAODnC,UAPC8E,EAAA3C,EAQD4C,WARC,IAAAD,EAQKJ,MACDM,KAAK,IAAM,SACXH,SAVJC,EAAAG,EAAA9C,EAWD+C,WAXC,IAAAD,EAWKP,MACDM,IAAI,IAAM,SACVH,SAbJI,EAgBL,OACI/E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAA6E,GAAqB,IAAlB3E,EAAkB2E,EAAlB3E,MAAO4E,EAAWD,EAAXC,KACd,OACIlF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAS,GAAAoB,OAAKpB,EAAL,mBAETE,EAAAC,EAAAC,cAACiF,EAAA,EAADvE,OAAAC,OAAA,CACIuE,QAASpD,EAAKkC,kBAAkBO,UAAUI,GAC1CQ,QAASrD,EAAKkC,kBAAkBO,UAAUO,GAC1C/F,aAAc+C,EAAKkC,kBAAkBO,UAAUnE,EAAMgB,OACrDR,SAAU,SAAA2B,GAAC,OAAIT,EAAKlB,SAAS2B,EAAGnC,EAAO4E,KACnClD,EAAKkC,kBALb,CAMIoB,mBAAe9G,EACfwC,MAAM,EACNuE,WAAY,CACRC,UAAW,SAAAzE,GAEP,OADAA,EAAE0E,kBACK,kBAzEvBtE,IAAMC,oBCqEfsE,6MApEXzG,aAAe,KAEf6B,SAAW,SAACQ,EAADjB,GAAyB,IAAfS,EAAeT,EAAfS,SAAe5B,EACXqC,EAAKnC,MAC1B0B,EAAS,CACLU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,GANwBJ,EACxBI,GAMAC,KAPwBL,EACpBK,KAOJ+B,cAKZ4C,gBAAkB,WAAM,IAAAG,EACc9C,EAAKnC,MAA/BkF,cADY,IAAAD,EACH,aADGA,EAEpB,MAAO,CACHF,WAAY,SAACI,EAAMoB,GAAP,OACRnB,IAAOD,GACFoB,OAAOA,GACPrB,OAAOA,IAChBG,UAAW,SAACC,EAAKiB,GAAN,OACPnB,IAAOE,EAAKJ,GACPqB,OAAOA,GACPhB,UACT/E,YAAa0E,4EAIZ,IAAAtC,EAAA7C,KAAA8C,EAC0E9C,KAAKC,MAD/E8C,EAAAD,EACG3C,UADH,IAAA4C,EACQ9D,IADR8D,EACgB3C,EADhB0C,EACgB1C,KAAMC,EADtByC,EACsBzC,SAAUG,EADhCsC,EACgCtC,MAAOE,EADvCoC,EACuCpC,KAAMC,EAD7CmC,EAC6CnC,UAAWC,EADxDkC,EACwDlC,MAAO4F,EAD/D1D,EAC+D0D,OAEpE,OACI3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAAgC,GAAe,IAAZ9B,EAAY8B,EAAZ9B,MACP,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAAC0F,EAAA,EAADhF,OAAAC,OAAA,GACQP,EACAP,EAFR,CAGIT,GAAIA,EACJC,KAAMA,EACNoG,OAAQA,GAAUnB,IAAOmB,SACzB7E,SAAU,SAAA2B,GAAC,OAAIT,EAAKlB,SAAS2B,EAAGnC,KAC5B0B,EAAKkC,kBAPb,CAQIlD,MAAM,gBA3DTG,IAAMC,oBCqDpByE,6MArDX5G,aAAe,KAEf6B,SAAW,SAACQ,EAADjB,GAAyB,IAAfS,EAAeT,EAAfS,SAAe5B,EACXqC,EAAKnC,MAC1B0B,EAAS,CACLU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,GANwBJ,EACxBI,GAMAC,KAPwBL,EACpBK,KAOJ+B,oFAKH,IAAAU,EAAA7C,KAAA8C,EACkF9C,KAAKC,MADvF8C,EAAAD,EACG3C,UADH,IAAA4C,EACQ9D,IADR8D,EACgB3C,EADhB0C,EACgB1C,KAAMC,EADtByC,EACsBzC,SAAUG,EADhCsC,EACgCtC,MAAOE,EADvCoC,EACuCpC,KAAMC,EAD7CmC,EAC6CnC,UAD7CgG,EAAA7D,EACwD8D,eADxD,IAAAD,KACwE/F,EADxEkC,EACwElC,MAE7E,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAAgC,GAAe,IAAZ9B,EAAY8B,EAAZ9B,MACP,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAAC8F,EAAA,EAADpF,OAAAC,OAAA,GACQP,EACAP,EAFR,CAGIT,GAAIA,EACJC,KAAMA,EACNwG,QAASA,EACTE,kBAAkB,EAClBnF,SAAU,SAAA2B,GAAC,OAAIT,EAAKlB,SAAS2B,EAAGnC,IAChCU,MAAM,gBA5CdG,IAAMC,sDC6If8E,cA1IX,SAAAA,EAAY9G,GAAO,IAAAmC,EAAA,OAAAX,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAA+G,IACf3E,EAAAX,OAAAwF,EAAA,EAAAxF,CAAAzB,KAAAyB,OAAAyF,EAAA,EAAAzF,CAAAsF,GAAAI,KAAAnH,KAAMC,KAHVH,aAAe,GAEIsC,EAYnBgF,eAAiB,SAACC,EAAMC,GACpBlF,EAAKmF,SAAL9F,OAAA+F,EAAA,EAAA/F,CAAA,GAAmBW,EAAKqF,MAAxB,CAA+BC,QAAO,GAAA3F,OAAAN,OAAAkG,EAAA,EAAAlG,CAAMW,EAAKqF,MAAMC,SAAjB,CAA0BL,MAASC,IAb1DlF,EAenBwF,iBAAmB,SAACP,EAAMlG,GACtB,IAAMuG,EAAOjG,OAAAkG,EAAA,EAAAlG,CAAOW,EAAKqF,MAAMC,QAAQG,OAAO,SAAAC,GAAI,OAAIA,EAAK3H,KAAOkH,EAAKlH,MACvEiC,EAAKmF,SAAL9F,OAAA+F,EAAA,EAAA/F,CAAA,GAEWW,EAAKqF,MAFhB,CAGQM,UAAS,GAAAhG,OAAAN,OAAAkG,EAAA,EAAAlG,CAAMW,EAAKqF,MAAMM,WAAjB,CAA4BV,IACrCK,YAEJ,kBAAMtF,EAAKT,SAASS,EAAKqF,MAAMM,UAAW5G,MAvB/BiB,EA0BnB4F,SAAW,SAAC7H,EAAIgB,GACZ,IAAM4G,EAAY3F,EAAKqF,MAAMM,UAAUF,OAAO,SAAAI,GAAC,OAAIA,EAAE9H,KAAOA,IAC5DiC,EAAKmF,SAAL9F,OAAA+F,EAAA,EAAA/F,CAAA,GAAmBW,EAAKqF,MAAxB,CAA+BM,cAAa,kBAAM3F,EAAKT,SAASoG,EAAW5G,MA5B5DiB,EA+BnB8F,YAAc,SAAAhH,EAAeC,GAAU,IAAtBhB,EAAsBe,EAAtBf,GAAIkH,EAAkBnG,EAAlBmG,KACbc,EAAS,IAAIC,WACjBD,EAAOE,cAAchB,GACrBc,EAAOG,OAAS,WACZ,IAAIC,EAAW,CACXpI,KACAC,KAAMiH,EAAKjH,KACXG,KAAM8G,EAAK9G,KACXiI,KAAMjJ,KAAKkJ,MAAMpB,EAAKmB,KAAO,KAAQ,MACrCE,OAAQP,EAAOQ,OACftB,KAAMA,GAGVjF,EAAKwF,iBAAiBW,EAAUpH,KA5CrBiB,EAgDnBT,SAAW,SAACQ,EAADc,GAAyB,IAAftB,EAAesB,EAAftB,SAAe5B,EACXqC,EAAKnC,MAC1B0B,EAAS,CACLU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,GANwBJ,EACxBI,GAMAC,KAPwBL,EACpBK,KAOJ+B,YAtDRC,EAAKqF,MAAQ,CACTC,QAAS,GACTK,UAAW,IAGf3F,EAAKgF,eAAiBhF,EAAKgF,eAAewB,KAApBnH,OAAAoH,EAAA,EAAApH,CAAAW,IACtBA,EAAKwF,iBAAmBxF,EAAKwF,iBAAiBgB,KAAtBnH,OAAAoH,EAAA,EAAApH,CAAAW,IACxBA,EAAK8F,YAAc9F,EAAK8F,YAAYU,KAAjBnH,OAAAoH,EAAA,EAAApH,CAAAW,IATJA,wEA6DV,IAAAS,EAAA7C,KAAA8C,EAWD9C,KAAKC,MAXJ8C,EAAAD,EAED3C,UAFC,IAAA4C,EAEI9D,IAFJ8D,EAGD3C,EAHC0C,EAGD1C,KAHC0I,EAAAhG,EAIDiG,aAJC,IAAAD,KAAAE,EAAAlG,EAKDmG,aALC,IAAAD,EAKO,GALPA,EAMD3I,EANCyC,EAMDzC,SACAG,EAPCsC,EAODtC,MACAC,EARCqC,EAQDrC,YACAC,EATCoC,EASDpC,KACAC,EAVCmC,EAUDnC,UAmBJ,OACIE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAAiI,GAAe,IAAZ/H,EAAY+H,EAAZ/H,MACP,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAAA,WACK8B,EAAK4E,MAAMC,QAAQtI,OAAS,GAAKyB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAASX,KAAM,KAChD3F,EAAK4E,MAAMM,UAAU5D,IAAI,SAACiF,EAAGC,GAAJ,OACtBxI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CACIjF,IAAKgF,EACL1G,SAAS,EACTqF,SAAU,kBAAMnF,EAAKmF,SAASoB,EAAEjJ,GAAIgB,IACpCU,MAAM,EACNlB,UAAU,UAETyI,EAAEhJ,QAGXS,EAAAC,EAAAC,cAACwI,EAAA,EAAD9H,OAAAC,OAAA,GA9CJ,SAAAP,GAAK,MAAK,CAC1BqI,OAAQ,UACRjJ,KAAM,OACNkJ,OAAQR,EAAMS,KAAK,KACnBC,SAAUZ,EACVa,aAAc,SAAAvC,GACV,IAAMwC,EAAa,CAAExC,OAAMlH,GAAIlB,KAC/B4D,EAAKuE,eAAeyC,EAAY,kBAAMhH,EAAKqF,YAAY2B,EAAY1I,MAEvE2I,QAAS,kBAAM,MACfC,UAAW,kBAAM,MACjBC,WAAY,kBAAM,MAClBC,QAAS,kBAAM,MACfC,cAAe,kBAAM,OAkCOC,CAAYhJ,GADpB,CAEIyI,aAAc,SAAAvC,GACV,IAAMwC,EAAa,CAAExC,OAAMlH,GAAIlB,KAC/B4D,EAAKuE,eAAeyC,EAAY,kBAAMhH,EAAKqF,YAAY2B,EAAY1I,QAGvEN,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQ2H,UAAU,SAASC,KAAM5J,iBAlI7CuB,IAAMC,oBCsDfqI,6MAtDXxK,aAAe,IAEf6B,SAAW,SAACQ,EAADjB,GAAyB,IAAfS,EAAeT,EAAfS,SAAe5B,EACXqC,EAAKnC,MAC1B0B,EAAS,CACLU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,GANwBJ,EACxBI,GAMAC,KAPwBL,EACpBK,KAOJ+B,oFAKH,IAAAU,EAAA7C,KAAA8C,EACqE9C,KAAKC,MAD1E8C,EAAAD,EACG3C,UADH,IAAA4C,EACQ9D,IADR8D,EACgB3C,EADhB0C,EACgB1C,KAAMI,EADtBsC,EACsBtC,MAAOC,EAD7BqC,EAC6BrC,YAAaC,EAD1CoC,EAC0CpC,KAAMC,EADhDmC,EACgDnC,UAAWC,EAD3DkC,EAC2DlC,MAEhE,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNa,OAAQ,SAAAgC,GAAe,IAAZ9B,EAAY8B,EAAZ9B,MACP,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAACwJ,EAAA,EAAD9I,OAAAC,OAAA,CACIgE,IAAK8E,OAAOC,iBACZ5E,IAAK2E,OAAOE,kBACRvJ,EACAP,EAJR,CAKIT,GAAIA,EACJC,KAAMA,EACNK,YAAaA,EACboB,MAAM,EACN8I,4BAA4B,EAC5BC,cAAe,SAAAtH,GAAC,OAAIT,EAAKlB,SAAS2B,EAAGnC,kBA7C3Ca,IAAMC,oBC+DjB4I,8MA9DX/K,aAAe,IAEf6B,+CAAW,SAAA4C,EAAOpC,EAAPjB,EAAA+B,GAAA,IAAAtB,EAAA6C,EAAAzE,EAAAI,EAAAC,EAAA0K,EAAArG,EAAA,OAAAC,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAgBnD,EAAhBT,EAAgBS,SAAc6C,EAA9BvB,EAA8BuB,WAA9BzE,EACsCqC,EAAKnC,MAA1CE,EADDJ,EACCI,GAAIC,EADLL,EACKK,KADL0K,EAAA/K,EACW0E,sBADX,IAAAqG,KAAAlG,EAAAE,KAAA,EAEDnD,EAAS,CACXU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,KACAC,OACA+B,WARD,OAYDsC,GACFD,IAbG,wBAAAI,EAAAK,SAAAV,wIAiBF,IAAA1B,EAAA7C,KAAA8C,EASD9C,KAAKC,MATJ8C,EAAAD,EAED3C,UAFC,IAAA4C,EAEI9D,IAFJ8D,EAGD3C,EAHC0C,EAGD1C,KACAI,EAJCsC,EAIDtC,MACAE,EALCoC,EAKDpC,KACAC,EANCmC,EAMDnC,UANCoK,EAAAjI,EAODlC,aAPC,IAAAmK,EAOO,CAAErF,IAAK,EAAGG,IAAK,IAAKmF,SAAU,EAAGC,cAAe,KAPvDF,EAAAG,EAAApI,EAQDN,gBARC,IAAA0I,KAWL,OACIrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNa,OAAQ,SAAA6E,GAAqB,IAAlB3E,EAAkB2E,EAAlB3E,MAAO4E,EAAWD,EAAXC,KACd,OACIlF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAACoK,EAAA,EAAD1J,OAAAC,OAAA,CACIc,SAAUA,GACNrB,EACAP,EAHR,CAIIe,SAAU,SAAA2B,GAAC,OAAIT,EAAKlB,SAAS2B,EAAGnC,EAAO4E,IACvC5D,MAAOhB,EAAMgB,MACbiJ,UAAU,gBArDhBpJ,IAAMC,+BCuFjBoJ,8MArFXvL,aAAe,KAEfwL,mDAAe,SAAA/G,EAAArD,EAAA+B,EAAAiG,GAAA,IAAA/G,EAAAR,EAAA6C,EAAAzE,EAAAI,EAAAC,EAAAqE,EAAA,OAAAC,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAS3C,EAATjB,EAASiB,MAAWR,EAApBsB,EAAoBtB,SAAc6C,EAAlC0E,EAAkC1E,WAAlCzE,EAC0BqC,EAAKnC,MAAlCE,EADGJ,EACHI,GAAIC,EADDL,EACCK,KAAMqE,EADP1E,EACO0E,eADPG,EAAAE,KAAA,EAELnD,EAAS,CACXU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,KACAC,OACA+B,WARG,OAYLsC,GACFD,IAbO,wBAAAI,EAAAK,SAAAV,kEAiBfgH,aAAe,SAACC,EAADC,GAAwC,IAA7BC,EAA6BD,EAA7BC,YAAaC,EAAgBF,EAAhBE,UACnC,OAAKA,EAAUC,iBAKX/K,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACIlL,UAAU,gBACVmL,OAAQH,EAAUG,OAClBtJ,SAAUmJ,EAAUnJ,SACpB6B,IAAKmH,EAAOrJ,MACZS,QAAS8I,EACTrB,KAAMmB,EAAOhL,QAVV,8EAeN,IAAAqC,EAAA7C,KAAA8C,EACwF9C,KAAKC,MAD7F8C,EAAAD,EACG3C,UADH,IAAA4C,EACQ9D,IADR8D,EACgB3C,EADhB0C,EACgB1C,KAAMC,EADtByC,EACsBzC,SAAUG,EADhCsC,EACgCtC,MAAOE,EADvCoC,EACuCpC,KAAMD,EAD7CqC,EAC6CrC,YAAaE,EAD1DmC,EAC0DnC,UAAWC,EADrEkC,EACqElC,MAAOoD,EAD5ElB,EAC4EkB,QAEjF,OACInD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAA8K,GAAqB,IAAlB5K,EAAkB4K,EAAlB5K,MAAO4E,EAAWgG,EAAXhG,KACRiG,EAAehI,EAAQiI,KAAK,SAAAC,GAAC,OAAIA,EAAE/J,QAAUhB,EAAMgB,QAEzD,OACItB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAACoL,GAAA,EAAD1K,OAAAC,OAAA,GACQP,EACAP,EAFR,CAGIT,GAAIA,EACJC,KAAMA,EACNgM,MAAOpI,EACPqI,YAAY,EACZC,aAAczJ,EAAK0I,aACnB5K,UAAU,gBACVyF,WAAY,CAAEzF,UAAW,iBACzB4L,UAAW1L,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CAAUrJ,UAAU,EAAM6H,KAAK,MAC1CiB,aAAc,SAAAhI,GAAC,OAAIT,EAAKyI,aAAahI,EAAGnC,EAAO4E,MAE/ClF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACI2H,UAAU,aACVC,KAAM2B,EAAeA,EAAaxL,MAAQC,EAC1CE,UAAU,4CA3EpBqB,IAAMC,qBCMnBuK,GAAS,CAClBC,MAAO5M,EACP6M,IAAKxK,EACLyK,SAAUnJ,EACVoJ,OAAQjJ,EACRkJ,MAAOjJ,EACPkJ,KAAMxI,EACNyI,UAAWxG,EACXyG,KAAMtG,EACNuG,KAAMlG,EACNyD,OAAQF,EACR4C,OAAQrC,GACRsC,OAAQ9B,GACR+B,uNClBAtN,aAAe,KAEfwL,aAAe,SAAApK,EAAYC,GAAU,IAAnBgB,EAAmBjB,EAAnBiB,MAAmBpC,EACZqC,EAAKnC,MAAlBE,EADyBJ,EACzBI,GAAIC,EADqBL,EACrBK,KACNiN,EAAalM,EAAMgB,OAAS,GAC5BoB,EAAS8J,EAAWC,SAASnL,GAASkL,EAAWxF,OAAO,SAAA0F,GAAE,OAAIA,IAAOpL,IAA5D,GAAAJ,OAAAN,OAAAkG,EAAA,EAAAlG,CAAyE4L,GAAzE,CAAqFlL,IAEpGhB,EAAMQ,SAAS,CACXU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,KACAC,OACA+B,MAAOoB,QAKnByE,SAAW,SAACwF,EAAGpJ,EAAOjD,GAAU,IAAA2B,EACPV,EAAKnC,MAAlBE,EADoB2C,EACpB3C,GAAIC,EADgB0C,EAChB1C,KACNmD,GAAUpC,EAAMgB,OAAS,IAAI0F,OAAO,SAAC4F,EAAIpE,GAAL,OAAWA,IAAMjF,IAC3DjD,EAAMQ,SAAS,CACXU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,KACAC,OACA+B,MAAOoB,QAKnBmK,QAAU,SAAAzK,GAAkB,IAAftB,EAAesB,EAAftB,SAAegM,EACHvL,EAAKnC,MAC1B0B,EAAS,CACLU,QAAS,aACTC,OAAQ,CACJ/B,KAAM,SACNJ,GANgBwN,EAChBxN,GAMAC,KAPgBuN,EACZvN,KAOJ+B,MAAO,SAKnBoJ,aAAe,SAACC,EAADtC,EAAApD,GAAwD,IAA7C4F,EAA6CxC,EAA7CwC,YAAaC,EAAgCzC,EAAhCyC,UAAgCiC,EAAA9H,EAAjB3D,aAAiB,IAAAyL,EAAT,GAASA,EACnE,OAAKjC,EAAUC,iBAKX/K,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACInJ,KAAMP,EAAMmL,SAAS9B,EAAOrJ,OAAS,OAAS,QAC9CK,SAAUmJ,EAAUnJ,SACpB6B,IAAKmH,EAAOrJ,MACZS,QAAS8I,EACTrB,KAAMmB,EAAOhL,MACbqN,sBAAsB,IAVnB,QAefC,UAAY,SAAC3L,EAADsJ,GAAiDA,EAAvCrI,SAAuCqI,EAA7BzD,SAA6ByD,EAAnBpI,aAEtC,OADoBjB,EAAKnC,MAAjB+D,QACQiI,KAAK,SAAAC,GAAC,OAAIA,EAAE/J,QAAUA,KAAU,IAAI3B,+EAE/C,IAAAqC,EAAA7C,KAAA+N,EACwF/N,KAAKC,MAD7F+N,EAAAD,EACG5N,UADH,IAAA6N,EACQ/O,IADR+O,EACgB5N,EADhB2N,EACgB3N,KAAMC,EADtB0N,EACsB1N,SAAUG,EADhCuN,EACgCvN,MAAOE,EADvCqN,EACuCrN,KAAMD,EAD7CsN,EAC6CtN,YAAaE,EAD1DoN,EAC0DpN,UAAWC,EADrEmN,EACqEnN,MAAOoD,EAD5E+J,EAC4E/J,QAEjF,OACInD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNC,SAAUA,EACVY,OAAQ,SAAA8K,GAAe,IAAZ5K,EAAY4K,EAAZ5K,MACP,OACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,WACIR,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,sBACZE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcZ,KAAMA,KAG5BI,MAAOA,EACPc,SAAUnB,EACVoB,UAAWb,EACXC,UAAWA,GAEXE,EAAAC,EAAAC,cAACkN,GAAA,EAADxM,OAAAC,OAAA,GACQP,EACAP,EAFR,CAGIT,GAAIA,EACJC,KAAMA,EACNgM,MAAOpI,EACPqI,YAAY,EACZ5L,YAAaA,EACb6L,aAAc,SAACJ,EAAGgC,GAAJ,OAAUrL,EAAK0I,aAAaW,EAAGgC,EAAG/M,IAChDgN,YAAatL,EAAKiL,UAClBM,aAAc,CACVzN,UAAW,iBAEf0N,cAAe,CACX1N,UAAW,gBACXyC,SAAU,CAAET,SAAS,GACrBqF,SAAU,SAACwF,EAAGpJ,GAAJ,OAAcvB,EAAKmF,SAASwF,EAAGpJ,EAAOjD,IAChDkC,aACMlC,EAAMgB,OAAShB,EAAMgB,MAAM/C,OAAS,EAClCyB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,KAAK,QAAQC,SAAS,EAAMC,QAAS,kBAAMC,EAAK6K,QAAQvM,WAEhE9B,GAGZkN,UAAW1L,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CAAUrJ,UAAU,EAAM6H,KAAK,gBAC1CiB,aAAc,SAAAhI,GAAC,OAAIT,EAAKyI,aAAahI,EAAGnC,IACxCmN,cAAenN,EAAMgB,OAAS,GAC9BoM,WAAW,EACXzK,QAAQ,gBAnHT9B,IAAMC,qBCJxBuM,GAOT,SAAAA,EAAAtN,GAAoG,IAAAuN,EAAAvN,EAAtFpB,oBAAsF,IAAA2O,EAAvE,GAAuEA,EAAAC,EAAAxN,EAAnEyN,kBAAmE,IAAAD,EAAtD,GAAsDA,EAAAE,EAAA1N,EAAlD2N,kBAAkD,IAAAD,KAAAE,EAAA5N,EAA9B6N,eAA8B,IAAAD,KAAAE,EAAA9N,EAAb+N,YAAa,IAAAD,EAAN,GAAMA,EAAAvN,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAAwO,GAChGxO,KAAKF,aAAeA,EACpBE,KAAK2O,WAAaA,EAClB3O,KAAK6O,WAAaA,EAClB7O,KAAK+O,QAAUA,EACf/O,KAAKiP,KAAOA,GAZPT,GAeFU,cAAgB,SAAAjH,GAAC,OAAIkH,GAAkBlH,IAG3C,IAAMmH,GAAiB,SAAAnM,GAAoD,IAAAoM,EAAApM,EAAjD0L,kBAAiD,IAAAU,OAApChQ,EAAoCgQ,EAAAC,EAAArM,EAAzB4L,kBAAyB,IAAAS,KAC9E,GAAKX,GAAeE,EAApB,CACA,IAAKF,GAAgBE,EAAY,OAAOU,YAAaC,WAErD,IASMC,EATa,CACfC,MAAOH,YAAaG,QACpBC,IAAKJ,YAAaK,KAAK,MAAO,+BAAgC,SAAAC,GAAG,OAAmB,IAAfA,EAAIzQ,SACzE0Q,IAAKP,YAAaQ,QAAQ,iCAAkC,CACxDC,QAAS,kCACTC,oBAAoB,KAICtB,GAC7B,OAAOE,EAAaY,EAAUD,WAAaC,IAOlCN,GAAoB,SAAAhO,GAC7B,OACIN,EAAAC,EAAAC,cAACF,EAAAC,EAAMoP,SAAP,KACIrP,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,0BACNI,MAAO,gBACPC,YAAa,gBACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOG,SAAR,CACIvM,KAAM,qBACNK,YAAa,kBACbE,UAAU,8BAEdE,EAAAC,EAAAC,cAACyL,GAAOG,SAAR,CACIvM,KAAM,wBACNK,YAAa,gBACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOW,OAAR,CACI/M,KAAM,wBACNK,YAAa,aACbgE,gBAAgB,EAChBT,QA1BL,CAAC,CAAE7B,MAAO,QAAS3B,MAAO,SAAW,CAAE2B,MAAO,MAAO3B,MAAO,OAAS,CAAE2B,MAAO,MAAO3B,MAAO,QA2BvFG,UAAU,yBC9DbwP,GAMT,SAAAA,EAAAjP,GAA+D,IAAjDpB,EAAiDoB,EAAjDpB,aAAiDsQ,EAAAlP,EAAnCiE,cAAmC,IAAAiL,EAA1B,aAA0BA,EAAZ1K,EAAYxE,EAAZwE,IAAKG,EAAO3E,EAAP2E,IAAOpE,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAAmQ,GAC3DnQ,KAAKmF,OAASA,EACdnF,KAAKF,kBACgBT,IAAjBS,GAA+C,OAAjBA,GAA0C,KAAjBA,EACjDA,EACAuF,MAASF,OAAOA,GAC1BnF,KAAK0F,SACOrG,IAARqG,GAA6B,OAARA,GAAwB,KAARA,EAC/BA,EACAL,MACKM,KAAK,IAAK,SACVR,OAAOA,GACtBnF,KAAK6F,SACOxG,IAARwG,GAA6B,OAARA,GAAwB,KAARA,EAC/BA,EACAR,MACKM,IAAI,IAAK,SACTR,OAAOA,IAvBjBgL,GA0BFjB,cAAgB,SAAAjH,GAAC,OAAIkH,GAAkBlH,IAG3C,IAEMkH,GAAoB,SAAAhO,GAAS,IAEpBgE,EACdhE,EADAkP,WAAclL,OAGlB,OACItE,EAAAC,EAAAC,cAACF,EAAAC,EAAMoP,SAAP,KACIrP,EAAAC,EAAAC,cAACyL,GAAOM,KAAR,CACI1M,KAAM,0BACNI,MAAO,gBACP2E,OAAQA,EACRV,gBAAgB,EAChBhE,YAAa,gBACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOM,KAAR,CACI1M,KAAM,iBACNI,MAAO,WACP2E,OAAQA,EACRV,gBAAgB,EAChB9D,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOM,KAAR,CACI1M,KAAM,iBACNI,MAAO,SACP2E,OAAQA,EACRV,gBAAgB,EAChB9D,UAAU,yBC5Db2P,GAGT,SAAAA,EAAApP,GAAsC,IAAAuN,EAAAvN,EAAxBpB,oBAAwB,IAAA2O,KAAAhN,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAAsQ,GAClCtQ,KAAKF,aAAeA,GAJfwQ,GAOFpB,cAAgB,SAAAjH,GAAC,OAAIkH,GAAkBlH,IAG3C,IAAMkH,GAAoB,SAAAhO,GAC7B,OACIN,EAAAC,EAAAC,cAACF,EAAAC,EAAMoP,SAAP,KACIrP,EAAAC,EAAAC,cAACyL,GAAOG,SAAR,CACIvM,KAAM,0BACNK,YAAa,gBACbE,UAAU,yBCdb4P,GAAuB,CAChCC,KAAM,CAAEpQ,KAAM,UAAWI,MAAO,OAAQkC,KAAM,eAAgB+N,KAAM,KACpEC,MAAO,CAAEtQ,KAAM,WAAYI,MAAO,QAASkC,KAAM,cAAe+N,KAAM,KACtEE,KAAM,CACFvQ,KAAM,UACNI,MAAO,OACPoQ,gBAAiB,SAAAC,GAAC,OAAI,IAAIrC,GAAoBqC,IAC9CnO,KAAM,eACN+N,KAAM,KAEVjG,OAAQ,CACJpK,KAAM,YACNI,MAAO,SACPoQ,gBAAiB,SAAAC,GAAC,OAAI,IAAIrC,GAAoBqC,IAC9CnO,KAAM,YACN+N,KAAM,KAEVtD,OAAQ,CACJ/M,KAAM,YACNI,MAAO,SACPoQ,gBAAiB,SAAAC,GAAC,OAAI,IAAIrC,GAAoBqC,IAC9CnO,KAAM,WACN+N,KAAM,KAEVK,QAAS,CACL1Q,KAAM,aACNI,MAAO,WACPoQ,gBAAiB,SAAAC,GAAC,OAAI,IAAIP,GAAuBO,IACjDnO,KAAM,OACN+N,KAAM,KAEV3D,KAAM,CACF1M,KAAM,UACNI,MAAO,OACPoQ,gBAAiB,SAAAC,GAAC,OAAI,IAAIV,GAAoBU,IAC9CnO,KAAM,WACN+N,KAAM,KAEVxD,KAAM,CACF7M,KAAM,UACNI,MAAO,OACPoQ,gBAAiB,SAAAC,GAAC,OAAI,IAAIrC,GAAoBqC,IAC9CnO,KAAM,eACN+N,KAAM,MAIDM,GAAa,CACtBP,KAAM,UACNE,MAAO,WACPC,KAAM,UACNnG,OAAQ,YACR2C,OAAQ,YACR2D,QAAS,aACThE,KAAM,UACNG,KAAM,WCzDG+D,GAWT,SAAAA,EAAA9P,GAUG,IAAA+P,EAAA/P,EATCf,UASD,IAAA8Q,EATMhS,EAAK,GASXgS,EARCC,EAQDhQ,EARCgQ,SAQDC,EAAAjQ,EAPCX,YAOD,IAAA4Q,EAPQJ,GAAWJ,KAOnBQ,EAAAC,EAAAlQ,EANCmP,kBAMD,IAAAe,EANc,GAMdA,EAAAC,EAAAnQ,EALCoQ,aAKD,IAAAD,EALS,CAAEE,OAAQ,IAAKC,QAAS,KAKjCH,EAAAI,EAAAvQ,EAJCwQ,aAID,IAAAD,EAJS,YAITA,EAAAE,EAAAzQ,EAHC0Q,mBAGD,IAAAD,EAHe,GAGfA,EAAAE,EAAA3Q,EAFC4Q,aAED,IAAAD,EAFS,EAETA,EAAAE,EAAA7Q,EADC8Q,iBACD,IAAAD,KAAAtQ,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAAgR,GACChR,KAAKG,GAAKA,EACVH,KAAKkR,SAAWA,GAAQ,SAAAnP,OAAa5B,GAErCH,KAAK0R,MAAQA,EACb1R,KAAK4R,YAAcA,EAEnB5R,KAAKO,KAAOA,EACZP,KAAKqQ,WD+B6B,SAAC9P,EAAM8P,GAC7C,IAAM4B,EAAiB,IAAIC,IAAI3B,IAAsBtE,KAAK,SAAAkG,GAAG,OAAIA,EAAI/R,OAASG,KAAS,GAC/EmC,EAA0BuP,EAA1BvP,KAAMkO,EAAoBqB,EAApBrB,gBACd,OAAOnP,OAAA+F,EAAA,EAAA/F,CAAA,CAAEiB,QAAYkO,EAAkBA,EAAgBP,GAAc,IClC/C+B,CAA2B7R,EAADkB,OAAA+F,EAAA,EAAA/F,CAAA,GAAYzB,KAAKqQ,WAAeA,IAC5ErQ,KAAKsR,MAAQA,EAEbtR,KAAK8R,MAAQA,EACb9R,KAAKgS,UAAYA,GChCZtB,GAWT,SAAAA,EAAAxP,GAUG,IAAA+P,EAAA/P,EATCf,UASD,IAAA8Q,EATMhS,EAAK,GASXgS,EARCC,EAQDhQ,EARCgQ,SAQDO,EAAAvQ,EAPCwQ,aAOD,IAAAD,EAPS,YAOTA,EAAAE,EAAAzQ,EANC0Q,mBAMD,IAAAD,EANe,GAMfA,EAAAU,EAAAnR,EALCoR,aAKD,IAAAD,KAAAhB,EAAAnQ,EAJCoQ,aAID,IAAAD,EAJS,CAAEE,OAAQ,IAAKC,QAAS,KAIjCH,EAAAQ,EAAA3Q,EAHC4Q,aAGD,IAAAD,EAHS,EAGTA,EAAAE,EAAA7Q,EAFC8Q,iBAED,IAAAD,KAAAQ,EAAArR,EADCsR,cACD,IAAAD,EADU,GACVA,EAAA9Q,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAA0Q,GACC1Q,KAAKG,GAAKA,EACVH,KAAKkR,SAAWA,GAAQ,SAAAnP,OAAa5B,GACrCH,KAAK0R,MAAQA,EACb1R,KAAKO,KAAOwQ,GAAWL,MACvB1Q,KAAK4R,YAAcA,EACnB5R,KAAKsS,MAAQA,EACbtS,KAAKsR,MAAQA,EACbtR,KAAK8R,MAAQA,EACb9R,KAAKgS,UAAYA,EACjBhS,KAAKwS,OAASA,EAAOrO,IAAI,SAAA8D,GAAC,OAAI,IAAI+I,GAAM/I,MC/BnCuI,GAWT,SAAAA,IAAuB,IAAXiC,EAAWtT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAIsC,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAAwQ,GAAA,IAAAkC,EAWfD,EATAtS,UAFe,IAAAuS,EAEVzT,EAAK,GAFKyT,EAGfxB,EAQAuB,EARAvB,SAHeyB,EAWfF,EAPAf,aAJe,IAAAiB,EAIP,WAJOA,EAAAC,EAWfH,EANAb,mBALe,IAAAgB,EAKD,GALCA,EAAAC,EAWfJ,EALAK,cANe,IAAAD,EAMN,GANMA,EAAAE,EAWfN,EAJAX,aAPe,IAAAiB,EAOP,EAPOA,EAAAC,EAWfP,EAHAT,iBARe,IAAAgB,KAAAC,EAWfR,EAFAS,cATe,IAAAD,EASN,GATMA,EAAAE,EAWfV,EADAW,eAVe,IAAAD,EAUL,GAVKA,EAanBnT,KAAKG,GAAKA,EACVH,KAAKkR,SAAWA,GAAQ,QAAAnP,OAAY5B,GACpCH,KAAK0R,MAAQA,EACb1R,KAAKO,KAAOwQ,GAAWP,KACvBxQ,KAAK4R,YAAcA,EACnB5R,KAAK8S,OAALrR,OAAA+F,EAAA,EAAA/F,CAAA,CACImQ,YAAa,GACbyB,MAAO,GACPC,MAAM,EACNC,cAAc,GACXT,GAEP9S,KAAK8R,MAAQA,EACb9R,KAAKgS,UAAYA,EACjBhS,KAAKkT,OAASA,EAAO/O,IAAI,SAAAqP,GAAC,OAAI,IAAI9C,GAAM8C,KACxCxT,KAAKoT,QAAL3R,OAAA+F,EAAA,EAAA/F,CAAA,CACIgS,OAAQ,CAAEH,MAAM,EAAMjJ,KAAM,UAC5BqJ,KAAM,CAAEJ,MAAM,EAAMjJ,KAAM,QAC1BsJ,KAAM,CAAEL,MAAM,EAAMjJ,KAAM,QAC1BvF,KAAM,CAAEwO,MAAM,EAAMjJ,KAAM,SACvB+I,ICtCTQ,GAAe,CACjBC,SAAU,GACV9N,UAAM1G,EACNyU,MCRsB,CACtB,IAAItD,GAAK,CACLkB,MAAO,QACPR,SAAU,QACV4B,OAAQ,CACJlB,YACI,moBACJyB,MAAO,4CACPC,MAAM,EACNC,cAAc,GAElBH,QAAS,CAAEtO,KAAM,CAAEwO,MAAM,EAAMjJ,KAAM,iBACrC6I,OAAQ,CACJ,IAAIxC,GAAM,CACNgB,MAAO,gBACPR,SAAU,WAEVU,YACI,4HACJN,MAAO,CAAEE,QAAS,IAAKD,OAAQ,KAC/BiB,OAAQ,CACJ,IAAIxB,GAAM,CAAEU,MAAO,OAAQR,SAAU,OAAQI,MAAO,CAAEE,QAAS,GAAID,OAAQ,OAC3E,IAAIP,GAAM,CAAEU,MAAO,QAASR,SAAU,QAASI,MAAO,CAAEE,QAAS,GAAID,OAAQ,OAC7E,IAAIP,GAAM,CACNU,MAAO,gBACPR,SAAU,cACVI,MAAO,CAAEE,QAAS,GAAID,OAAQ,KAC9BhR,KAAMwQ,GAAWjE,KACjBuD,WAAY,CAAElL,OAAQ,wBDoBjC4O,GAAW,SAAAD,GAAK,sBAAA5S,EAAAO,OAAAuS,EAAA,EAAAvS,CAAAiD,EAAA5D,EAAAmT,KAAI,SAAA1P,EAAM2P,GAAN,OAAAxP,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC7BoP,EAAS,CAAE3T,KElDuB,yBFkDOuT,UADZ,wBAAAlP,EAAAK,SAAAV,MAAJ,gBAAA4P,GAAA,OAAAjT,EAAAkT,MAAApU,KAAAb,YAAA,IAGhBkV,GAAY,SAAC5B,EAAMS,GAAP,sBAAAjQ,EAAAxB,OAAAuS,EAAA,EAAAvS,CAAAiD,EAAA5D,EAAAmT,KAAkB,SAAAK,EAAMJ,GAAN,OAAAxP,EAAA5D,EAAA6D,KAAA,SAAA4P,GAAA,cAAAA,EAAA1P,KAAA0P,EAAAzP,MAAA,OACvCoP,EAAS,CAAE3T,KEpDwB,0BFoDOkS,OAAMS,WADT,wBAAAqB,EAAAtP,SAAAqP,MAAlB,gBAAAE,GAAA,OAAAvR,EAAAmR,MAAApU,KAAAb,YAAA,IAGZsV,GAAY,SAAChC,EAAMiC,EAAOlC,GAAd,sBAAAtJ,EAAAzH,OAAAuS,EAAA,EAAAvS,CAAAiD,EAAA5D,EAAAmT,KAAyB,SAAAU,EAAMT,GAAN,OAAAxP,EAAA5D,EAAA6D,KAAA,SAAAiQ,GAAA,cAAAA,EAAA/P,KAAA+P,EAAA9P,MAAA,OAC9CoP,EAAS,CAAE3T,KEtDwB,0BFsDOkS,OAAMiC,QAAOlC,WADT,wBAAAoC,EAAA3P,SAAA0P,MAAzB,gBAAAE,GAAA,OAAA3L,EAAAkL,MAAApU,KAAAb,YAAA,IAIZ2V,GAAa,SAACrC,EAAMiC,EAAOvT,GAAd,sBAAA2E,EAAArE,OAAAuS,EAAA,EAAAvS,CAAAiD,EAAA5D,EAAAmT,KAAwB,SAAAc,EAAMb,GAAN,OAAAxP,EAAA5D,EAAA6D,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OAC9CoP,EAAS,CAAE3T,KEhEyB,2BFgEOkS,OAAMiC,QAAOvT,UADV,wBAAA6T,EAAA/P,SAAA8P,MAAxB,gBAAAE,GAAA,OAAAnP,EAAAsO,MAAApU,KAAAb,YAAA,IG7DpByU,GAAe,CACjBsB,UAAM7V,GCDJuU,GAAe,CACjBuB,OAAQ,CAAE7D,MAAO,EAAG8D,OAAQ,GAC5BC,MAAO,CAAED,OAAQ,IAkBRE,GAAgB,SAAAC,GAAI,sBAAArU,EAAAO,OAAAuS,EAAA,EAAAvS,CAAAiD,EAAA5D,EAAAmT,KAAI,SAAA1P,EAAM2P,GAAN,IAAAiB,EAAAK,EAAA,OAAA9Q,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC3BqQ,EAAS,CAAE7D,MAAOmE,OAAOC,WAAYN,OAAQK,OAAOE,aACpDH,EAAYD,EAAOA,EAAKK,IAAM,EAGpC1B,EAAS,CAAE3T,KFnBkB,oBEmBOsV,KAAM,CAAEV,SAAQE,MAFtC,CAAED,OAAQD,EAAOC,OAASI,EAAY,OAHnB,wBAAA5Q,EAAAK,SAAAV,MAAJ,gBAAA4P,GAAA,OAAAjT,EAAAkT,MAAApU,KAAAb,YAAA,ICZ3B2W,GAAa,CAACC,KAWdC,GAAaC,YAAgB,CAC/BC,aLDW,WAAuC,IAA9BzO,EAA8BtI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtByU,GAAcpK,EAAQrK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQmK,EAAOjJ,MAEX,IExBgC,2BFyB5B,OAAOkB,OAAA+F,EAAA,EAAA/F,CAAA,GAAKgG,EAAZ,CAAmBoM,SAAU,CAAEpB,KAAMjJ,EAAOiJ,KAAMiC,MAAOlL,EAAOkL,MAAOvT,MAAOqI,EAAOrI,SAGzF,IExB8B,yBFyB1B,OAAOM,OAAA+F,EAAA,EAAA/F,CAAA,GAAKgG,EAAZ,CAAmBqM,MAAOtK,EAAOsK,QAErC,IE1B+B,0BF2B3B,IAAMqC,EAAU1O,EAAMqM,MAAM3P,IAAI,SAAAiF,GAAC,OAAKA,EAAEjJ,KAAOqJ,EAAOiJ,KAAKtS,GAArBsB,OAAA+F,EAAA,EAAA/F,CAAA,GAA+B2H,EAA/B,CAAkC8J,OAAQ1J,EAAO0J,SAAW9J,IAClG,OAAO3H,OAAA+F,EAAA,EAAA/F,CAAA,GAAKgG,EAAZ,CAAmBqM,MAAOqC,IAE9B,IE7B+B,0BF8B3B,IAAMC,EAAU3O,EAAMqM,MAAM3P,IAAI,SAAAiF,GAC5B,OAAOA,EAAEjJ,KAAOqJ,EAAOiJ,KAAKtS,GAArBsB,OAAA+F,EAAA,EAAA/F,CAAA,GAEM2H,EAFN,CAGG8J,OAAQ9J,EAAE8J,OAAO/O,IAAI,SAAAqP,GACjB,OAAOA,EAAErT,KAAOqJ,EAAOkL,MAAMvU,GAAtBsB,OAAA+F,EAAA,EAAA/F,CAAA,GAAgC+R,EAAhC,CAAmChB,OAAQhJ,EAAOgJ,SAAWgB,MAG5EpK,IAEV,OAAO3H,OAAA+F,EAAA,EAAA/F,CAAA,GAAKgG,EAAZ,CAAmBqM,MAAOsC,IAE9B,QACI,OAAO3O,IK1Bf4O,GDXW,WAAuC,IAA9B5O,EAA8BtI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtByU,GAAcpK,EAAQrK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQmK,EAAOjJ,MACX,IFNyB,oBEOrB,OAAOkB,OAAA+F,EAAA,EAAA/F,CAAA,GAAKgG,EAAU+B,EAAOqM,MAEjC,QACI,OAAOpO,ICMf+K,OFbW,WAAuC,IAA9B/K,EAA8BtI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtByU,GAAcpK,EAAQrK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQmK,EAAOjJ,MACX,IDHwB,mBCIpB,OAAOkB,OAAA+F,EAAA,EAAA/F,CAAA,GAAKgG,EAAZ,CAAmByN,KAAM1L,EAAOqM,OAEpC,QACI,OAAOpO,MEWb6O,GAAoBC,IAAOnC,WAAP,GACtBoC,IAAepC,WAAf,EAAmB0B,KADG/T,OAnBR,KAuBL0U,GAAQC,YALD,SAACjP,EAAO+B,GAAR,OAAmBwM,GAAWvO,EAAO+B,IAnBpC,GAwBuC8M,0FCA7CK,oLA5BF,IAAA5W,EAUDC,KAAKC,MAVJ2W,EAAA7W,EAED8W,KAFCC,EAAAF,EAGGf,KAAQnE,EAHXoF,EAGWpF,MAHXqF,EAAAD,EAGkBzG,WAAc3N,GAHhCqU,OAAA,IAAAA,EAGyC,GAHzCA,GAGgCrU,KAC7BmR,EAJH+C,EAIG/C,SACAmD,EALHJ,EAKGI,SACAC,EANHL,EAMGK,UANHC,EAAAnX,EAQDoX,cARC,IAAAD,EAQQlX,KAAKC,MAAMmX,aAAe,EARlCF,EASDG,EATCtX,EASDsX,gBAGJ,OACIxW,EAAAC,EAAAC,cAAA,OAAKJ,UAAS,iBAAAoB,OAAmBoV,EAAS,UAAY,GAAxC,KAAApV,OAA8C8R,EAAW,WAAa,KAChFhT,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQE,SAAS,EAAMD,KAAMmR,EAAW,wBAA0B,MAAOjR,QAASoU,IAClFnW,EAAAC,EAAAC,cAAA,MAAAU,OAAAC,OAAA,CAAKf,UAAU,uBAA0B0W,GACpC3F,GAEFuF,EACCpW,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQE,SAAS,EAAMD,KAAK,cAAcE,QAASqU,IAEnDpW,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQ9B,UAAU,oBAAoB6B,UAAU,EAAME,KAAMA,YAtBzDV,IAAMC,WCQvBqV,8MAMFC,+CAAW,SAAAhT,EAAMhE,GAAN,IAAAR,EAAA0S,EAAAiC,EAAA8C,EAAAhF,EAAAiC,EAAAK,EAAA2C,EAAA,OAAA/S,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAA/E,EACqDqC,EAAKnC,MAAzDwS,EADD1S,EACC0S,KAAMiC,EADP3U,EACO2U,MADP8C,EAAAzX,EACcyS,cADd,IAAAgF,EACuB,GADvBA,EAC2B/C,EAD3B1U,EAC2B0U,UAAWK,EADtC/U,EACsC+U,WACvC2C,EAAW,IAAIzG,GAAM,CAAEU,MAAO,YAAanR,OAAMuR,MAAOU,EAAOpT,SAF9DwF,EAAAE,KAAA,EAGD2P,EAAUhC,EAAMiC,EAAP,GAAA3S,OAAAN,OAAAkG,EAAA,EAAAlG,CAAkB+Q,GAAlB,CAA0BiF,KAHlC,OAIP3C,EAAWrC,EAAMiC,EAAO+C,GAJjB,wBAAA7S,EAAAK,SAAAV,8DAOXmT,iBAAmB,SAAAzU,GAAA,IAAGoH,EAAHpH,EAAGoH,KAAMzH,EAATK,EAASL,QAAT,OACf/B,EAAAC,EAAAC,cAAA,OAAKJ,UAAS,YAAAoB,OAAc4V,KAAQC,WAAtB,KAAA7V,OAAoC4V,KAAQE,oBAAsBjV,QAASA,GACpFyH,uFAdW,IAAAvH,EAC2D9C,KAAKC,MAAxEwS,EADQ3P,EACR2P,KAAMiC,EADE5R,EACF4R,MADEoD,EAAAhV,EACK0P,cADL,IAAAsF,EACc,GADdA,EAAAC,EAAAjV,EACkB+Q,SAAY1S,GAD9B4W,OAAA,IAAAA,EACwC,GADxCA,GAC8B5W,MAAc2T,EAD5ChS,EAC4CgS,YACvD3T,GAASqR,EAAOpT,OAAS,GAAG0V,EAAWrC,EAAMiC,EAAOlC,EAAO,qCAgB3D,IAAA3P,EAAA7C,KAAA2N,EAC0F3N,KAAKC,MAA5FwS,EADH9E,EACG8E,KADHuF,EAAArK,EACS+G,aADT,IAAAsD,EACiB,GADjBA,EAAAC,EAAAtK,EACqB6E,cADrB,IAAAyF,EAC8B,GAD9BA,EACkCC,EADlCvK,EACkCuK,WAAY9C,EAD9CzH,EAC8CyH,OAAQvB,EADtDlG,EACsDkG,SAAUiB,EADhEnH,EACgEmH,WAAYL,EAD5E9G,EAC4E8G,UACjF,OACI5T,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,sBACXE,EAAAC,EAAAC,cAACoX,GAAA,EAAD,KACItX,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAMC,UAAW,EAAG1X,UAAU,mBAC1BE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,YACXE,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACIC,KAAK,eACLC,SAAS,EACTC,QAAS,WACLsV,IACApD,EAAWrC,EAAMiC,MAGzB7T,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,kBAAkB+T,EAAMhD,QAG3C7Q,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACIC,QACI1X,EAAAC,EAAAC,cAACoX,GAAA,EAAD,KXoBrB,IAAIjG,IAAI3B,IACViI,UACArU,IAAI,SAAAjD,GAAA,IAAA+B,EAAAxB,OAAAgX,EAAA,EAAAhX,CAAAP,EAAA,GAAAwX,GAAAzV,EAAA,GAAAA,EAAA,UAAiC,CAAE7C,KAAnCsY,EAAOtY,KAAkCI,MAAzCkY,EAAalY,MAAmCkC,KAAhDgW,EAAoBhW,QACxBmF,OAAO,SAAAI,GAAC,OAAK,CAAC8I,GAAWP,KAAMO,GAAWL,OAAOpD,SAASrF,EAAE7H,QWtBR+D,IAAI,SAAA+E,EAAwBG,GAAxB,IAAGjJ,EAAH8I,EAAG9I,KAAMI,EAAT0I,EAAS1I,MAAOkC,EAAhBwG,EAAgBxG,KAAhB,OACzB7B,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACIxH,IAAKgF,EACL3G,KAAMA,EACN2H,KAAM7J,EACNoC,QAAS,kBAAMC,EAAK0U,SAASnX,UAM7CS,EAAAC,EAAAC,cAAC4X,GAAA,EAAD,CAASJ,QAAQ,gBAAgBK,eAAgB,KAC7C/X,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQE,SAAS,EAAMD,KAAK,YAIxC7B,EAAAC,EAAAC,cAAC8X,GAAA,EAAD,CAAWC,MAAO,CAAE1D,OAAM,GAAArT,OAAKqT,EAAS,IAAd,QACtBvU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBAAiBoY,IAAK,SAAAC,GAAE,OAAKnW,EAAKoW,UAAYD,IACzDnY,EAAAC,EAAAC,cAACmY,GAAApY,EAAD,CACIqY,QAAQ,KACRC,SAAUzC,GACV0C,QAAS,EACTC,aAAc,CAAEC,UAAW,IAAKC,QAAS,IACzCtE,KAAM1C,EAAOrO,IAAI,SAAAhD,GAAK,MAAK,CACvBhB,GAAIgB,EAAMhB,GACV0V,KAAM1U,EACN0S,SAAUA,GAAYA,EAAS1S,OAAS0S,EAAS1S,MAAMhB,KAAOgB,EAAMhB,GACpE6W,SAAU,kBAAMlC,EAAWrC,EAAMiC,EAAOvT,OAE5CsY,UAAW,SAAAC,GAAO,OACdjF,EAAUhC,EAAMiC,EAAOgF,EAAQvV,IAAI,SAAC8D,EAAGoB,GAAJ,OAAA5H,OAAA+F,EAAA,EAAA/F,CAAA,GAAgBwG,EAAE4N,KAAlB,CAAwB/D,MAAOzI,QAEtEsQ,UAAW,kBAAM9W,EAAKoW,wBAxE5BjX,IAAMC,WAuGjB2X,eArBS,SAACnS,EAAOxH,GAC5B,IAAMwS,GAAQhL,EAAMyO,aAAapC,OAAS,IAAI7H,KAAK,SAAA7C,GAAC,OAAIA,EAAEjJ,KAAOF,EAAMwS,KAAKtS,KACtEuU,IAAUjC,GAAQ,IAAIS,QAAU,IAAIjH,KAAK,SAAAuH,GAAC,OAAIA,EAAErT,KAAOF,EAAMyU,MAAMvU,KAEzE,MAAO,CACHsS,OACAiC,QACAlC,QAJYkC,GAAS,IAAIlC,OAKzBqB,SAAUpM,EAAMyO,aAAarC,SAC7BuB,OAAQ3N,EAAM4O,GAAGlB,OAAOC,SAGL,SAAAlB,GAAQ,OAC/B2F,YACI,CACI/E,cACAL,cAEJP,IAGO0F,CAGbtC,IC1GIwC,8MAMFC,8BAAW,SAAAxV,IAAA,IAAAxE,EAAA0S,EAAAuH,EAAA9G,EAAAmB,EAAAS,EAAAmF,EAAA,OAAAvV,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAA/E,EAC8CqC,EAAKnC,MAAlDwS,EADD1S,EACC0S,KADDuH,EAAAja,EACOmT,cADP,IAAA8G,EACgB,GADhBA,EACoB3F,EADpBtU,EACoBsU,UAAWS,EAD/B/U,EAC+B+U,WAChCmF,EAAW,IAAIvJ,GAAM,CAAEgB,MAAO,YAAaI,MAAOoB,EAAO9T,SAFxDwF,EAAAE,KAAA,EAGDuP,EAAU5B,EAAD,GAAA1Q,OAAAN,OAAAkG,EAAA,EAAAlG,CAAWyR,GAAX,CAAmB+G,KAH3B,OAIPnF,EAAWrC,EAAMwH,GAJV,wBAAArV,EAAAK,SAAAV,QAOX2V,gBAAkB,SAAAxF,GAAS,IAAA5R,EACKV,EAAKnC,MAAzBwS,EADe3P,EACf2P,MACRwE,EAFuBnU,EACTmU,WACJ,CAAEkD,UAAW7C,GAAarX,MAAO,CAAEwS,OAAMiC,cAGvDgD,iBAAmB,SAAAzU,GAAA,IAAGoH,EAAHpH,EAAGoH,KAAMzH,EAATK,EAASL,QAAT,OACf/B,EAAAC,EAAAC,cAAA,OAAKJ,UAAS,YAAAoB,OAAc4V,KAAQC,WAAtB,KAAA7V,OAAoC4V,KAAQE,oBAAsBjV,QAASA,GACpFyH,uFAnBW,IAAAsD,EACoD3N,KAAKC,MAAjEwS,EADQ9E,EACR8E,KADQ2H,EAAAzM,EACFuF,cADE,IAAAkH,EACO,GADPA,EAAAC,EAAA1M,EACWkG,SAAYa,GADvB2F,OAAA,IAAAA,EACiC,GADjCA,GACuB3F,MAAcI,EADrCnH,EACqCmH,YAChDJ,GAASxB,EAAO9T,OAAS,GAAG0V,EAAWrC,EAAMS,EAAO,qCAqBpD,IAAArQ,EAAA7C,KAAA+N,EAC8E/N,KAAKC,MAAhFwS,EADH1E,EACG0E,KADH6H,EAAAvM,EACSmF,cADT,IAAAoH,EACkB,GADlBA,EACsBpC,EADtBnK,EACsBmK,WAAY9C,EADlCrH,EACkCqH,OAAQvB,EAD1C9F,EAC0C8F,SAAUQ,EADpDtG,EACoDsG,UAAWS,EAD/D/G,EAC+D+G,WACpE,OACIjU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,sBACXE,EAAAC,EAAAC,cAACoX,GAAA,EAAD,KACItX,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAMC,UAAW,EAAG1X,UAAU,mBAC1BE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,YACXE,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACIC,KAAK,eACLC,SAAS,EACTC,QAAS,WACLsV,IACApD,EAAWrC,MAGnB5R,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,kBAAkB8R,EAAKf,QAE1C7Q,EAAAC,EAAAC,cAAC4X,GAAA,EAAD,CAASJ,QAAQ,gBAAgBK,eAAgB,KAC7C/X,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,KAAK,OAAOC,SAAS,EAAMC,QAAS5C,KAAK+Z,aAGzDlZ,EAAAC,EAAAC,cAAC8X,GAAA,EAAD,CAAWC,MAAO,CAAE1D,OAAM,GAAArT,OAAKqT,EAAS,IAAd,QACtBvU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBAAiBoY,IAAK,SAAAC,GAAE,OAAKnW,EAAKoW,UAAYD,IACzDnY,EAAAC,EAAAC,cAACmY,GAAApY,EAAD,CACIqY,QAAQ,KACRC,SAAUzC,GACV0C,QAAS,EACTC,aAAc,CAAEC,UAAW,IAAKC,QAAS,IACzCtE,KAAMhC,EAAO/O,IAAI,SAAAuQ,GAAK,MAAK,CACvBvU,GAAIuU,EAAMvU,GACV0V,KAAMnB,EACNb,SAAUA,GAAYA,EAASa,OAASb,EAASa,MAAMvU,KAAOuU,EAAMvU,GACpE6W,SAAU,kBAAMlC,EAAWrC,EAAMiC,IACjCuC,UAAW,kBAAMpU,EAAKqX,gBAAgBxF,OAE1C+E,UAAW,SAAAC,GAAO,OAAIrF,EAAU5B,EAAMiH,EAAQvV,IAAI,SAACqP,EAAGnK,GAAJ,OAAA5H,OAAA+F,EAAA,EAAA/F,CAAA,GAAgB+R,EAAEqC,KAAlB,CAAwB/D,MAAOzI,QACjFsQ,UAAW,kBAAM9W,EAAKoW,wBA5D5BjX,IAAMC,WAyFjB2X,eAnBS,SAACnS,EAAOxH,GAC5B,IAAMwS,GAAQhL,EAAMyO,aAAapC,OAAS,IAAI7H,KAAK,SAAA7C,GAAC,OAAIA,EAAEjJ,KAAOF,EAAMwS,KAAKtS,KAE5E,MAAO,CACHsS,OACAS,QAHYT,GAAQ,IAAIS,OAIxBW,SAAUpM,EAAMyO,aAAarC,SAC7BuB,OAAQ3N,EAAM4O,GAAGlB,OAAOC,SAGL,SAAAlB,GAAQ,OAC/B2F,YACI,CACIxF,aACAS,eAEJZ,IAGO0F,CAGbE,IC5FIS,8MAMFC,6BAAU,SAAAjW,IAAA,IAAAxE,EAAA0a,EAAA3G,EAAAC,EAAAe,EAAA4F,EAAA,OAAAhW,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAA/E,EACuCqC,EAAKnC,MAD5Cwa,EAAA1a,EACE+T,aADF,IAAA2G,EACU,GADVA,EACc1G,EADdhU,EACcgU,SAAUe,EADxB/U,EACwB+U,WACxB4F,EAAU,IAAIlK,GAAK,CAAEkB,MAAO,WAAYI,MAAOgC,EAAM1U,SAFrDwF,EAAAE,KAAA,EAGAiP,EAAQ,GAAAhS,OAAAN,OAAAkG,EAAA,EAAAlG,CAAKqS,GAAL,CAAY4G,KAHpB,OAIN5F,EAAW4F,GAJL,wBAAA9V,EAAAK,SAAAV,QAOVoW,gBAAkB,SAAAlI,IAEdwE,EADsB7U,EAAKnC,MAAnBgX,WACE,CAAEkD,UAAWL,GAAa7Z,MAAO,CAAEwS,8FAd7B,IAAA3P,EAC4C9C,KAAKC,MADjD2a,EAAA9X,EACRgR,aADQ,IAAA8G,EACA,GADAA,EAAA7C,EAAAjV,EACI+Q,SAAYpB,GADhBsF,OAAA,IAAAA,EACyB,GADzBA,GACgBtF,KAAaqC,EAD7BhS,EAC6BgS,YACxCrC,GAAQqB,EAAM1U,OAAS,GAAG0V,EAAWhB,EAAM,qCAe3C,IAAAjR,EAAA7C,KAAA2N,EAC+D3N,KAAKC,MAAjEmV,EADHzH,EACGyH,OADHyF,EAAAlN,EACWmG,aADX,IAAA+G,EACmB,GADnBA,EAAAR,EAAA1M,EACuBkG,gBADvB,IAAAwG,EACkC,GADlCA,EACsCtG,EADtCpG,EACsCoG,SAAUe,EADhDnH,EACgDmH,WAErD,OACIjU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,sBACXE,EAAAC,EAAAC,cAACoX,GAAA,EAAD,KACItX,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAMC,UAAW,EAAG1X,UAAU,mBAC1BE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,kBACXE,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,UAAhB,UAEJE,EAAAC,EAAAC,cAAC4X,GAAA,EAAD,CAASJ,QAAQ,eAAeK,eAAgB,KAC5C/X,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,KAAK,OAAOC,SAAS,EAAMC,QAAS5C,KAAKwa,YAGzD3Z,EAAAC,EAAAC,cAAC8X,GAAA,EAAD,CAAWC,MAAO,CAAE1D,OAAM,GAAArT,OAAKqT,EAAS,IAAd,QACtBvU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBAAiBoY,IAAK,SAAAC,GAAE,OAAKnW,EAAKoW,UAAYD,IACzDnY,EAAAC,EAAAC,cAACmY,GAAApY,EAAD,CACIqY,QAAQ,KACRC,SAAUzC,GACV0C,QAAS,EACTC,aAAc,CAAEC,UAAW,IAAKC,QAAS,IACzCtE,KAAMpB,EAAM3P,IAAI,SAAAsO,GAAI,MAAK,CACrBtS,GAAIsS,EAAKtS,GACT0V,KAAMpD,EACNoB,SAAUA,GAAYA,EAASpB,MAAQoB,EAASpB,KAAKtS,KAAOsS,EAAKtS,GACjE6W,SAAU,kBAAMlC,EAAWrC,IAC3BwE,UAAW,kBAAMpU,EAAK8X,gBAAgBlI,OAE1CgH,UAAW,SAAAC,GAAO,OAAI3F,EAAS2F,EAAQvV,IAAI,SAACiF,EAAGC,GAAJ,OAAA5H,OAAA+F,EAAA,EAAA/F,CAAA,GAAgB2H,EAAEyM,KAAlB,CAAwB/D,MAAOzI,QAC1EsQ,UAAW,kBAAM9W,EAAKoW,wBA/C7BjX,IAAMC,WAuEhB2X,eAdS,SAAAnS,GAAK,MAAK,CAC9BqM,MAAOrM,EAAMyO,aAAapC,MAC1BD,SAAUpM,EAAMyO,aAAarC,SAC7BuB,OAAQ3N,EAAM4O,GAAGlB,OAAOC,SAED,SAAAlB,GAAQ,OAC/B2F,YACI,CACI9F,YACAe,eAEJZ,IAGO0F,CAGbW,ICnEaO,oLAbF,IACG1F,EAAWpV,KAAKC,MAAhBmV,OAER,OACIvU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,yBAAyBmY,MAAO,CAAE1D,OAAM,GAAArT,OAAKqT,EAAS,GAAd,QACnDvU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iCACXE,EAAAC,EAAAC,cAACga,GAAA,EAAD,CAAYC,aAAc,CAAEb,UAAWI,IAAcU,iBAAiB,aAPlEjZ,IAAMC,WCMxBiZ,8MACFC,SAAW,SAAA5X,GAAU,IAAAxD,EAC+BqC,EAAKnC,MAA7CwU,EADS1U,EACT0U,UAAWhC,EADF1S,EACE0S,KAAMiC,EADR3U,EACQ2U,MADR8C,EAAAzX,EACeyS,cADf,IAAAgF,EACwB,GADxBA,EAEjB/C,EAAUhC,EAAMiC,EAAPjT,OAAAkG,EAAA,EAAAlG,CAAkB+Q,EAAOrO,IAAI,SAAA8D,GAAC,OAAKA,EAAE9H,KAAOoD,EAAOpD,GAAhBsB,OAAA+F,EAAA,EAAA/F,CAAA,GAA0BwG,EAAM1E,GAAW0E,SAG3FD,8BAAW,SAAAzD,IAAA,IAAAzB,EAAAgS,EAAAL,EAAAhC,EAAAiC,EAAAlC,EAAArR,EAAA,OAAAuD,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAhC,EACuDV,EAAKnC,MAA3D6U,EADDhS,EACCgS,WAAYL,EADb3R,EACa2R,UAAWhC,EADxB3P,EACwB2P,KAAMiC,EAD9B5R,EAC8B4R,MAAOlC,EADrC1P,EACqC0P,OAAQrR,EAD7C2B,EAC6C3B,MAD7CyD,EAAAE,KAAA,EAEDgQ,IAFC,OAGPL,EAAUhC,EAAMiC,EAAPjT,OAAAkG,EAAA,EAAAlG,CAAkB+Q,EAAO3K,OAAO,SAAAI,GAAC,OAAIA,EAAE9H,KAAOgB,EAAMhB,OAHtD,wBAAAyE,EAAAK,SAAAV,8EAMF,IAAA1B,EAAA7C,KAAA2N,EAC0B3N,KAAKC,MAA5BwS,EADH9E,EACG8E,KAAMiC,EADT/G,EACS+G,MAAOvT,EADhBwM,EACgBxM,MAErB,OACIN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIqD,IAAKlD,EAAMhB,GACXib,oBAAoB,EACpBC,cAAa5Z,OAAA+F,EAAA,EAAA/F,CAAA,GAAON,GACpBma,iBAAkB/L,YAAagM,MAAM,IACrCJ,SAAUnb,KAAKmb,SACfla,OAAQ,SAAAgC,GAA0C,IAAvCuY,EAAuCvY,EAAvCuY,aAAchX,EAAyBvB,EAAzBuB,WAAYjB,EAAaN,EAAbM,OACjC,OACI1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIW,SAAQ,eAAAuH,EAAAzH,OAAAuS,EAAA,EAAAvS,CAAAiD,EAAA5D,EAAAmT,KAAE,SAAAK,EAAM1S,GAAN,OAAA8C,EAAA5D,EAAA6D,KAAA,SAAA4P,GAAA,cAAAA,EAAA1P,KAAA0P,EAAAzP,MAAA,cAAAyP,EAAAzP,KAAA,EACA0W,EAAa5Z,GADb,OAEN4C,IAFM,wBAAA+P,EAAAtP,SAAAqP,MAAF,gBAAAH,GAAA,OAAAjL,EAAAkL,MAAApU,KAAAb,YAAA,IAKR0B,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,QACNI,MAAO,QACPC,YAAa,QACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,cACNI,MAAO,cACPC,YAAa,cACbE,UAAU,uBf0BR,SAAAQ,GAC9B,OAAQA,EAAMZ,MACV,KAAKwQ,GAAWJ,KACZ,OAAOnC,GAAoBU,cAAc/N,GAC7C,KAAK4P,GAAWjE,KACZ,OAAOqD,GAAoBjB,cAAc/N,GAC7C,KAAK4P,GAAWD,QACZ,OAAOR,GAAuBpB,cAAc/N,GAEhD,KAAK4P,GAAWvG,OAChB,KAAKuG,GAAW5D,OAChB,KAAK4D,GAAW9D,KAChB,QACI,OAAO,MepCUwO,CAAmBta,GAEpBN,EAAAC,EAAAC,cAACyL,GAAOU,OAAR,CACI1M,MAAO,QACPE,KAAM,YACNN,KAAM,gBACNqE,gBAAgB,EAChB7D,MAAO,CACH8E,IAAK,GACLG,IAAK,IACLmF,SAAU,EACVC,cAAe,IAEnBtK,UAAU,8BAEdE,EAAAC,EAAAC,cAACyL,GAAOU,OAAR,CACI1K,UAAU,EACVhC,MAAO,QACPE,KAAM,WACNN,KAAM,eACNqE,gBAAgB,EAChB7D,MAAO,CACH8E,IAAK,GACLG,IAAK,IACLmF,SAAU,EACVC,cAAe,IAEnBtK,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,WACNI,MAAO,WACPE,KAAI,IAAAqB,OAAM0Q,EAAKvB,SAAX,KAAAnP,OAAuB2S,EAAMxD,SAA7B,KAAAnP,OAAyCwB,EAAO2N,SAAhD,KACJzQ,YAAa,WACbE,UAAU,uBAGdE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,SACXE,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACIlC,KAAK,SACLmb,OAAO,SACPhZ,KAAK,QACL2H,KAAK,SACLxI,MAAM,EACNe,QAASC,EAAKmF,uBAvFpBhG,IAAMC,WAiIrB2X,eA/BS,SAAAnS,GACpB,IAAMoM,EAAWpM,EAAMyO,aAAarC,SAE9BC,EAAQrM,EAAMyO,aAAapC,MAC3BrB,GAAQqB,GAAS,IAAI7H,KAAK,SAAA7C,GAAC,OAAIA,EAAEjJ,KAAO0T,EAASpB,KAAKtS,KAEtD+S,GAAUT,GAAQ,IAAIS,OACtBwB,GAASxB,GAAU,IAAIjH,KAAK,SAAAuH,GAAC,OAAIA,EAAErT,KAAO0T,EAASa,MAAMvU,KAEzDqS,GAAUkC,GAAS,IAAIlC,OACvBrR,GAASqR,GAAU,IAAIvG,KAAK,SAAAhE,GAAC,OAAIA,EAAE9H,KAAO0T,EAAS1S,MAAMhB,KAE/D,MAAO,CACH0T,WACAC,QACArB,OACAS,SACAwB,QACAlC,SACArR,UAGmB,SAAA+S,GAAQ,OAC/B2F,YACI,CACIpF,aACAK,eAEJZ,IAGO0F,CAGbsB,IC7IWS,GAAsB,q+VCS7BC,8MACFT,SAAW,SAAA5X,GAAU,IAAAxD,EACwBqC,EAAKnC,MAAtCoU,EADStU,EACTsU,UAAW5B,EADF1S,EACE0S,KADFuH,EAAAja,EACQmT,cADR,IAAA8G,EACiB,GADjBA,EAEjB3F,EAAU5B,EAADhR,OAAAkG,EAAA,EAAAlG,CAAWyR,EAAO/O,IAAI,SAAAqP,GAAC,OAAKA,EAAErT,KAAOoD,EAAOpD,GAAhBsB,OAAA+F,EAAA,EAAA/F,CAAA,GAA0B+R,EAAMjQ,GAAWiQ,SAGpFxL,8BAAW,SAAAzD,IAAA,IAAAzB,EAAAgS,EAAAT,EAAA5B,EAAAS,EAAAwB,EAAA,OAAAhQ,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAhC,EACgDV,EAAKnC,MAApD6U,EADDhS,EACCgS,WAAYT,EADbvR,EACauR,UAAW5B,EADxB3P,EACwB2P,KAAMS,EAD9BpQ,EAC8BoQ,OAAQwB,EADtC5R,EACsC4R,MADtC9P,EAAAE,KAAA,EAEDgQ,IAFC,OAGPT,EAAU5B,EAADhR,OAAAkG,EAAA,EAAAlG,CAAWyR,EAAOrL,OAAO,SAAA2L,GAAC,OAAIA,EAAErT,KAAOuU,EAAMvU,OAH/C,wBAAAyE,EAAAK,SAAAV,8EAMF,IAAA1B,EAAA7C,KAAA2N,EACmB3N,KAAKC,MAArBwS,EADH9E,EACG8E,KAAMiC,EADT/G,EACS+G,MAEd,OACI7T,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIoa,oBAAoB,EACpBC,cAAa5Z,OAAA+F,EAAA,EAAA/F,CAAA,GAAOiT,GACpB4G,iBAAkB/L,YAAagM,MAAM,CACjCrK,SAAU3B,YACLQ,QAAQ4L,GAAqB,CAAE3L,QAAS,2BACxCR,aAET2L,SAAUnb,KAAKmb,SACfla,OAAQ,SAAAgC,GAA0C,IAAvCuY,EAAuCvY,EAAvCuY,aAAchX,EAAyBvB,EAAzBuB,WAAYjB,EAAaN,EAAbM,OACjC,OACI1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIW,SAAQ,eAAAuH,EAAAzH,OAAAuS,EAAA,EAAAvS,CAAAiD,EAAA5D,EAAAmT,KAAE,SAAAK,EAAM1S,GAAN,OAAA8C,EAAA5D,EAAA6D,KAAA,SAAA4P,GAAA,cAAAA,EAAA1P,KAAA0P,EAAAzP,MAAA,cAAAyP,EAAAzP,KAAA,EACA0W,EAAa5Z,GADb,OAEN4C,IAFM,wBAAA+P,EAAAtP,SAAAqP,MAAF,gBAAAH,GAAA,OAAAjL,EAAAkL,MAAApU,KAAAb,YAAA,IAKR0B,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,QACNI,MAAO,QACPC,YAAa,QACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,cACNI,MAAO,cACPC,YAAa,cACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOG,SAAR,CACIvM,KAAM,QACNK,YAAa,yBACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOU,OAAR,CACI1M,MAAO,QACPE,KAAM,YACNN,KAAM,gBACNqE,gBAAgB,EAChB7D,MAAO,CACH8E,IAAK,GACLG,IAAK,IACLmF,SAAU,EACVC,cAAe,IAEnBtK,UAAU,8BAEdE,EAAAC,EAAAC,cAACyL,GAAOU,OAAR,CACI1K,UAAU,EACVhC,MAAO,QACPE,KAAM,WACNN,KAAM,eACNqE,gBAAgB,EAChB7D,MAAO,CACH8E,IAAK,GACLG,IAAK,IACLmF,SAAU,EACVC,cAAe,IAEnBtK,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,WACNI,MAAO,WACPE,KAAI,IAAAqB,OAAM0Q,EAAKvB,SAAX,KAAAnP,OAAuBwB,EAAO2N,SAA9B,KACJzQ,YAAa,WACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,SACXE,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACIlC,KAAK,SACLmb,OAAO,SACPhZ,KAAK,QACL2H,KAAK,SACLxI,MAAM,EACNe,QAASC,EAAKmF,uBA3FpBhG,IAAMC,WAgIrB2X,eA1BS,SAAAnS,GACpB,IAAMoM,EAAWpM,EAAMyO,aAAarC,SAE9BC,EAAQrM,EAAMyO,aAAapC,MAC3BrB,GAAQqB,GAAS,IAAI7H,KAAK,SAAA7C,GAAC,OAAIA,EAAEjJ,KAAO0T,EAASpB,KAAKtS,KAEtD+S,GAAUT,GAAQ,IAAIS,OACtBwB,GAASxB,GAAU,IAAIjH,KAAK,SAAAuH,GAAC,OAAIA,EAAErT,KAAO0T,EAASa,MAAMvU,KAE/D,MAAO,CACH0T,WACAC,QACArB,OACAS,SACAwB,UAGmB,SAAAR,GAAQ,OAC/B2F,YACI,CACIxF,aACAS,eAEJZ,IAGO0F,CAGbgC,IC9GaC,eA3BX,SAAAA,EAAY5b,GAAO,IAAAmC,EAAA,OAAAX,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAA6b,IACfzZ,EAAAX,OAAAwF,EAAA,EAAAxF,CAAAzB,KAAAyB,OAAAyF,EAAA,EAAAzF,CAAAoa,GAAA1U,KAAAnH,KAAMC,KAIV6b,OAAS,kBAAM1Z,EAAKmF,SAAL9F,OAAA+F,EAAA,EAAA/F,CAAA,GAAmBW,EAAKqF,MAAxB,CAA+BsU,MAAO3Z,EAAKqF,MAAMsU,SAH5D3Z,EAAKqF,MAAQ,CAAEsU,OAAQ9b,EAAM8b,MAFd3Z,wEAOV,IACG2Z,EAAS/b,KAAKyH,MAAdsU,KADHhc,EAEuBC,KAAKC,MAAzByR,EAFH3R,EAEG2R,MAAOsK,EAFVjc,EAEUic,SACf,OACInb,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,uBACXE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,sCACXE,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACIZ,MAAM,EACNwI,KAAMqH,EACNtH,UAAa2R,EAAO,WAAa,aACjCnZ,QAAS5C,KAAK8b,OACdnb,UAAU,eAGfob,GAAQlb,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,4BAA4Bqb,WAtBxCha,IAAMC,WCQ9Bga,8MACFd,SAAW,SAAA5X,GAAU,IAAAxD,EACgBqC,EAAKnC,MAA9B8T,EADShU,EACTgU,SADS0G,EAAA1a,EACC+T,aADD,IAAA2G,EACS,GADTA,EAEjB1G,EAAStS,OAAAkG,EAAA,EAAAlG,CAAIqS,EAAM3P,IAAI,SAAAiF,GAAC,OAAKA,EAAEjJ,KAAOoD,EAAOpD,GAAhBsB,OAAA+F,EAAA,EAAA/F,CAAA,GAA0B2H,EAAM7F,GAAW6F,SAG5EpB,8BAAW,SAAAzD,IAAA,IAAAzB,EAAAgS,EAAAf,EAAAD,EAAArB,EAAA,OAAA/N,EAAA5D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAhC,EACuCV,EAAKnC,MAA3C6U,EADDhS,EACCgS,WAAYf,EADbjR,EACaiR,SAAUD,EADvBhR,EACuBgR,MAAOrB,EAD9B3P,EAC8B2P,KAD9B7N,EAAAE,KAAA,EAEDgQ,IAFC,OAGPf,EAAStS,OAAAkG,EAAA,EAAAlG,CAAIqS,EAAMjM,OAAO,SAAAuB,GAAC,OAAIA,EAAEjJ,KAAOsS,EAAKtS,OAHtC,wBAAAyE,EAAAK,SAAAV,8EAMF,IAAA1B,EAAA7C,KACGyS,EAASzS,KAAKC,MAAdwS,KAER,OACI5R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIoa,oBAAoB,EACpBC,cAAa5Z,OAAA+F,EAAA,EAAA/F,CAAA,GAAOgR,GACpB6I,iBAAkB/L,YAAagM,MAAM,CACjCrK,SAAU3B,YACLQ,QAAQ4L,GAAqB,CAAE3L,QAAS,2BACxCR,aAET2L,SAAUnb,KAAKmb,SACfla,OAAQ,SAAAgC,GAAkC,IAA/BuY,EAA+BvY,EAA/BuY,aAAchX,EAAiBvB,EAAjBuB,WACrB,OACI3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIW,SAAQ,eAAAuH,EAAAzH,OAAAuS,EAAA,EAAAvS,CAAAiD,EAAA5D,EAAAmT,KAAE,SAAAK,EAAM1S,GAAN,OAAA8C,EAAA5D,EAAA6D,KAAA,SAAA4P,GAAA,cAAAA,EAAA1P,KAAA0P,EAAAzP,MAAA,cAAAyP,EAAAzP,KAAA,EACA0W,EAAa5Z,GADb,OAEN4C,IAFM,wBAAA+P,EAAAtP,SAAAqP,MAAF,gBAAAH,GAAA,OAAAjL,EAAAkL,MAAApU,KAAAb,YAAA,IAKR0B,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,QACNI,MAAO,QACPC,YAAa,QACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACmb,GAAD,CAAiBxK,MAAM,UACnB7Q,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,qBACNI,MAAO,cACPC,YAAa,cACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,eACNI,MAAO,eACPC,YAAa,MACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOG,SAAR,CACIvM,KAAM,cACNK,YAAa,gBACbE,UAAU,8BAEdE,EAAAC,EAAAC,cAACyL,GAAOG,SAAR,CACIvM,KAAM,sBACNK,YAAa,sBACbE,UAAU,wBAIlBE,EAAAC,EAAAC,cAACmb,GAAD,CAAiBxK,MAAM,WACnB7Q,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,sBACNI,MAAO,eACPC,YAAa,eACbE,UAAU,8BAEdE,EAAAC,EAAAC,cAACyL,GAAOG,SAAR,CACIvM,KAAM,sBACNK,YAAa,uBACbE,UAAU,uBAGdE,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,oBACNI,MAAO,aACPC,YAAa,aACbE,UAAU,8BAEdE,EAAAC,EAAAC,cAACyL,GAAOG,SAAR,CACIvM,KAAM,oBACNK,YAAa,qBACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,oBACNI,MAAO,aACPC,YAAa,aACbE,UAAU,8BAEdE,EAAAC,EAAAC,cAACyL,GAAOG,SAAR,CACIvM,KAAM,oBACNK,YAAa,qBACbE,UAAU,uBAEdE,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,oBACNI,MAAO,aACPC,YAAa,aACbE,UAAU,wBAIlBE,EAAAC,EAAAC,cAACyL,GAAOC,MAAR,CACIrM,KAAM,WACNI,MAAO,WACPC,YAAa,WACbE,UAAU,uBAGdE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,mBACXE,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACIlC,KAAK,SACLmb,OAAO,SACPhZ,KAAK,QACL2H,KAAK,SACLxI,MAAM,EACNe,QAASC,EAAKmF,uBAzHrBhG,IAAMC,WAwJpB2X,eApBS,SAAAnS,GACpB,IAAMoM,EAAWpM,EAAMyO,aAAarC,SAC9BC,EAAQrM,EAAMyO,aAAapC,MAC3BrB,GAAQqB,GAAS,IAAI7H,KAAK,SAAA7C,GAAC,OAAIA,EAAEjJ,KAAO0T,EAASpB,KAAKtS,KAE5D,MAAO,CACH0T,WACAC,QACArB,SAGmB,SAAAyB,GAAQ,OAC/B2F,YACI,CACI9F,YACAe,eAEJZ,IAGO0F,CAGbqC,IC7JIE,8MACFC,qBAAuB,WAAM,IAAAC,EACCja,EAAKnC,MAAvB4T,gBADiB,IAAAwI,EACN,GADMA,EAEjB5J,EAAuBoB,EAAvBpB,KAAMiC,EAAiBb,EAAjBa,MACd,OAD+Bb,EAAV1S,MAEVN,EAAAC,EAAAC,cAACub,GAAD,MAEL5H,EACK7T,EAAAC,EAAAC,cAACwb,GAAD,MAEL9J,EACK5R,EAAAC,EAAAC,cAACyb,GAAD,MAGJ3b,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,mBAAf,4GAGF,IACGyU,EAAWpV,KAAKC,MAAhBmV,OAER,OACIvU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,0BAA0BmY,MAAO,CAAE1D,OAAM,GAAArT,OAAKqT,EAAS,GAAd,QACpDvU,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAMC,UAAW,GACbxX,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAMC,UAAW,EAAG1X,UAAU,mBAC1BE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,kBACXE,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,UAAhB,gBAGRE,EAAAC,EAAAC,cAAC8X,GAAA,EAAD,CAAWC,MAAO,CAAE1D,OAAM,GAAArT,OAAKqT,EAAS,IAAd,QACtBvU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,kBAAkBX,KAAKoc,kCA7BrCpa,IAAMC,WA0ChB2X,eALS,SAAAnS,GAAK,MAAK,CAC9BoM,SAAUpM,EAAMyO,aAAarC,WAEN,SAAAK,GAAQ,OAAI2F,YAAmB,GAAI3F,IAE/C0F,CAGbuC,4CCVaM,eAxCX,SAAAA,EAAYxc,GAAO,IAAAmC,EAAA,OAAAX,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAAyc,IACfra,EAAAX,OAAAwF,EAAA,EAAAxF,CAAAzB,KAAAyB,OAAAyF,EAAA,EAAAzF,CAAAgb,GAAAtV,KAAAnH,KAAMC,KACDwH,MAAQ,GAFErF,wEAIV,IAAArC,EAIDC,KAAKC,MAJJyc,EAAA3c,EAEDqT,QAAWK,EAFViJ,EAEUjJ,OAAQC,EAFlBgJ,EAEkBhJ,KAAMC,EAFxB+I,EAEwB/I,KAAM7O,EAF9B4X,EAE8B5X,KAC/B6X,EAHC5c,EAGD4c,QAGJ,OACI9b,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAMC,UAAW,EAAG1X,UAAU,cAC1BE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACR8S,EAAOH,MACNzS,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQlC,KAAK,SAASoC,SAAS,GAC1B8Q,EAAOpJ,QAGbqJ,EAAKJ,MACJzS,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQlC,KAAK,SAASoC,SAAS,GAC1B+Q,EAAKrJ,OAIlBxJ,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,sBACRgT,EAAKL,MACJzS,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQlC,KAAK,SAASoC,SAAS,EAAMH,UAAWma,GAC3ChJ,EAAKtJ,MAIdxJ,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQlC,KAAK,SAASmb,OAAQkB,KAAOC,QAASra,UAAWma,GACpD7X,EAAKuF,eAjCJrI,IAAMC,WCmEjB6a,eAhEX,SAAAA,EAAY7c,GAAO,IAAAmC,EAAA,OAAAX,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAA8c,IACf1a,EAAAX,OAAAwF,EAAA,EAAAxF,CAAAzB,KAAAyB,OAAAyF,EAAA,EAAAzF,CAAAqb,GAAA3V,KAAAnH,KAAMC,KAIV8c,aAAe,WAAM,IAAAhd,EACcqC,EAAKnC,MAA5BwS,EADS1S,EACT0S,KAAMiC,EADG3U,EACH2U,MAAOvT,EADJpB,EACIoB,MACjB+P,EAAW,GAIf,OAHAA,EAAWvR,EAAQ8S,EAAKvB,UAAYA,EAAzB,GAAAnP,OAAuC0Q,EAAKvB,UACvDA,EAAWvR,EAAQ+U,EAAMxD,UAAYA,EAA1B,GAAAnP,OAAwCmP,EAAxC,KAAAnP,OAAoD2S,EAAMxD,UACrEA,EAAWvR,EAAQwB,EAAM+P,UAAYA,EAA1B,GAAAnP,OAAwCmP,EAAxC,KAAAnP,OAAoDZ,EAAM+P,WAVtD9O,EAcnB4a,SAAW,WAAM,IAAAla,EAC6DV,EAAKnC,MADlEgd,EAAAna,EACL3B,MAAShB,GADJ8c,OAAA,IAAAA,EACqC,GADrCA,GACI9c,GAAIuR,EADRuL,EACQvL,MAAOE,EADfqL,EACerL,YAAarR,EAD5B0c,EAC4B1c,KAD5B2c,EAAApa,EACyCuN,kBADzC,IAAA6M,EACsD,GADtDA,EAGPC,EAAa,CACfhd,KACAC,KAAMgC,EAAK2a,eACXvc,MAAOkR,EACPE,cACAlR,KAAMkR,EACNnR,YAAaiR,EACb/Q,UAAW,iBAGf,OAAQJ,GACJ,KAAKwQ,GAAWJ,KACZ,OAASN,EAAWtB,QAAUlO,EAAAC,EAAAC,cAACyL,GAAOE,IAAQyQ,GAAiBtc,EAAAC,EAAAC,cAACyL,GAAOC,MAAU0Q,GAErF,KAAKpM,GAAWvG,OACZ,OAAO3J,EAAAC,EAAAC,cAACyL,GAAOhC,OAAW2S,GAE9B,KAAKpM,GAAWD,QACZ,OAAOjQ,EAAAC,EAAAC,cAACyL,GAAOG,SAARlL,OAAAC,OAAA,GAAqByb,EAArB,CAAiC3c,MAAOoR,EAAalR,KAAM,GAAID,YAAaiR,KAEvF,KAAKX,GAAWjE,KACZ,OACIjM,EAAAC,EAAAC,cAACyL,GAAOM,KAARrL,OAAAC,OAAA,GAAiByb,EAAjB,CAA6BhY,OAAQkL,EAAWlL,OAAQO,IAAK2K,EAAW3K,IAAKG,IAAKwK,EAAWxK,OAGrG,KAAKkL,GAAW5D,OACZ,OAAOtM,EAAAC,EAAAC,cAACyL,GAAOW,OAAR1L,OAAAC,OAAA,GAAmByb,EAAnB,CAA+BnZ,QAAS,MAEnD,QACI,OACInD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAO2Q,GADX,IACyB7Q,EAAAC,EAAAC,cAAA,YAAOqc,KAAKC,UAAU9c,OA9C3D6B,EAAKqF,MAAQ,GAFErF,wEAsDV,IAAAkb,EACmEtd,KAAKC,MAArEkB,MAAkBqQ,GADrB8L,OAAA,IAAAA,EACmC,CAAEhM,MAAO,CAAEE,QAAS,MADvD8L,GACYhM,MAASE,QAC1B,OACI3Q,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,oBAAoBmY,MAAO,CAAExH,MAAK,GAAAvP,OAAKyP,EAAL,OAC5CxR,KAAKgd,mBA3DMhb,IAAMC,WC6CnBsb,8MA7CXC,aAAe,WAAM,IAAAzd,EACYqC,EAAKnC,MAA1BwS,EADS1S,EACT0S,KADSgL,EAAA1d,EACH2U,aADG,IAAA+I,EACK,GADLA,EAAAC,EAE2DhJ,EAApElC,cAFS,IAAAkL,EAEA,GAFAA,EAAAC,EAE2DjJ,EAAvDpD,MAASE,GAFbmM,OAAA,IAAAA,EAEyB,CAAEnM,QAAS,IAAKD,OAAQ,KAFjDoM,GAEanM,QAE9B,OACI3Q,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,oBAAoBmY,MAAO,CAAExH,MAAK,GAAAvP,OAAKyP,EAAL,OAC7C3Q,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,6BACV6R,EAAOrO,IAAI,SAAChD,EAAOkI,GAAR,OACRxI,EAAAC,EAAAC,cAAC6c,GAAD,CAAevZ,IAAKgF,EAAGoJ,KAAMA,EAAMiC,MAAOA,EAAOvT,MAAOA,EAAOkP,WAAYlP,EAAMkP,0FAO5F,IAAAvN,EACwB9C,KAAKC,MAA1BwS,EADH3P,EACG2P,KADHoL,EAAA/a,EACS4R,aADT,IAAAmJ,EACiB,GADjBA,EAEGnM,EAA+FgD,EAA/FhD,MAAOE,EAAwF8C,EAAxF9C,YAAaU,EAA2EoC,EAA3EpC,MAFvBwL,EAEkGpJ,EAApEpD,MAASE,GAFvCsM,OAAA,IAAAA,EAEmD,CAAEtM,QAAS,IAAKD,OAAQ,KAF3EuM,GAEuCtM,QAFvCuM,EAEkGrJ,EAAhBlC,cAFlF,IAAAuL,EAE2F,GAF3FA,EAIL,OAAKzL,EAGDzR,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,oBAAoBmY,MAAO,CAAExH,MAAK,GAAAvP,OAAKyP,EAAL,OAC7C3Q,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAMC,UAAW,EAAG1X,UAAU,IAC1BE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,2BACXE,EAAAC,EAAAC,cAAA,MAAIJ,UAAU,QAAQ+Q,KACnBE,GAAe/Q,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,iCAAiCiR,IAEvE/Q,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACV6R,EAAOrO,IAAI,SAAChD,EAAOkI,GAAR,OACRxI,EAAAC,EAAAC,cAAC6c,GAAD,CACIvZ,IAAKgF,EACLoJ,KAAMA,EACNiC,MAAOA,EACPvT,MAAOA,EACPkP,WAAYlP,EAAMkP,kBAhBvBrQ,KAAKwd,sBApBJxb,IAAMC,WC4CnB+b,oLA3CF,IAAAje,EACsBC,KAAKC,MAAxBge,EADHle,EACGke,SAAUxL,EADb1S,EACa0S,KAEdf,EAGAe,EAHAf,MAHCmB,EAMDJ,EAFAK,OAAUlB,EAJTiB,EAISjB,YAAayB,EAJtBR,EAIsBQ,MAAOC,EAJ7BT,EAI6BS,KAAMC,EAJnCV,EAImCU,aAJnCN,EAMDR,EADAS,cALC,IAAAD,EAKQ,GALRA,EAQL,OACIpS,EAAAC,EAAAC,cAACF,EAAAC,EAAMoP,SAAP,KACK+N,EAAS,CACNnF,MAAO,CAAEoF,aAAgB5K,EAAO,cAAgB,MAAO6K,aAAgB7K,EAAO,MAAQ,QACtFC,mBAEDD,GACCzS,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CACIC,UAAW,EACX1X,UAAU,qBACVmY,MAAO,CAAEoF,aAAgB3K,EAAe,cAAgB,UAErDF,GACCxS,EAAAC,EAAAC,cAAA,OACIJ,UAAU,uBACVmY,MAAO,CACHsF,gBAAe,OAAArc,OAASsR,EAAT,KACf6K,aAAgB3K,EAAe,MAAQ,iBAInD1S,EAAAC,EAAAC,cAAA,MAAIJ,UAAU,QAAQ+Q,KACnBE,GAAe/Q,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,iCAAiCiR,IAG3E/Q,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACVuS,EAAO/O,IAAI,SAACuQ,EAAOrL,GAAR,OACRxI,EAAAC,EAAAC,cAACsd,GAAD,CAAeha,IAAKgF,EAAGoJ,KAAMA,EAAMiC,MAAOA,eApCvC1S,IAAMC,WC8HlBqc,uBAtHX,SAAAA,EAAYre,GAAO,IAAAmC,EAAA,OAAAX,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAAse,IACflc,EAAAX,OAAAwF,EAAA,EAAAxF,CAAAzB,KAAAyB,OAAAyF,EAAA,EAAAzF,CAAA6c,GAAAnX,KAAAnH,KAAMC,KAIVkb,SAAW,SAAA5X,GACPgb,QAAQC,IAAIjb,IANGnB,EASnBqc,iBAAmB,SAAAhM,GACf,IAAM4I,EAAgB,GACtB,IAAK5I,EAAM,OAAO4I,EAFK,IAAApI,EAICR,EAAhBS,cAJe,IAAAD,EAIN,GAJMA,EAKvB,OAAKC,GAA4B,IAAlBA,EAAO9T,QAEtB8T,EACK/O,IAAI,SAAAqP,GAAC,OAAIA,EAAEhB,OAAOrO,IAAI,SAAA8D,GAAC,OAAAxG,OAAA+F,EAAA,EAAA/F,CAAA,GAAUwG,EAAV,CAAayW,cAAelL,EAAEtC,eACrDyN,OACAC,QAAQ,SAAAzd,GAAS,IACN+P,EAAwC/P,EAAxC+P,SAAUwN,EAA8Bvd,EAA9Bud,cAAerO,EAAelP,EAAfkP,WACjCgL,EAAc5I,EAAKvB,UAAcmK,EAAc5I,EAAKvB,UAAYmK,EAAc5I,EAAKvB,UAAY,GAC/FmK,EAAc5I,EAAKvB,UAAUwN,GAAmBrD,EAAc5I,EAAKvB,UAAUwN,GACvErD,EAAc5I,EAAKvB,UAAUwN,GAC7B,GACNrD,EAAc5I,EAAKvB,UAAUwN,GAAexN,GAAYb,EAAWvQ,eAGpEub,GAdoCA,GAd5BjZ,EA+BnByc,oBAAsB,SAAApM,GAClB,IAAKA,EAAM,OAAOlD,YAAagM,MAAM,IACrC,IAAK9I,EAAKS,QAAiC,IAAvBT,EAAKS,OAAO9T,OAAc,OAAOmQ,YAAagM,MAAM,IAExE,IAAMrI,EAAST,EAAKS,OACf/O,IAAI,SAAAqP,GAAC,MAAK,CACPtC,SAAUsC,EAAEtC,SACZsB,OAAQgB,EAAEhB,OAAO3K,OAAO,SAAAI,GAAC,QAAMA,EAAEoI,eAAiBpI,EAAEoI,WAAWxB,cAAgB5G,EAAEoI,WAAW1B,iBAE/F9G,OAAO,SAAA2L,GAAC,OAAIA,EAAEhB,QAAUgB,EAAEhB,OAAOpT,OAAS,IAEzC0f,EAAY,GAOlB,GANA5L,EAAO0L,QAAQ,SAAA1d,GAA0B,IAAvBgQ,EAAuBhQ,EAAvBgQ,SAAUsB,EAAatR,EAAbsR,OAClBkC,EAAQ,GACdlC,EAAOoM,QAAQ,SAAAzd,GAAK,OAAKuT,EAAMvT,EAAM+P,UAAY9B,GAAejO,EAAMkP,cACtEyO,EAAU5N,GAAY3B,YAAagM,MAAM7G,MAGzClH,KAAE7N,QAAQmf,GAAd,CAIA,IAAMC,EAAY,GAElB,OADAA,EAAUtM,EAAKvB,UAAY3B,YAAagM,MAAMuD,GACvCvP,YAAagM,MAAMwD,KArD1B3c,EAAKqF,MAAQ,CAAEuX,UAAW,GAFX5c,wEA0DV,IACG4c,EAAchf,KAAKyH,MAAnBuX,UADHjf,EAEsCC,KAAKC,MAF3Cwa,EAAA1a,EAEG+T,aAFH,IAAA2G,EAEW,GAFXA,EAEewE,EAFflf,EAEekf,mBACpB,GAAqB,IAAjBnL,EAAM1U,OAAc,OAAO,KAE/B,IAAMgF,EAAQoG,OAAO0U,MAAM1U,OAAO2U,SAASF,IAAuBD,EAAYC,EACxExM,EAAOqB,EAAM1P,GACbiX,EAAgBrb,KAAKye,iBAAiBhM,GACtC6I,EAAmBtb,KAAK6e,oBAAoBpM,GAElD,OACI5R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIqD,IAAKoO,EAAKtS,GACVib,oBAAoB,EACpBC,cAAeA,EACfC,iBAAkBA,EAClBH,SAAUnb,KAAKmb,SACfla,OAAQ,SAAAgC,GAAiB,IAAd0Z,EAAc1Z,EAAd0Z,QACP,OACI9b,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACqe,GAAD,CACI3M,KAAMA,EACNwL,SAAU,SAAA/U,GAAA,IAAG4P,EAAH5P,EAAG4P,MAAH,QAAA5P,EAAUqK,cAEZ1S,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAMC,UAAW,EAAG1X,UAAU,yBAAyBmY,MAAOA,GAC1DjY,EAAAC,EAAAC,cAACse,GAAA,EAAD,CACIld,OAAQiC,EAAQ,IAAM0P,EAAM1U,QAAU,GACtCuB,UAAU,0CACV2e,SAAS,IAEbze,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACIiH,SAAS,WACThH,QACI1X,EAAAC,EAAAC,cAACoX,GAAA,EAAD,KACKrE,EAAM3P,IAAI,SAACiF,EAAGC,GAAJ,OACPxI,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACIxH,IAAKgF,EACL3G,KAAM2G,IAAMjF,EAAQ,UAAY,SAChC5B,SAAU6G,IAAMjF,EAChBiG,KAAMjB,EAAEsI,YAMxB7Q,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,KAAK,OAAOC,SAAS,EAAMhC,UAAU,0BAMjEE,EAAAC,EAAAC,cAACye,GAAD,CAAapM,QAASX,EAAKW,QAASuJ,SAAWrB,GAAmBqB,eA9GnE3a,IAAMC,YCH3Bwd,eACF,SAAAA,EAAYxf,GAAO,IAAAmC,EAAA,OAAAX,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAAyf,IACfrd,EAAAX,OAAAwF,EAAA,EAAAxF,CAAAzB,KAAAyB,OAAAyF,EAAA,EAAAzF,CAAAge,GAAAtY,KAAAnH,KAAMC,KACDwH,MAAQ,GAFErF,wEAKV,IAAArC,EACmDC,KAAKC,MAArDmV,EADHrV,EACGqV,OADHqF,EAAA1a,EACW+T,aADX,IAAA2G,EACmB,GADnBA,EAAA4B,EAAAtc,EACuB8T,SAAYpB,GADnC4J,OAAA,IAAAA,EAC4C,GAD5CA,GACmC5J,KAClCrO,EACF0P,EAAM3P,IAAI,SAACiF,EAAGC,GAAJ,OAAWD,EAAEjJ,MAAUsS,EAAOA,EAAKtS,GAAKiJ,EAAEjJ,IAAMkJ,OAAIhK,IAAY4M,KAAK,SAAA5C,GAAC,YAAUhK,IAANgK,KAAoB,EAE5G,OACIxI,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,uBAAuBmY,MAAO,CAAE1D,OAAM,GAAArT,OAAKqT,EAAS,GAAd,QACjDvU,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAMC,UAAW,EAAG1X,UAAU,oBAC1BE,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAMC,UAAW,EAAG1X,UAAU,mBAC1BE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,kBACXE,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,UAAhB,aAGRE,EAAAC,EAAAC,cAAC8X,GAAA,EAAD,CAAWC,MAAO,CAAE1D,OAAM,GAAArT,OAAKqT,EAAS,IAAd,QACtBvU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,SACXE,EAAAC,EAAAC,cAAC2e,GAAD,CAAcrb,IAAKsb,YAAK7L,GAAQA,MAAOA,EAAOmL,mBAAoB7a,eArBxEpC,IAAMC,WAoCb2X,eANS,SAAAnS,GAAK,MAAK,CAC9BoM,SAAUpM,EAAMyO,aAAarC,SAC7BC,MAAOrM,EAAMyO,aAAapC,QAEH,SAAAI,GAAQ,OAAI2F,YAAmB,GAAI3F,IAE/C0F,CAGb6F,ICnCIG,8BACF,SAAAA,EAAY3f,GAAO,IAAAmC,EAAA,OAAAX,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAA4f,IACfxd,EAAAX,OAAAwF,EAAA,EAAAxF,CAAAzB,KAAAyB,OAAAyF,EAAA,EAAAzF,CAAAme,GAAAzY,KAAAnH,KAAMC,KAaV4f,uBAAyB,YAGrBvK,EAF0BlT,EAAKnC,MAAvBqV,eACGwK,IAASC,YAATte,OAAAoH,EAAA,EAAApH,CAAAW,IAA2B4d,0BAdtC5d,EAAKyd,uBAAyBzd,EAAKyd,uBAAuBjX,KAA5BnH,OAAAoH,EAAA,EAAApH,CAAAW,IAFfA,mFAMfpC,KAAK6f,yBACLpK,OAAOwK,iBAAiB,SAAUjgB,KAAK6f,uEAIvCpK,OAAOyK,oBAAoB,SAAUlgB,KAAK6f,yDASrC,IACGzK,EAAWpV,KAAKC,MAAhBmV,OAER,OACIvU,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,wBACXE,EAAAC,EAAAC,cAACof,GAAD,CAAW/K,OAAQA,IACnBvU,EAAAC,EAAAC,cAACqf,GAAD,CAAYhL,OAAQA,IACpBvU,EAAAC,EAAAC,cAACsf,GAAD,CAASjL,OAAQA,YA5BFpT,IAAMC,YA6CtB2X,eAXS,SAAAnS,GAAK,MAAK,CAC9B2N,OAAQ3N,EAAM4O,GAAGlB,OAAOC,SAED,SAAAlB,GAAQ,OAC/B2F,YACI,CACIvE,kBAEJpB,IAGO0F,CAGbgG,gECOaU,eAjDX,SAAAA,EAAYrgB,GAAO,IAAAmC,EAAA,OAAAX,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAAsgB,IACfle,EAAAX,OAAAwF,EAAA,EAAAxF,CAAAzB,KAAAyB,OAAAyF,EAAA,EAAAzF,CAAA6e,GAAAnZ,KAAAnH,KAAMC,KACDwH,MAAQ,GAFErF,wEAKV,IAAAS,EAAA7C,KAGL,OAFAugB,KAAkBC,sBAGd3f,EAAAC,EAAAC,cAAC0f,EAAA,EAAD,CAAUhK,MAAOA,IACb5V,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,kBACXE,EAAAC,EAAAC,cAAC2f,GAAA,EAAD,CAAQ/f,UAAU,aACdE,EAAAC,EAAAC,cAAC4f,GAAA,EAAD,KACI9f,EAAAC,EAAAC,cAAC6f,GAAA,EAAD,uBACA/f,EAAAC,EAAAC,cAAC8f,GAAA,EAAD,MACAhgB,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACIC,QACI1X,EAAAC,EAAAC,cAACoX,GAAA,EAAD,KACItX,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACInJ,KAAK,WACL2H,KAAK,UACLzH,QAAS,kBACLC,EAAK5C,MAAM6gB,QAAQC,KAAnB,GAAAhf,OAA2Bif,iBAA3B,SAA0D,CACtDlN,MAAO2C,GAAMwK,WAAW/K,aAAapC,WAIjDjT,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CAAUnJ,KAAK,cAAc2H,KAAK,SAClCxJ,EAAAC,EAAAC,cAACmgB,GAAA,EAAD,MACArgB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CAAUnJ,KAAK,aAAa2H,KAAK,QACjCxJ,EAAAC,EAAAC,cAACmgB,GAAA,EAAD,MACArgB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CAAUnJ,KAAK,SAAS2H,KAAK,WAC7BxJ,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CAAUnJ,KAAK,SAAS2H,KAAK,aAIrCxJ,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQE,SAAS,EAAM0H,KAAK,YAIxCxJ,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,SACXE,EAAAC,EAAAC,cAACogB,GAAD,gBA1CInf,IAAMC,WCKnBqc,eAlBX,SAAAA,EAAYre,GAAO,IAAAmC,EAAA,OAAAX,OAAAuF,EAAA,EAAAvF,CAAAzB,KAAAse,IACflc,EAAAX,OAAAwF,EAAA,EAAAxF,CAAAzB,KAAAyB,OAAAyF,EAAA,EAAAzF,CAAA6c,GAAAnX,KAAAnH,KAAMC,KACDwH,MAAQ,GAFErF,wEAKV,IAAAgf,EAGDphB,KAAKC,MADLohB,SAAY5Z,MAFX6Z,GAAAF,OAAA,IAAAA,EAEmC,GAFnCA,GAEoBtN,aAFpB,IAAAwN,EAE4B,GAF5BA,EAKL,OACIzgB,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,SACXE,EAAAC,EAAAC,cAAC2e,GAAD,CAAU5L,MAAOA,YAbN9R,IAAMC,WCK3Bsf,WAAOC,SAASC,eAAe,SACrC3B,IAAS7e,OACLJ,EAAAC,EAAAC,cAAC2gB,EAAA,EAAD,KACI7gB,EAAAC,EAAAC,cAAC4gB,EAAA,EAAD,KACI9gB,EAAAC,EAAAC,cAAC4gB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,GAAA9f,OAAKif,iBAAL,KAAgC7G,UAAWmG,KAC5Dzf,EAAAC,EAAAC,cAAC4gB,EAAA,EAAD,CAAOE,KAAI,GAAA9f,OAAKif,iBAAL,SAAoC7G,UAAW2H,OAGlEP","file":"static/js/main.e84eed6c.chunk.js","sourcesContent":["export const uuid = (n = 36) => {\n    return '00000000-0000-4000-8000-000000000000'\n        .replace(/0/g, () => (0 | (Math.random() * 16)).toString(16))\n        .slice(0, n);\n};\n\nexport const isEmpty = string => {\n    return string === undefined || string === null || string === '';\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, InputGroup } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass InputField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <InputGroup\n                                {...field}\n                                {...extra}\n                                onChange={e => field.onChange(e)}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                autoComplete={`${uuid()}`}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default InputField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Button, TagInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TagField extends React.Component {\n    defaultValue = [];\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: value || []\n            }\n        });\n    };\n\n    clearButton = field => {\n        const { disabled } = this.props;\n        if (!field.value || field.value.length === 0) return null;\n\n        return <Button disabled={disabled} icon={'cross'} minimal={true} onClick={() => this.onChange([], field)} />;\n    };\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TagInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                addOnBlur={true}\n                                tagProps={{ minimal: true }}\n                                rightElement={this.clearButton(field)}\n                                onChange={v => this.onChange(v, field)}\n                                values={field.value || []}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TagField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass CheckboxField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Checkbox\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default CheckboxField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Switch } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SwitchField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Switch\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SwitchField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, RadioGroup, Radio } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass RadioField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, inline = true, validate, options = [], label, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            className={className}\n                        >\n                            <RadioGroup\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                label={label}\n                                onChange={field.onChange}\n                                selectedValue={field.value}\n                                className={`radio-field`}\n                                inline={inline}\n                            >\n                                {options.map(({ value, label }, index) => (\n                                    <Radio\n                                        key={index}\n                                        label={label}\n                                        value={value.toString()}\n                                        checked={field.value === value}\n                                    />\n                                ))}\n                            </RadioGroup>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default RadioField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateField extends React.Component {\n    defaultValue = '';\n\n    onChange = async (value, { onChange }, { submitForm }) => {\n        const { id = uuid(), name, submitOnChange } = this.props;\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: this.momentFormatter().formatDate(value)\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    momentFormatter = () => {\n        const { format = 'MM/DD/YYY' } = this.props;\n        return {\n            formatDate: date => moment(date).format(format),\n            parseDate: str => moment(str, format).toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            validate,\n            label,\n            info,\n            className,\n            min = moment()\n                .add(-1000, 'years')\n                .toDate(),\n            max = moment()\n                .add(1000, 'years')\n                .toDate()\n        } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field, form }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={`${className} fg-date-field`}\n                        >\n                            <DateInput\n                                minDate={this.momentFormatter().parseDate(min)}\n                                maxDate={this.momentFormatter().parseDate(max)}\n                                defaultValue={this.momentFormatter().parseDate(field.value)}\n                                onChange={v => this.onChange(v, field, form)}\n                                {...this.momentFormatter()}\n                                timePrecision={undefined}\n                                fill={true}\n                                inputProps={{\n                                    onKeyDown: e => {\n                                        e.preventDefault();\n                                        return false;\n                                    }\n                                }}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateRangeInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateRangeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'MM/DD/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <DateRangeInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateRangeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { TimePicker } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TimeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, useAmPm = true, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TimePicker\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                useAmPm={useAmPm}\n                                selectAllOnFocus={true}\n                                onChange={v => this.onChange(v, field)}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TimeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Spinner, Button, Tag } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\nimport Upload from 'rc-upload';\n\nimport './fields.scss';\n\nclass FileField extends React.Component {\n    defaultValue = [];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pending: [],\n            processed: []\n        };\n\n        this.setPendingFile = this.setPendingFile.bind(this);\n        this.setProcessedFile = this.setProcessedFile.bind(this);\n        this.processFile = this.processFile.bind(this);\n    }\n\n    setPendingFile = (file, cb) => {\n        this.setState({ ...this.state, pending: [...this.state.pending, file] }, cb);\n    };\n    setProcessedFile = (file, field) => {\n        const pending = [...this.state.pending.filter(pend => pend.id !== file.id)];\n        this.setState(\n            {\n                ...this.state,\n                processed: [...this.state.processed, file],\n                pending\n            },\n            () => this.onChange(this.state.processed, field)\n        );\n    };\n    onRemove = (id, field) => {\n        const processed = this.state.processed.filter(f => f.id !== id);\n        this.setState({ ...this.state, processed }, () => this.onChange(processed, field));\n    };\n\n    processFile = ({ id, file }, field) => {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            let fileInfo = {\n                id,\n                name: file.name,\n                type: file.type,\n                size: Math.round(file.size / 1000) + ' kB',\n                base64: reader.result,\n                file: file\n            };\n\n            this.setProcessedFile(fileInfo, field);\n        };\n    };\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            multi = false,\n            types = [],\n            validate,\n            label,\n            placeholder,\n            info,\n            className\n        } = this.props;\n\n        const uploadProps = field => ({\n            action: 'api uri',\n            type: 'drag',\n            accept: types.join(','),\n            multiple: multi,\n            beforeUpload: file => {\n                const fileObject = { file, id: uuid() };\n                this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n            },\n            onStart: () => null,\n            onSuccess: () => null,\n            onProgress: () => null,\n            onError: () => null,\n            customRequest: () => null\n        });\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <div>\n                                {this.state.pending.length > 0 && <Spinner size={15} />}\n                                {this.state.processed.map((p, i) => (\n                                    <Tag\n                                        key={i}\n                                        minimal={true}\n                                        onRemove={() => this.onRemove(p.id, field)}\n                                        fill={true}\n                                        className=\"mg-b-5\"\n                                    >\n                                        {p.name}\n                                    </Tag>\n                                ))}\n                                <Upload\n                                    {...uploadProps(field)}\n                                    beforeUpload={file => {\n                                        const fileObject = { file, id: uuid() };\n                                        this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n                                    }}\n                                >\n                                    <Button rightIcon=\"upload\" text={placeholder} />\n                                </Upload>\n                            </div>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default FileField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, NumericInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass NumberField extends React.Component {\n    defaultValue = 0;\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <NumericInput\n                                min={Number.MIN_SAFE_INTEGER}\n                                max={Number.MAX_SAFE_INTEGER}\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                placeholder={placeholder}\n                                fill={true}\n                                allowNumericCharactersOnly={false}\n                                onValueChange={v => this.onChange(v, field)}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default NumberField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Slider } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SliderField extends React.Component {\n    defaultValue = 0;\n\n    onChange = async (value, { onChange }, { submitForm }) => {\n        const { id, name, submitOnChange = false } = this.props;\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            label,\n            info,\n            className,\n            extra = { min: 1, max: 100, stepSize: 1, labelStepSize: 100 },\n            disabled = false\n        } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field, form }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Slider\n                                disabled={disabled}\n                                {...field}\n                                {...extra}\n                                onChange={v => this.onChange(v, field, form)}\n                                value={field.value}\n                                vertical={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SliderField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { Select } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = async ({ value }, { onChange }, { submitForm }) => {\n        const { id, name, submitOnChange } = this.props;\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    renderOption = (option, { handleClick, modifiers }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                className=\"fg-field-fill\"\n                active={modifiers.active}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n            />\n        );\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field, form }) => {\n                    const activeOption = options.find(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Select\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                itemRenderer={this.renderOption}\n                                className=\"fg-field-fill\"\n                                inputProps={{ className: 'fg-field-fill' }}\n                                noResults={<MenuItem disabled={true} text=\"-\" />}\n                                onItemSelect={v => this.onItemSelect(v, field, form)}\n                            >\n                                <Button\n                                    rightIcon=\"caret-down\"\n                                    text={activeOption ? activeOption.label : placeholder}\n                                    className=\"fg-field-fill space-between\"\n                                />\n                            </Select>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SelectField;\n","import InputField from './input';\nimport TagField from './tag';\nimport CheckboxField from './checkbox';\nimport SwitchField from './switch';\nimport RadioField from './radio';\nimport DateField from './date';\nimport DateRangeField from './dateRange';\nimport TimeField from './time';\nimport FileField from './file';\nimport NumberField from './number';\nimport SliderField from './slider';\nimport SelectField from './select';\nimport MultiSelectField from './multiSelect';\n\nexport const Fields = {\n    Input: InputField,\n    Tag: TagField,\n    Checkbox: CheckboxField,\n    Switch: SwitchField,\n    Radio: RadioField,\n    Date: DateField,\n    DateRange: DateRangeField,\n    Time: TimeField,\n    File: FileField,\n    Number: NumberField,\n    Slider: SliderField,\n    Select: SelectField,\n    MultiSelect: MultiSelectField\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass MultiSelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = ({ value }, field) => {\n        const { id, name } = this.props;\n        const fieldValue = field.value || [];\n        const values = fieldValue.includes(value) ? fieldValue.filter(fv => fv !== value) : [...fieldValue, value];\n\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onRemove = (_, index, field) => {\n        const { id, name } = this.props;\n        const values = (field.value || []).filter((__, i) => i !== index);\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onClear = ({ onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: []\n            }\n        });\n    };\n\n    renderOption = (option, { handleClick, modifiers }, { value = [] }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                icon={value.includes(option.value) ? 'tick' : 'blank'}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n                shouldDismissPopover={false}\n            />\n        );\n    };\n\n    renderTag = (value, { tagProps, onRemove, rightElement }) => {\n        const { options } = this.props;\n        return (options.find(o => o.value === value) || {}).label;\n    };\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <MultiSelect\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                placeholder={placeholder}\n                                itemRenderer={(o, c) => this.renderOption(o, c, field)}\n                                tagRenderer={this.renderTag}\n                                popoverProps={{\n                                    className: 'fg-field-fill'\n                                }}\n                                tagInputProps={{\n                                    className: 'fg-field-fill',\n                                    tagProps: { minimal: true },\n                                    onRemove: (_, index) => this.onRemove(_, index, field),\n                                    rightElement:\n                                        !!field.value && field.value.length > 0 ? (\n                                            <Button icon=\"cross\" minimal={true} onClick={() => this.onClear(field)} />\n                                        ) : (\n                                            undefined\n                                        )\n                                }}\n                                noResults={<MenuItem disabled={true} text=\"No results.\" />}\n                                onItemSelect={v => this.onItemSelect(v, field)}\n                                selectedItems={field.value || []}\n                                usePortal={false}\n                                inline={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default MultiSelectField;\n","import React from 'react';\nimport { Fields } from '../../fields';\nimport * as Yup from 'yup';\n\nexport class TextFieldDefinition {\n    defaultValue;\n    validation;\n    isRequired;\n    isMulti;\n    mask;\n\n    constructor({ defaultValue = '', validation = '', isRequired = false, isMulti = false, mask = '' }) {\n        this.defaultValue = defaultValue;\n        this.validation = validation;\n        this.isRequired = isRequired;\n        this.isMulti = isMulti;\n        this.mask = mask;\n    }\n\n    static getProperties = f => getPropertyFields(f);\n}\n\nexport const validationFunc = ({ validation = undefined, isRequired = false }) => {\n    if (!validation && !isRequired) return undefined;\n    if (!validation && !!isRequired) return Yup.string().required();\n\n    const validators = {\n        email: Yup.string().email(),\n        zip: Yup.string().test('len', 'Must be exactly 5 characters', val => val.length === 5),\n        ssn: Yup.string().matches(/^[0-9]{3}-?[0-9]{2}-?[0-9]{4}$/, {\n            message: 'Invalid Social Security Number.',\n            excludeEmptyString: true\n        })\n    };\n\n    const validator = validators[validation];\n    return isRequired ? validator.required() : validator;\n};\n\nconst validationOptions = () => {\n    return [{ value: 'email', label: 'Email' }, { value: 'zip', label: 'ZIP' }, { value: 'ssn', label: 'SSN' }];\n};\n\nexport const getPropertyFields = field => {\n    return (\n        <React.Fragment>\n            <Fields.Input\n                name={'definition.defaultValue'}\n                label={'Default value'}\n                placeholder={'Default value'}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Checkbox\n                name={'definition.isMulti'}\n                placeholder={'Is Multi-text ?'}\n                className=\"fg-field width-100 mg-b-0\"\n            />\n            <Fields.Checkbox\n                name={'definition.isRequired'}\n                placeholder={'Is Required ?'}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Select\n                name={'definition.validation'}\n                placeholder={'Validation'}\n                submitOnChange={true}\n                options={validationOptions()}\n                className=\"fg-field width-100\"\n            />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { Fields } from '../../fields';\nimport * as Yup from 'yup';\nimport moment from 'moment';\n\nexport class DateFieldDefinition {\n    format;\n    defaultValue;\n    min;\n    max;\n\n    constructor({ defaultValue, format = 'MM/DD/YYYY', min, max }) {\n        this.format = format;\n        this.defaultValue =\n            defaultValue !== undefined && defaultValue !== null && defaultValue !== ''\n                ? defaultValue\n                : moment().format(format);\n        this.min =\n            min !== undefined && min !== null && min !== ''\n                ? min\n                : moment()\n                      .add(-100, 'years')\n                      .format(format);\n        this.max =\n            max !== undefined && max !== null && max !== ''\n                ? max\n                : moment()\n                      .add(100, 'years')\n                      .format(format);\n    }\n\n    static getProperties = f => getPropertyFields(f);\n}\n\nexport const validationFunc = ({ isRequired = false }) => (!!isRequired ? Yup.string().required() : undefined);\n\nexport const getPropertyFields = field => {\n    const {\n        definition: { format }\n    } = field;\n\n    return (\n        <React.Fragment>\n            <Fields.Date\n                name={'definition.defaultValue'}\n                label={'Default value'}\n                format={format}\n                submitOnChange={true}\n                placeholder={'Default value'}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Date\n                name={'definition.min'}\n                label={'Earliest'}\n                format={format}\n                submitOnChange={true}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Date\n                name={'definition.max'}\n                label={'Latest'}\n                format={format}\n                submitOnChange={true}\n                className=\"fg-field width-100\"\n            />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { Fields } from '../../fields';\n\nexport class BooleanFieldDefinition {\n    defaultValue;\n\n    constructor({ defaultValue = false }) {\n        this.defaultValue = defaultValue;\n    }\n\n    static getProperties = f => getPropertyFields(f);\n}\n\nexport const getPropertyFields = field => {\n    return (\n        <React.Fragment>\n            <Fields.Checkbox\n                name={'definition.defaultValue'}\n                placeholder={'Default value'}\n                className=\"fg-field width-100\"\n            />\n        </React.Fragment>\n    );\n};\n","import { Map } from 'immutable';\nimport { TextFieldDefinition } from './text';\nimport { DateFieldDefinition } from './date';\nimport { BooleanFieldDefinition } from './boolean';\n\nexport const FieldTypeDefinitions = {\n    Page: { name: 'FT_PAGE', label: 'Page', icon: 'applications', rank: 1000 },\n    Group: { name: 'FT_GROUP', label: 'Group', icon: 'application', rank: 900 },\n    Text: {\n        name: 'FT_TEXT',\n        label: 'Text',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'new-text-box',\n        rank: 100\n    },\n    Number: {\n        name: 'FT_NUMBER',\n        label: 'Number',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'numerical',\n        rank: 100\n    },\n    Select: {\n        name: 'FT_SELECT',\n        label: 'Select',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'property',\n        rank: 100\n    },\n    Boolean: {\n        name: 'FT_BOOLEAN',\n        label: 'Checkbox',\n        buildDefinition: d => new BooleanFieldDefinition(d),\n        icon: 'form',\n        rank: 100\n    },\n    Date: {\n        name: 'FT_DATE',\n        label: 'Date',\n        buildDefinition: d => new DateFieldDefinition(d),\n        icon: 'calendar',\n        rank: 100\n    },\n    File: {\n        name: 'FT_FILE',\n        label: 'File',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'cloud-upload',\n        rank: 100\n    }\n};\n\nexport const FieldTypes = {\n    Page: 'FT_PAGE',\n    Group: 'FT_GROUP',\n    Text: 'FT_TEXT',\n    Number: 'FT_NUMBER',\n    Select: 'FT_SELECT',\n    Boolean: 'FT_BOOLEAN',\n    Date: 'FT_DATE',\n    File: 'FT_FILE'\n};\n\nexport const buildTypeDefinitionDetails = (type, definition) => {\n    const typeDefinition = new Map(FieldTypeDefinitions).find(ftd => ftd.name === type) || {};\n    const { icon, buildDefinition } = typeDefinition;\n    return { icon, ...(!!buildDefinition ? buildDefinition(definition) : {}) };\n};\n\nexport const getFieldTypeMenuItems = () => {\n    return new Map(FieldTypeDefinitions)\n        .toArray()\n        .map(([_, { name, label, icon }]) => ({ name, label, icon }))\n        .filter(f => ![FieldTypes.Page, FieldTypes.Group].includes(f.name));\n};\n\nexport const getFieldProperties = field => {\n    switch (field.type) {\n        case FieldTypes.Text:\n            return TextFieldDefinition.getProperties(field);\n        case FieldTypes.Date:\n            return DateFieldDefinition.getProperties(field);\n        case FieldTypes.Boolean:\n            return BooleanFieldDefinition.getProperties(field);\n\n        case FieldTypes.Number:\n        case FieldTypes.Select:\n        case FieldTypes.File:\n        default:\n            return null;\n    }\n};\n","import { uuid } from '../utilities/common';\nimport { FieldTypes, buildTypeDefinitionDetails } from './definitions/fieldTypes';\n\nexport class Field {\n    id;\n    property;\n    title;\n    description;\n    type;\n    definition;\n    width;\n    order;\n    visibleIf;\n\n    constructor({\n        id = uuid(8),\n        property,\n        type = FieldTypes.Text,\n        definition = {},\n        width = { mobile: 100, desktop: 100 },\n        title = 'New Field',\n        description = '',\n        order = 0,\n        visibleIf = true\n    }) {\n        this.id = id;\n        this.property = property || `field_${id}`;\n\n        this.title = title;\n        this.description = description;\n\n        this.type = type;\n        this.definition = buildTypeDefinitionDetails(type, { ...this.definition, ...definition });\n        this.width = width;\n\n        this.order = order;\n        this.visibleIf = visibleIf;\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Field } from './field';\nimport { FieldTypes } from './definitions/fieldTypes';\n\nexport class Group {\n    id;\n    property;\n    title;\n    description;\n    block;\n    width;\n    order;\n    visibleIf;\n    fields;\n\n    constructor({\n        id = uuid(8),\n        property,\n        title = 'New Group',\n        description = '',\n        block = true,\n        width = { mobile: 100, desktop: 100 },\n        order = 0,\n        visibleIf = true,\n        fields = []\n    }) {\n        this.id = id;\n        this.property = property || `group_${id}`;\n        this.title = title;\n        this.type = FieldTypes.Group;\n        this.description = description;\n        this.block = block;\n        this.width = width;\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.fields = fields.map(f => new Field(f));\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Group } from './group';\nimport { FieldTypes } from './definitions/fieldTypes';\n\nexport class Page {\n    id;\n    property;\n    title;\n    type;\n    header;\n    order;\n    visibleIf;\n    groups;\n    buttons;\n\n    constructor(page = {}) {\n        const {\n            id = uuid(8),\n            property,\n            title = 'New Page',\n            description = '',\n            header = {},\n            order = 0,\n            visibleIf = true,\n            groups = [],\n            buttons = {}\n        } = page;\n\n        this.id = id;\n        this.property = property || `page_${id}`;\n        this.title = title;\n        this.type = FieldTypes.Page;\n        this.description = description;\n        this.header = {\n            description: '',\n            image: '',\n            show: true,\n            showProgress: true,\n            ...header\n        };\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.groups = groups.map(g => new Group(g));\n        this.buttons = {\n            cancel: { show: true, text: 'Cancel' },\n            back: { show: true, text: 'Back' },\n            save: { show: true, text: 'Save' },\n            next: { show: true, text: 'Next' },\n            ...buttons\n        };\n    }\n}\n","import {\n    CONFIGURATOR_SELECT_ITEM,\n    CONFIGURATOR_REMOVE_ITEM,\n    CONFIGURATOR_SHOW_PROPERTIES,\n    CONFIGURATOR_SET_PAGES,\n    CONFIGURATOR_SET_GROUPS,\n    CONFIGURATOR_SET_FIELDS\n} from './actions';\nimport { TEST_PAGES } from '../testData';\n\nconst defaultState = {\n    selected: {},\n    form: undefined,\n    pages: TEST_PAGES\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        // Select item to display properties\n        case CONFIGURATOR_SELECT_ITEM:\n            return { ...state, selected: { page: action.page, group: action.group, field: action.field } };\n\n        // Assign pages\n        case CONFIGURATOR_SET_PAGES:\n            return { ...state, pages: action.pages };\n        // Assign groups\n        case CONFIGURATOR_SET_GROUPS:\n            const sgPages = state.pages.map(p => (p.id === action.page.id ? { ...p, groups: action.groups } : p));\n            return { ...state, pages: sgPages };\n        // Assign fields\n        case CONFIGURATOR_SET_FIELDS:\n            const sfPages = state.pages.map(p => {\n                return p.id === action.page.id\n                    ? {\n                          ...p,\n                          groups: p.groups.map(g => {\n                              return g.id === action.group.id ? { ...g, fields: action.fields } : g;\n                          })\n                      }\n                    : p;\n            });\n            return { ...state, pages: sfPages };\n\n        default:\n            return state;\n    }\n}\n\nexport const setPages = pages => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, pages });\n};\nexport const setGroups = (page, groups) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_GROUPS, page, groups });\n};\nexport const setFields = (page, group, fields) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_FIELDS, page, group, fields });\n};\n\nexport const selectItem = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SELECT_ITEM, page, group, field });\n};\n\n//\n// --------------------------------------------------------\n//\n\nexport const removeItem = () => async dispatch => {\n    dispatch({ type: CONFIGURATOR_REMOVE_ITEM });\n};\n\nexport const showProperties = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SHOW_PROPERTIES, page, group, field });\n};\n\nexport const setForm = form => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, form });\n};\n","import { Page } from './models/page';\nimport { Group } from './models/group';\nimport { Field } from './models/field';\nimport { FieldTypes } from './models/definitions/fieldTypes';\n\nexport const TEST_PAGES = [\n    new Page({\n        title: 'Intro',\n        property: 'intro',\n        header: {\n            description:\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a rutrum tellus. Fusce ut mauris id nunc bibendum fringilla. Cras rutrum non ipsum in malesuada. Aliquam semper est vitae magna laoreet sagittis. Integer maximus blandit dictum. Fusce iaculis lacus id quam blandit rhoncus. Sed accumsan massa ac turpis congue fringilla. Etiam rutrum elit non est lacinia, ut posuere velit fringilla. Sed vehicula pharetra elit in suscipit. Phasellus nec ultrices dui. Cras lectus est, fringilla ut velit ut, commodo ullamcorper justo. Maecenas facilisis diam in ante venenatis, sit amet porta nisi auctor. Aenean a ante ut nisi efficitur lacinia.',\n            image: 'http://clipart-library.com/img/752503.jpg',\n            show: true,\n            showProgress: true\n        },\n        buttons: { next: { show: true, text: 'Move forward' } },\n        groups: [\n            new Group({\n                title: 'Personal Info',\n                property: 'personal',\n\n                description:\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a rutrum tellus. Fusce ut mauris id nunc bibendum fringilla.',\n                width: { desktop: 100, mobile: 100 },\n                fields: [\n                    new Field({ title: 'Name', property: 'name', width: { desktop: 50, mobile: 100 } }),\n                    new Field({ title: 'Email', property: 'email', width: { desktop: 50, mobile: 100 } }),\n                    new Field({\n                        title: 'Date of birth',\n                        property: 'dateOfBirth',\n                        width: { desktop: 50, mobile: 100 },\n                        type: FieldTypes.Date,\n                        definition: { format: 'MM/DD/YYYY' }\n                    })\n                    // new Field({ title: 'Age', width: { desktop: 50, mobile: 100 }, type: FieldTypes.Number }),\n                    // new Field({ title: 'Sex', width: { desktop: 50, mobile: 100 }, type: FieldTypes.Select }),\n                    // new Field({\n                    //     title: 'Eligible',\n                    //     description: 'Is Eligible ?',\n                    //     width: { desktop: 50, mobile: 100 },\n                    //     type: FieldTypes.Boolean\n                    // })\n                ]\n            })\n            // new Group({\n            //     title: 'Location',\n            //     width: { desktop: 50, mobile: 100 },\n            //     fields: [new Field({ title: 'Country' }), new Field({ title: 'City' })]\n            // }),\n            // new Group({\n            //     title: 'Some other group',\n            //     width: { desktop: 50, mobile: 100 },\n            //     fields: [new Field({ title: 'Address' }), new Field({ title: 'Post Code' })]\n            // })\n        ]\n    })\n    // new Page({\n    //     title: 'Tax Details',\n    //     groups: [\n    //         new Group({ title: 'SSN', fields: [new Field({ title: 'Type' }), new Field({ title: 'Number' })] }),\n    //         new Group({\n    //             title: 'Registration',\n    //             fields: [new Field({ title: 'Date' }), new Field({ title: 'Unit' })]\n    //         })\n    //     ]\n    // }),\n    // new Page({\n    //     title: 'Lorem ipsum dolor',\n    //     groups: [\n    //         new Group({\n    //             title:\n    //                 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n    //             fields: [new Field({ title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit' })]\n    //         })\n    //     ]\n    // })\n];\n","export const CONFIGURATOR_SELECT_ITEM = 'CONFIGURATOR_SELECT_ITEM';\nexport const CONFIGURATOR_REMOVE_ITEM = 'CONFIGURATOR_REMOVE_ITEM';\nexport const CONFIGURATOR_SHOW_PROPERTIES = 'CONFIGURATOR_SHOW_PROPERTIES';\nexport const CONFIGURATOR_SET_FORM = 'CONFIGURATOR_SET_FORM';\nexport const CONFIGURATOR_SET_PAGES = 'CONFIGURATOR_SET_PAGES';\nexport const CONFIGURATOR_SET_GROUPS = 'CONFIGURATOR_SET_GROUPS';\nexport const CONFIGURATOR_SET_FIELDS = 'CONFIGURATOR_SET_FIELDS';\n\nexport const UI_SET_DIMENSIONS = 'UI_SET_DIMENSIONS';\n\nexport const FIELDS_SET_FIELD = 'FIELDS_SET_FIELD';\n","import { FIELDS_SET_FIELD } from './actions';\n\nconst defaultState = {\n    list: undefined\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case FIELDS_SET_FIELD:\n            return { ...state, list: action.data };\n\n        default:\n            return state;\n    }\n}\n","import { UI_SET_DIMENSIONS } from './actions';\n\nconst defaultState = {\n    screen: { width: 0, height: 0 },\n    panel: { height: 0 }\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case UI_SET_DIMENSIONS:\n            return { ...state, ...action.data };\n\n        default:\n            return state;\n    }\n}\n\nexport const setDimensions = rect => async dispatch => {\n    const screen = { width: window.innerWidth, height: window.innerHeight };\n    const topOffset = rect ? rect.top : 0;\n    const panel = { height: screen.height - topOffset - 59 };\n\n    dispatch({ type: UI_SET_DIMENSIONS, data: { screen, panel } });\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { combineReducers } from 'redux';\n\nimport configurator from './configurator';\nimport fields from './fields';\nimport ui from './ui';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    if (typeof window === 'object') {\n        const { __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ } = window;\n        if (__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && typeof __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function') {\n            enhancers.push(__REDUX_DEVTOOLS_EXTENSION_COMPOSE__());\n        }\n    }\n}\n\nconst appReducer = combineReducers({\n    configurator,\n    ui,\n    fields\n});\n\nconst rootReducer = (state, action) => appReducer(state, action);\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\nexport const store = createStore(rootReducer, initialState, composedEnhancers);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass ListItem extends React.Component {\n    render() {\n        const {\n            item: {\n                data: { title, definition: { icon } = {} },\n                selected,\n                onSelect,\n                openPanel\n            },\n            picked = this.props.itemSelected > 0,\n            dragHandleProps\n        } = this.props;\n\n        return (\n            <div className={`fg-panel-item ${picked ? 'dragged' : ''} ${selected ? 'selected' : ''}`}>\n                <Button minimal={true} icon={selected ? 'manually-entered-data' : 'cog'} onClick={onSelect} />\n                <div className=\"item-title ellipsis\" {...dragHandleProps}>\n                    {title}\n                </div>\n                {!!openPanel ? (\n                    <Button minimal={true} icon=\"caret-right\" onClick={openPanel} />\n                ) : (\n                    <Button className=\"fg-type-indicator\" disabled={true} icon={icon} />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, MenuItem, Popover, Classes, Tooltip } from '@blueprintjs/core';\nimport ListItem from './item';\nimport { selectItem, setFields } from '../../../../../state/configurator';\nimport { Field } from '../../../../../models/field';\nimport { getFieldTypeMenuItems } from '../../../../../models/definitions/fieldTypes';\n\nclass FieldsPanel extends React.Component {\n    componentDidMount() {\n        const { page, group, fields = [], selected: { field } = {}, selectItem } = this.props;\n        if (!field && fields.length > 0) selectItem(page, group, fields[0]);\n    }\n\n    addField = async type => {\n        const { page, group, fields = [], setFields, selectItem } = this.props;\n        const newField = new Field({ title: 'New Field', type, order: fields.length });\n        await setFields(page, group, [...fields, newField]);\n        selectItem(page, group, newField);\n    };\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, group = {}, fields = [], closePanel, height, selected, selectItem, setFields } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page, group);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{group.title}</div>\n                        </div>\n\n                        <Popover\n                            content={\n                                <Menu>\n                                    {getFieldTypeMenuItems().map(({ name, label, icon }, i) => (\n                                        <MenuItem\n                                            key={i}\n                                            icon={icon}\n                                            text={label}\n                                            onClick={() => this.addField(name)}\n                                        />\n                                    ))}\n                                </Menu>\n                            }\n                        >\n                            <Tooltip content=\"Add new field\" hoverOpenDelay={1000}>\n                                <Button minimal={true} icon=\"plus\" />\n                            </Tooltip>\n                        </Popover>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={fields.map(field => ({\n                                    id: field.id,\n                                    data: field,\n                                    selected: selected && selected.field && selected.field.id === field.id,\n                                    onSelect: () => selectItem(page, group, field)\n                                }))}\n                                onMoveEnd={newList =>\n                                    setFields(page, group, newList.map((f, i) => ({ ...f.data, order: i })))\n                                }\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const group = ((page || {}).groups || []).find(g => g.id === props.group.id);\n    const fields = (group || {}).fields;\n    return {\n        page,\n        group,\n        fields,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            selectItem,\n            setFields\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, Classes, Tooltip } from '@blueprintjs/core';\nimport FieldsPanel from './fields';\nimport ListItem from './item';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\nimport { Group } from '../../../../../models/group';\n\nclass GroupsPanel extends React.Component {\n    componentDidMount() {\n        const { page, groups = [], selected: { group } = {}, selectItem } = this.props;\n        if (!group && groups.length > 0) selectItem(page, groups[0]);\n    }\n\n    addGroup = async () => {\n        const { page, groups = [], setGroups, selectItem } = this.props;\n        const newGroup = new Group({ title: 'New Group', order: groups.length });\n        await setGroups(page, [...groups, newGroup]);\n        selectItem(page, newGroup);\n    };\n\n    openFieldsPanel = group => {\n        const { page, openPanel } = this.props;\n        openPanel({ component: FieldsPanel, props: { page, group } });\n    };\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, groups = [], closePanel, height, selected, setGroups, selectItem } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{page.title}</div>\n                        </div>\n                        <Tooltip content=\"Add new group\" hoverOpenDelay={1000}>\n                            <Button icon=\"plus\" minimal={true} onClick={this.addGroup} />\n                        </Tooltip>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={groups.map(group => ({\n                                    id: group.id,\n                                    data: group,\n                                    selected: selected && selected.group && selected.group.id === group.id,\n                                    onSelect: () => selectItem(page, group),\n                                    openPanel: () => this.openFieldsPanel(group)\n                                }))}\n                                onMoveEnd={newList => setGroups(page, newList.map((g, i) => ({ ...g.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const groups = (page || {}).groups;\n    return {\n        page,\n        groups,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SimpleBar from 'simplebar-react';\nimport DraggableList from 'react-draggable-list';\nimport { Card, Menu, Button, Tooltip } from '@blueprintjs/core';\nimport GroupsPanel from './groups';\nimport ListItem from './item';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport { Page } from '../../../../../models/page';\n\nclass PagesPanel extends React.Component {\n    componentDidMount() {\n        const { pages = [], selected: { page } = {}, selectItem } = this.props;\n        if (!page && pages.length > 0) selectItem(pages[0]);\n    }\n\n    addPage = async () => {\n        const { pages = [], setPages, selectItem } = this.props;\n        const newPage = new Page({ title: 'New Page', order: pages.length });\n        await setPages([...pages, newPage]);\n        selectItem(newPage);\n    };\n\n    openGroupsPanel = page => {\n        const { openPanel } = this.props;\n        openPanel({ component: GroupsPanel, props: { page } });\n    };\n\n    render() {\n        const { height, pages = [], selected = {}, setPages, selectItem } = this.props;\n\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Pages</span>\n                        </div>\n                        <Tooltip content=\"Add new page\" hoverOpenDelay={1000}>\n                            <Button icon=\"plus\" minimal={true} onClick={this.addPage} />\n                        </Tooltip>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={pages.map(page => ({\n                                    id: page.id,\n                                    data: page,\n                                    selected: selected && selected.page && selected.page.id === page.id,\n                                    onSelect: () => selectItem(page),\n                                    openPanel: () => this.openGroupsPanel(page)\n                                }))}\n                                onMoveEnd={newList => setPages(newList.map((p, i) => ({ ...p.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    pages: state.configurator.pages,\n    selected: state.configurator.selected,\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PagesPanel);\n","import React from 'react';\nimport { PanelStack } from '@blueprintjs/core';\nimport PagesPanel from './panels/pages';\n\nclass Navigator extends React.Component {\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-navigator\" style={{ height: `${height - 70}px` }}>\n                <div className=\"panel-wrapper bp3-elevation-1\">\n                    <PanelStack initialPanel={{ component: PagesPanel }} showPanelHeader={false} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navigator;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setFields, selectItem } from '../../../../../state/configurator';\nimport { getFieldProperties } from '../../../../../models/definitions/fieldTypes';\n\nclass FieldProperties extends React.Component {\n    onSubmit = values => {\n        const { setFields, page, group, fields = [] } = this.props;\n        setFields(page, group, [...fields.map(f => (f.id === values.id ? { ...f, ...values } : f))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setFields, page, group, fields, field } = this.props;\n        await selectItem();\n        setFields(page, group, [...fields.filter(f => f.id !== field.id)]);\n    };\n\n    render() {\n        const { page, group, field } = this.props;\n\n        return (\n            <Formik\n                key={field.id}\n                enableReinitialize={true}\n                initialValues={{ ...field }}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm, values }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'description'}\n                                label={'Description'}\n                                placeholder={'Description'}\n                                className=\"fg-field width-100\"\n                            />\n\n                            {getFieldProperties(field)}\n\n                            <Fields.Slider\n                                label={'Width'}\n                                info={'(desktop)'}\n                                name={'width.desktop'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100 mg-b-0\"\n                            />\n                            <Fields.Slider\n                                disabled={true}\n                                label={'Width'}\n                                info={'(mobile)'}\n                                name={'width.mobile'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'property'}\n                                label={'Property'}\n                                info={`(${page.property}.${group.property}.${values.property})`}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n\n                            <div className=\"pd-15\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    const groups = (page || {}).groups;\n    const group = (groups || []).find(g => g.id === selected.group.id);\n\n    const fields = (group || {}).fields;\n    const field = (fields || []).find(f => f.id === selected.field.id);\n\n    return {\n        selected,\n        pages,\n        page,\n        groups,\n        group,\n        fields,\n        field\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setFields,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldProperties);\n","/* eslint-disable */\nexport const safeVariablePattern = /^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\nimport { safeVariablePattern } from '../../../../../utilities/constants';\n\nclass GroupProperties extends React.Component {\n    onSubmit = values => {\n        const { setGroups, page, groups = [] } = this.props;\n        setGroups(page, [...groups.map(g => (g.id === values.id ? { ...g, ...values } : g))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setGroups, page, groups, group } = this.props;\n        await selectItem();\n        setGroups(page, [...groups.filter(g => g.id !== group.id)]);\n    };\n\n    render() {\n        const { page, group } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...group }}\n                validationSchema={Yup.object().shape({\n                    property: Yup.string()\n                        .matches(safeVariablePattern, { message: 'Invalid property name.' })\n                        .required()\n                })}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm, values }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'description'}\n                                label={'Description'}\n                                placeholder={'Description'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Checkbox\n                                name={'block'}\n                                placeholder={'Block (show as block?)'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Slider\n                                label={'Width'}\n                                info={'(desktop)'}\n                                name={'width.desktop'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100 mg-b-0\"\n                            />\n                            <Fields.Slider\n                                disabled={true}\n                                label={'Width'}\n                                info={'(mobile)'}\n                                name={'width.mobile'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'property'}\n                                label={'Property'}\n                                info={`(${page.property}.${values.property})`}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n                            <div className=\"pd-15\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    const groups = (page || {}).groups;\n    const group = (groups || []).find(g => g.id === selected.group.id);\n\n    return {\n        selected,\n        pages,\n        page,\n        groups,\n        group\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupProperties);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass PropertiesGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { open: !!props.open };\n    }\n\n    toggle = () => this.setState({ ...this.state, open: !this.state.open });\n\n    render() {\n        const { open } = this.state;\n        const { title, children } = this.props;\n        return (\n            <div className=\"fg-properties-group\">\n                <div className=\"fg-properties-group-header mg-x-15\">\n                    <Button\n                        fill={true}\n                        text={title}\n                        rightIcon={!!open ? 'caret-up' : 'caret-down'}\n                        onClick={this.toggle}\n                        className=\"mg-b-20\"\n                    />\n                </div>\n                {!!open && <div className=\"fg-properties-group-body\">{children}</div>}\n            </div>\n        );\n    }\n}\n\nexport default PropertiesGroup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport PropertiesGroup from '../components/propertiesGroup';\nimport { safeVariablePattern } from '../../../../../utilities/constants';\n\nclass PageProperties extends React.Component {\n    onSubmit = values => {\n        const { setPages, pages = [] } = this.props;\n        setPages([...pages.map(p => (p.id === values.id ? { ...p, ...values } : p))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setPages, pages, page } = this.props;\n        await selectItem();\n        setPages([...pages.filter(p => p.id !== page.id)]);\n    };\n\n    render() {\n        const { page } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...page }}\n                validationSchema={Yup.object().shape({\n                    property: Yup.string()\n                        .matches(safeVariablePattern, { message: 'Invalid property name.' })\n                        .required()\n                })}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <PropertiesGroup title=\"Header\">\n                                <Fields.Input\n                                    name={'header.description'}\n                                    label={'Description'}\n                                    placeholder={'Description'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'header.image'}\n                                    label={'Header Image'}\n                                    placeholder={'Url'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Checkbox\n                                    name={'header.show'}\n                                    placeholder={'Show header ?'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'header.showProgress'}\n                                    placeholder={'Show progress bar ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                            </PropertiesGroup>\n\n                            <PropertiesGroup title=\"Buttons\">\n                                <Fields.Input\n                                    name={'buttons.cancel.text'}\n                                    label={'Cancel label'}\n                                    placeholder={'Cancel label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.cancel.show'}\n                                    placeholder={'Show cancel button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n\n                                <Fields.Input\n                                    name={'buttons.back.text'}\n                                    label={'Back label'}\n                                    placeholder={'Back label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.back.show'}\n                                    placeholder={'Show back button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'buttons.save.text'}\n                                    label={'Save label'}\n                                    placeholder={'Save label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.save.show'}\n                                    placeholder={'Show save button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'buttons.next.text'}\n                                    label={'Next label'}\n                                    placeholder={'Next label'}\n                                    className=\"fg-field width-100\"\n                                />\n                            </PropertiesGroup>\n\n                            <Fields.Input\n                                name={'property'}\n                                label={'Property'}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n\n                            <div className=\"mg-x-15 mg-t-20\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    return {\n        selected,\n        pages,\n        page\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PageProperties);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\nimport FieldProperties from './forms/field';\nimport GroupProperties from './forms/group';\nimport PageProperties from './forms/page';\n\nclass Properties extends React.Component {\n    renderPropertiesForm = () => {\n        const { selected = {} } = this.props;\n        const { page, group, field } = selected;\n        if (!!field) {\n            return <FieldProperties />;\n        }\n        if (!!group) {\n            return <GroupProperties />;\n        }\n        if (!!page) {\n            return <PageProperties />;\n        }\n\n        return <div className=\"pd-20 tx-center\">Select item to show properties.</div>;\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-properties\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1}>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Properties</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-y-20 pd-x-5\">{this.renderPropertiesForm()}</div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Properties);\n","import React from 'react';\nimport { Card, Button, Intent } from '@blueprintjs/core';\n\nclass FormButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        const {\n            buttons: { cancel, back, save, next },\n            isValid\n        } = this.props;\n\n        return (\n            <Card elevation={0} className=\"fg-buttons\">\n                <div className=\"fg-left-buttons\">\n                    {!!cancel.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {cancel.text}\n                        </Button>\n                    )}\n                    {!!back.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {back.text}\n                        </Button>\n                    )}\n                </div>\n                <div className=\"fg-right-buttons\">\n                    {!!save.show && (\n                        <Button type=\"button\" minimal={true} disabled={!isValid}>\n                            {save.text}\n                        </Button>\n                    )}\n\n                    <Button type=\"submit\" intent={Intent.SUCCESS} disabled={!isValid}>\n                        {next.text}\n                    </Button>\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default FormButtons;\n","import React from 'react';\nimport { FieldTypes } from '../../../models/definitions/fieldTypes';\nimport { Fields } from '../../../fields';\nimport { isEmpty } from '../../../utilities/common';\n\nclass FieldRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    getFieldName = () => {\n        const { page, group, field } = this.props;\n        let property = '';\n        property = isEmpty(page.property) ? property : `${page.property}`;\n        property = isEmpty(group.property) ? property : `${property}.${group.property}`;\n        property = isEmpty(field.property) ? property : `${property}.${field.property}`;\n        return property;\n    };\n\n    getField = () => {\n        const { field: { id, title, description, type } = {}, definition = {} } = this.props;\n\n        const fieldProps = {\n            id,\n            name: this.getFieldName(),\n            label: title,\n            description,\n            info: description,\n            placeholder: title,\n            className: 'fg-field-fill'\n        };\n\n        switch (type) {\n            case FieldTypes.Text:\n                return !!definition.isMulti ? <Fields.Tag {...fieldProps} /> : <Fields.Input {...fieldProps} />;\n\n            case FieldTypes.Number:\n                return <Fields.Number {...fieldProps} />;\n\n            case FieldTypes.Boolean:\n                return <Fields.Checkbox {...fieldProps} label={description} info={''} placeholder={title} />;\n\n            case FieldTypes.Date:\n                return (\n                    <Fields.Date {...fieldProps} format={definition.format} min={definition.min} max={definition.max} />\n                );\n\n            case FieldTypes.Select:\n                return <Fields.Select {...fieldProps} options={[]} />;\n\n            default:\n                return (\n                    <div>\n                        <span>{title}</span> <span>{JSON.stringify(type)}</span>\n                    </div>\n                );\n        }\n    };\n\n    render() {\n        const { field: { width: { desktop } } = { width: { desktop: 100 } } } = this.props;\n        return (\n            <div className=\"fg-field-renderer\" style={{ width: `${desktop}%` }}>\n                {this.getField()}\n            </div>\n        );\n    }\n}\n\nexport default FieldRenderer;\n","import React from 'react';\nimport { Card } from '@blueprintjs/core';\nimport FieldRenderer from './field';\n\nclass GroupRenderer extends React.Component {\n    renderFields = () => {\n        const { page, group = {} } = this.props;\n        const { fields = [], width: { desktop } = { desktop: 100, mobile: 100 } } = group;\n\n        return (\n            <div className=\"fg-group-renderer\" style={{ width: `${desktop}%` }}>\n                <div className=\"fg-fields-wrapper pd-t-10\">\n                    {fields.map((field, i) => (\n                        <FieldRenderer key={i} page={page} group={group} field={field} definition={field.definition} />\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        const { page, group = {} } = this.props;\n        const { title, description, block, width: { desktop } = { desktop: 100, mobile: 100 }, fields = [] } = group;\n\n        if (!block) return this.renderFields();\n\n        return (\n            <div className=\"fg-group-renderer\" style={{ width: `${desktop}%` }}>\n                <Card elevation={0} className=\"\">\n                    <div className=\"fg-group-header mg-b-20\">\n                        <h3 className=\"mg-0\">{title}</h3>\n                        {!!description && <span className=\"bp3-text-small bp3-text-muted\">{description}</span>}\n                    </div>\n                    <div className=\"fg-fields-wrapper\">\n                        {fields.map((field, i) => (\n                            <FieldRenderer\n                                key={i}\n                                page={page}\n                                group={group}\n                                field={field}\n                                definition={field.definition}\n                            />\n                        ))}\n                    </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default GroupRenderer;\n","import React from 'react';\nimport { Card } from '@blueprintjs/core';\nimport GroupRenderer from './group';\n\nclass PageRenderer extends React.Component {\n    render() {\n        const { progress, page } = this.props;\n        const {\n            title,\n            header: { description, image, show, showProgress },\n            groups = []\n        } = page;\n\n        return (\n            <React.Fragment>\n                {progress({\n                    style: { borderRadius: !!show ? '3px 3px 0 0' : '3px', marginBottom: !!show ? '0px' : '20px' },\n                    showProgress\n                })}\n                {!!show && (\n                    <Card\n                        elevation={0}\n                        className=\"fg-renderer-header\"\n                        style={{ borderRadius: !!showProgress ? '0 0 3px 3px' : '3px' }}\n                    >\n                        {!!image && (\n                            <div\n                                className=\"fg-page-header-image\"\n                                style={{\n                                    backgroundImage: `url(${image})`,\n                                    borderRadius: !!showProgress ? '0px' : '3px 3px 0 0'\n                                }}\n                            />\n                        )}\n                        <h2 className=\"mg-0\">{title}</h2>\n                        {!!description && <span className=\"bp3-text-small bp3-text-muted\">{description}</span>}\n                    </Card>\n                )}\n                <div className=\"fg-groups-wrapper\">\n                    {groups.map((group, i) => (\n                        <GroupRenderer key={i} page={page} group={group} />\n                    ))}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PageRenderer;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Card, Button, ProgressBar, Popover, Menu, MenuItem } from '@blueprintjs/core';\nimport FormButtons from './components/buttons';\nimport PageRenderer from './components/page';\n\nimport './renderer.scss';\nimport { validationFunc } from '../../models/definitions/text';\n\nclass FromRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pageIndex: 0 };\n    }\n\n    onSubmit = values => {\n        console.log(values);\n    };\n\n    getInitialValues = page => {\n        const initialValues = {};\n        if (!page) return initialValues;\n\n        const { groups = [] } = page;\n        if (!groups || groups.length === 0) return initialValues;\n\n        groups\n            .map(g => g.fields.map(f => ({ ...f, groupProperty: g.property })))\n            .flat()\n            .forEach(field => {\n                const { property, groupProperty, definition } = field;\n                initialValues[page.property] = !!initialValues[page.property] ? initialValues[page.property] : {};\n                initialValues[page.property][groupProperty] = !!initialValues[page.property][groupProperty]\n                    ? initialValues[page.property][groupProperty]\n                    : {};\n                initialValues[page.property][groupProperty][property] = definition.defaultValue;\n            });\n\n        return initialValues;\n    };\n\n    getValidationSchema = page => {\n        if (!page) return Yup.object().shape({});\n        if (!page.groups || page.groups.length === 0) return Yup.object().shape({});\n\n        const groups = page.groups\n            .map(g => ({\n                property: g.property,\n                fields: g.fields.filter(f => !!f.definition && (!!f.definition.isRequired || !!f.definition.validation))\n            }))\n            .filter(g => g.fields && g.fields.length > 0);\n\n        const pageShape = {};\n        groups.forEach(({ property, fields }) => {\n            const group = {};\n            fields.forEach(field => (group[field.property] = validationFunc(field.definition)));\n            pageShape[property] = Yup.object().shape(group);\n        });\n\n        if (_.isEmpty(pageShape)) {\n            return undefined;\n        }\n\n        const formShape = {};\n        formShape[page.property] = Yup.object().shape(pageShape);\n        return Yup.object().shape(formShape);\n    };\n\n    render() {\n        const { pageIndex } = this.state;\n        const { pages = [], activePageOverride } = this.props;\n        if (pages.length === 0) return null;\n\n        const index = Number.isNaN(Number.parseInt(activePageOverride)) ? pageIndex : activePageOverride;\n        const page = pages[index];\n        const initialValues = this.getInitialValues(page);\n        const validationSchema = this.getValidationSchema(page);\n\n        return (\n            <Formik\n                key={page.id}\n                enableReinitialize={true}\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={this.onSubmit}\n                render={({ isValid }) => {\n                    return (\n                        <Form>\n                            <PageRenderer\n                                page={page}\n                                progress={({ style, showProgress }) =>\n                                    !!showProgress && (\n                                        <Card elevation={0} className=\"fg-renderer-navigation\" style={style}>\n                                            <ProgressBar\n                                                value={(index + 1) / (pages.length || 1)}\n                                                className=\"bp3-intent-success fg-renderer-progress\"\n                                                animate={false}\n                                            />\n                                            <Popover\n                                                position=\"left-top\"\n                                                content={\n                                                    <Menu>\n                                                        {pages.map((p, i) => (\n                                                            <MenuItem\n                                                                key={i}\n                                                                icon={i === index ? 'confirm' : 'circle'}\n                                                                disabled={i === index}\n                                                                text={p.title}\n                                                            />\n                                                        ))}\n                                                    </Menu>\n                                                }\n                                            >\n                                                <Button icon=\"menu\" minimal={true} className=\"fg-renderer-menu\" />\n                                            </Popover>\n                                        </Card>\n                                    )\n                                }\n                            />\n                            <FormButtons buttons={page.buttons} isValid={!!validationSchema ? isValid : true} />\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default FromRenderer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\nimport FromRenderer from '../../../renderer';\nimport { hash } from 'immutable';\n\nclass Preview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const { height, pages = [], selected: { page } = {} } = this.props;\n        const index =\n            pages.map((p, i) => (p.id === (!!page ? page.id : p.id) ? i : undefined)).find(i => i !== undefined) || 0;\n\n        return (\n            <div className=\"configurator-preview\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1} className=\"fg-panel-wrapper\">\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Preview</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-20\">\n                            <FromRenderer key={hash(pages)} pages={pages} activePageOverride={index} />\n                        </div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected,\n    pages: state.configurator.pages\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Preview);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Navigator from './components/navigator';\nimport Properties from './components/properties';\nimport Preview from './components/preview';\nimport { setDimensions } from '../../state/ui';\n\nimport 'simplebar/dist/simplebar.min.css';\nimport './configurator.scss';\n\nclass FormConfigurator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        const { setDimensions } = this.props;\n        var rect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n        setDimensions(rect);\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-wrapper\">\n                <Navigator height={height} />\n                <Properties height={height} />\n                <Preview height={height} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setDimensions\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormConfigurator);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from '../state';\nimport FormConfigurator from './configurator';\nimport {\n    FocusStyleManager,\n    Navbar,\n    NavbarGroup,\n    NavbarDivider,\n    NavbarHeading,\n    Menu,\n    MenuItem,\n    Popover,\n    Button,\n    MenuDivider\n} from '@blueprintjs/core';\n\nclass FormGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        FocusStyleManager.onlyShowFocusOnTabs();\n\n        return (\n            <Provider store={store}>\n                <div className=\"form-generator\">\n                    <Navbar className=\"fg-navbar\">\n                        <NavbarGroup>\n                            <NavbarHeading>Form Generator</NavbarHeading>\n                            <NavbarDivider />\n                            <Popover\n                                content={\n                                    <Menu>\n                                        <MenuItem\n                                            icon=\"eye-open\"\n                                            text=\"Preview\"\n                                            onClick={() =>\n                                                this.props.history.push(`${process.env.PUBLIC_URL}/form`, {\n                                                    pages: store.getState().configurator.pages\n                                                })\n                                            }\n                                        />\n                                        <MenuItem icon=\"floppy-disk\" text=\"Save\" />\n                                        <MenuDivider />\n                                        <MenuItem icon=\"new-object\" text=\"New\" />\n                                        <MenuDivider />\n                                        <MenuItem icon=\"export\" text=\"Export\" />\n                                        <MenuItem icon=\"import\" text=\"Import\" />\n                                    </Menu>\n                                }\n                            >\n                                <Button minimal={true} text=\"File\" />\n                            </Popover>\n                        </NavbarGroup>\n                    </Navbar>\n                    <div className=\"stage\">\n                        <FormConfigurator />\n                    </div>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default FormGenerator;\n","import React from 'react';\nimport Renderer from './containers/renderer';\n\nclass FromRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {\n            location: { state: { pages = [] } = {} }\n        } = this.props;\n\n        return (\n            <div className=\"pd-20\">\n                <Renderer pages={pages} />\n            </div>\n        );\n    }\n}\n\nexport default FromRenderer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport FormGenerator from './containers';\nimport RenderedForm from './renderedForm';\n\nimport './styles/root.scss';\n\nconst root = document.getElementById('root');\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={FormGenerator} />\n            <Route path={`${process.env.PUBLIC_URL}/form`} component={RenderedForm} />\n        </Switch>\n    </BrowserRouter>,\n    root\n);\n"],"sourceRoot":""}