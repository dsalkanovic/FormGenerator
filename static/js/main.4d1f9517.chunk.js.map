{"version":3,"sources":["utilities/common.jsx","models/definitions/text.jsx","models/definitions/fieldTypes.jsx","models/field.jsx","models/group.jsx","models/page.jsx","state/configurator.jsx","testData.jsx","state/actions.jsx","state/fields.jsx","state/ui.jsx","state/index.jsx","containers/configurator/components/navigator/panels/item.jsx","containers/configurator/components/navigator/panels/fields.jsx","containers/configurator/components/navigator/panels/groups.jsx","containers/configurator/components/navigator/panels/pages.jsx","containers/configurator/components/navigator/index.jsx","containers/configurator/components/properties/index.jsx","fields/input.jsx","fields/tag.jsx","fields/checkbox.jsx","fields/switch.jsx","fields/radio.jsx","fields/date.jsx","fields/dateRange.jsx","fields/time.jsx","fields/file.jsx","fields/number.jsx","fields/select.jsx","fields/index.js","fields/multiSelect.jsx","containers/configurator/components/preview/index.jsx","containers/configurator/index.jsx","containers/index.jsx","index.js"],"names":["uuid","n","arguments","length","undefined","replace","Math","random","toString","slice","TextFieldDefinition","Object","classCallCheck","this","FiledTypes","Page","name","label","icon","rank","Group","Text","buildDefinition","d","Number","Select","Boolean","Date","File","Field","_ref","_ref$id","id","_ref$type","type","definition","_ref$title","title","description","_ref$order","order","_ref$visibleIf","visibleIf","_ref$fields","fields","map","f","header","_ref$groups","groups","g","defaultState","selected","form","pages","setPages","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","stop","_x","apply","setGroups","page","_ref2","_callee2","_context2","_x2","setFields","group","_ref3","_callee3","_context3","_x3","selectItem","field","_ref4","_callee4","_context4","_x4","list","screen","width","height","panel","setDimensions","rect","topOffset","window","innerWidth","innerHeight","top","data","middleware","thunk","appReducer","combineReducers","configurator","state","action","objectSpread","sgPages","p","sfPages","ui","composedEnhancers","compose","applyMiddleware","concat","store","createStore","ListItem","_this$props","props","_this$props$item","item","onSelect","openPanel","_this$props$picked","picked","itemSelected","dragHandleProps","react_default","createElement","className","buttons","minimal","onClick","assign","React","Component","FieldsPanel","renderBreadcrumb","text","Classes","BREADCRUMB","BREADCRUMB_CURRENT","_this2","_this$props$fields","closePanel","menu","card","elevation","toConsumableArray","simplebar_react_esm","style","ref","el","draggable","js_default","itemKey","template","padding","springConfig","stiffness","damping","onMoveEnd","newList","i","container","connect","find","bindActionCreators","GroupsPanel","openFieldsPanel","_this","component","_this$props2","_this$props2$groups","PagesPanel","openGroupsPanel","_this$props$pages","_this$props$selected","Navigator","panelStack","initialPanel","showPanelHeader","Properties","JSON","stringify","InputField","defaultValue","_this$props$id","validate","_this$props$type","placeholder","info","extra","formik_esm","render","formGroup","helperText","labelFor","labelInfo","inputGroup","fill","TagField","onChange","value","persist","target","clearButton","disabled","_this$props2$id","_this$props2$type","tagInput","addOnBlur","tagProps","rightElement","v","values","CheckboxField","controls","checked","SwitchField","RadioField","_this$props$inline","inline","_this$props$options","options","radioGroup","selectedValue","index","key","DateField","momentFormatter","_this$props$format","format","formatDate","date","locale","moment","parseDate","str","toDate","dateInput","DateRangeField","dateRangeInput","TimeField","_this$props2$useAmPm","useAmPm","timePicker","selectAllOnFocus","FileField","possibleConstructorReturn","getPrototypeOf","call","setPendingFile","file","cb","setState","pending","setProcessedFile","filter","pend","processed","onRemove","processFile","reader","FileReader","readAsDataURL","onload","fileInfo","size","round","base64","result","bind","assertThisInitialized","_this$props2$multi","multi","_this$props2$types","types","spinner","tag_tag","rc_upload_es","accept","join","multiple","beforeUpload","fileObject","onStart","onSuccess","onProgress","onError","customRequest","uploadProps","rightIcon","NumberField","numericInput","max","MAX_SAFE_INTEGER","allowNumericCharactersOnly","onValueChange","SelectField","onItemSelect","renderOption","option","handleClick","modifiers","matchesPredicate","menuItem","active","activeOption","o","select_select","items","filterable","itemRenderer","inputProps","noResults","Fields","Input","Tag","Checkbox","Switch","Radio","DateRange","Time","MultiSelect","fieldValue","includes","fv","_","__","onClear","_this$props3","_ref4$value","shouldDismissPopover","renderTag","_ref5","_this$props4","_this$props4$id","_ref6","multiSelect","c","tagRenderer","popoverProps","tagInputProps","selectedItems","usePortal","Preview","error","onSubmit","console","log","enableReinitialize","initialValues","tag","number","is_true","switch","radio","select","validationSchema","Yup","shape","required","errors","wordBreak","FormConfigurator","updateWindowDimensions","ReactDOM","findDOMNode","getBoundingClientRect","addEventListener","removeEventListener","components_navigator","properties","preview","FormGenerator","FocusStyleManager","onlyShowFocusOnTabs","es","navbar","navbarGroup","navbarHeading","navbarDivider","MINIMAL","containers_configurator","root","document","getElementById","containers"],"mappings":"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","file":"static/js/main.4d1f9517.chunk.js","sourcesContent":["export const uuid = (n = 36) => {\n    return '00000000-0000-4000-8000-000000000000'.replace(/0/g, () => (0 | (Math.random() * 16)).toString(16)).slice(0, n);\n};\n","export class TextFieldDefinition {}\n","import { TextFieldDefinition } from './text';\n\nexport const FiledTypes = {\n    Page: { name: 'FT_PAGE', label: 'Page', icon: 'File', rank: 1000 },\n    Group: { name: 'FT_GROUP', label: 'Group', icon: 'Bookmark', rank: 900 },\n    Text: { name: 'FT_TEXT', label: 'Text', buildDefinition: d => new TextFieldDefinition(d), icon: 'Type', rank: 100 },\n    Number: {\n        name: 'FT_NUMBER',\n        label: 'Number',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'Hash',\n        rank: 100\n    },\n    Select: {\n        name: 'FT_SELECT',\n        label: 'Select',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'List',\n        rank: 100\n    },\n    Boolean: {\n        name: 'FT_BOOLEAN',\n        label: 'Checkbox',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'ToggleLeft',\n        rank: 100\n    },\n    Date: {\n        name: 'FT_DATE',\n        label: 'Date',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'Calendar',\n        rank: 100\n    },\n    File: {\n        name: 'FT_FILE',\n        label: 'File',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'Upload',\n        rank: 100\n    }\n};\n","import { uuid } from '../utilities/common';\nimport { FiledTypes } from './definitions/fieldTypes';\n\nexport class Field {\n    id;\n    title;\n    description;\n    type;\n    definition;\n    order;\n    visibleIf;\n\n    constructor({ id = uuid(), type = FiledTypes.Text, definition, title = 'New Field', description, order = 0, visibleIf = true }) {\n        this.id = id;\n        this.title = title;\n        this.description = description;\n\n        this.type = type;\n        this.definition = this.type.buildDefinition(definition);\n\n        this.order = order;\n        this.visibleIf = visibleIf;\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Field } from './field';\nimport { FiledTypes } from './definitions/fieldTypes';\n\nexport class Group {\n    id;\n    title;\n    description;\n    order;\n    visibleIf;\n    fields;\n\n    constructor({ id = uuid(), title = 'New Group', description, order = 0, visibleIf = true, fields = [] }) {\n        this.id = id;\n        this.title = title;\n        this.type = FiledTypes.Group;\n        this.description = description;\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.fields = fields.map(f => new Field(f));\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Group } from './group';\nimport { FiledTypes } from './definitions/fieldTypes';\n\nexport class Page {\n    id;\n    title;\n    type;\n    description;\n    header;\n    order;\n    visibleIf;\n    groups;\n\n    constructor({ id = uuid(), title = 'New Page', description, header, order = 0, visibleIf = true, groups = [] }) {\n        this.id = id;\n        this.title = title;\n        this.type = FiledTypes.Page;\n        this.description = description;\n        this.header = header;\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.groups = groups.map(g => new Group(g));\n    }\n}\n","import {\n    CONFIGURATOR_SELECT_ITEM,\n    CONFIGURATOR_REMOVE_ITEM,\n    CONFIGURATOR_SHOW_PROPERTIES,\n    CONFIGURATOR_SET_PAGES,\n    CONFIGURATOR_SET_GROUPS,\n    CONFIGURATOR_SET_FIELDS\n} from './actions';\nimport { TEST_PAGES } from '../testData';\n\nconst defaultState = {\n    selected: {},\n    form: undefined,\n    pages: TEST_PAGES\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        // Select item to display properties\n        case CONFIGURATOR_SELECT_ITEM:\n            return { ...state, selected: { page: action.page, group: action.group, field: action.field } };\n\n        // Assign pages\n        case CONFIGURATOR_SET_PAGES:\n            return { ...state, pages: action.pages };\n        // Assign groups\n        case CONFIGURATOR_SET_GROUPS:\n            const sgPages = state.pages.map(p => (p.id === action.page.id ? { ...p, groups: action.groups } : p));\n            return { ...state, pages: sgPages };\n        // Assign fields\n        case CONFIGURATOR_SET_FIELDS:\n            const sfPages = state.pages.map(p => {\n                return p.id === action.page.id\n                    ? {\n                          ...p,\n                          groups: p.groups.map(g => {\n                              return g.id === action.group.id ? { ...g, fields: action.fields } : g;\n                          })\n                      }\n                    : p;\n            });\n            return { ...state, pages: sfPages };\n\n        default:\n            return state;\n    }\n}\n\nexport const setPages = pages => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, pages });\n};\nexport const setGroups = (page, groups) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_GROUPS, page, groups });\n};\nexport const setFields = (page, group, fields) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_FIELDS, page, group, fields });\n};\n\nexport const selectItem = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SELECT_ITEM, page, group, field });\n};\n\n//\n// --------------------------------------------------------\n//\n\nexport const removeItem = () => async dispatch => {\n    dispatch({ type: CONFIGURATOR_REMOVE_ITEM });\n};\n\nexport const showProperties = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SHOW_PROPERTIES, page, group, field });\n};\n\nexport const setForm = form => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, form });\n};\n","import { Page } from './models/page';\nimport { Group } from './models/group';\nimport { Field } from './models/field';\n\nexport const TEST_PAGES = [\n    new Page({\n        title: 'Intro',\n        groups: [\n            new Group({\n                title: 'Personal Info',\n                fields: [new Field({ title: 'Name' }), new Field({ title: 'Email' })]\n            }),\n            new Group({\n                title: 'Location',\n                fields: [\n                    new Field({ title: 'Country' }),\n                    new Field({ title: 'City' }),\n                    new Field({ title: 'Address' }),\n                    new Field({ title: 'Post Code' })\n                ]\n            })\n        ]\n    })\n    // new Page({\n    //     title: 'Tax Details',\n    //     groups: [\n    //         new Group({ title: 'SSN', fields: [new Field({ title: 'Type' }), new Field({ title: 'Number' })] }),\n    //         new Group({\n    //             title: 'Registration',\n    //             fields: [new Field({ title: 'Date' }), new Field({ title: 'Unit' })]\n    //         })\n    //     ]\n    // }),\n    // new Page({ title: 'Documents 1' }),\n    // new Page({ title: 'Documents 2' }),\n    // new Page({ title: 'Documents 3' }),\n    // new Page({\n    //     title: 'Some extra long PAGE name',\n    //     groups: [\n    //         new Group({\n    //             title: 'Some extra long GROUP name, seriously really long name',\n    //             fields: [new Field({ title: 'Some extra long FILED name' })]\n    //         })\n    //     ]\n    // })\n];\n","export const CONFIGURATOR_SELECT_ITEM = 'CONFIGURATOR_SELECT_ITEM';\nexport const CONFIGURATOR_REMOVE_ITEM = 'CONFIGURATOR_REMOVE_ITEM';\nexport const CONFIGURATOR_SHOW_PROPERTIES = 'CONFIGURATOR_SHOW_PROPERTIES';\nexport const CONFIGURATOR_SET_FORM = 'CONFIGURATOR_SET_FORM';\nexport const CONFIGURATOR_SET_PAGES = 'CONFIGURATOR_SET_PAGES';\nexport const CONFIGURATOR_SET_GROUPS = 'CONFIGURATOR_SET_GROUPS';\nexport const CONFIGURATOR_SET_FIELDS = 'CONFIGURATOR_SET_FIELDS';\n\nexport const UI_SET_DIMENSIONS = 'UI_SET_DIMENSIONS';\n\nexport const FIELDS_SET_FIELD = 'FIELDS_SET_FIELD';\n","import { FIELDS_SET_FIELD } from './actions';\n\nconst defaultState = {\n    list: undefined\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case FIELDS_SET_FIELD:\n            return { ...state, list: action.data };\n\n        default:\n            return state;\n    }\n}\n","import { UI_SET_DIMENSIONS } from './actions';\n\nconst defaultState = {\n    screen: { width: 0, height: 0 },\n    panel: { height: 0 }\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case UI_SET_DIMENSIONS:\n            return { ...state, ...action.data };\n\n        default:\n            return state;\n    }\n}\n\nexport const setDimensions = rect => async dispatch => {\n    const screen = { width: window.innerWidth, height: window.innerHeight };\n    const topOffset = rect ? rect.top : 0;\n    const panel = { height: screen.height - topOffset - 59 };\n\n    dispatch({ type: UI_SET_DIMENSIONS, data: { screen, panel } });\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { combineReducers } from 'redux';\n\nimport configurator from './configurator';\nimport fields from './fields';\nimport ui from './ui';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    if (typeof window === 'object') {\n        const { __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ } = window;\n        if (__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && typeof __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function') {\n            enhancers.push(__REDUX_DEVTOOLS_EXTENSION_COMPOSE__());\n        }\n    }\n}\n\nconst appReducer = combineReducers({\n    configurator,\n    ui,\n    fields\n});\n\nconst rootReducer = (state, action) => appReducer(state, action);\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\nexport const store = createStore(rootReducer, initialState, composedEnhancers);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass ListItem extends React.Component {\n    render() {\n        const {\n            item: {\n                data: { title },\n                selected,\n                onSelect,\n                openPanel\n            },\n            picked = this.props.itemSelected > 0,\n            dragHandleProps\n        } = this.props;\n\n        return (\n            <div className={`fg-panel-item ${picked ? 'dragged' : ''} ${selected ? 'selected' : ''}`}>\n                <Button minimal={true} icon={selected ? 'manually-entered-data' : 'cog'} onClick={onSelect} />\n                <div className=\"item-title ellipsis\" {...dragHandleProps}>\n                    {title}\n                </div>\n                {openPanel && <Button minimal={true} icon=\"caret-right\" onClick={openPanel} />}\n            </div>\n        );\n    }\n}\n\nexport default ListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, Classes } from '@blueprintjs/core';\nimport ListItem from './item';\nimport { selectItem, setFields } from '../../../../../state/configurator';\nimport { Field } from '../../../../../models/field';\n\nclass FieldsPanel extends React.Component {\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, group, fields = [], closePanel, height, selected, selectItem, setFields } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page, group);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{group.title}</div>\n                        </div>\n                        <Button\n                            icon=\"plus\"\n                            minimal={true}\n                            onClick={() => setFields(page, group, [...fields, new Field({ title: 'New Field' })])}\n                        />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={fields.map(field => ({\n                                    id: field.id,\n                                    data: field,\n                                    selected: selected && selected.field && selected.field.id === field.id,\n                                    onSelect: () => selectItem(page, group, field)\n                                }))}\n                                onMoveEnd={newList =>\n                                    setFields(page, group, newList.map((f, i) => ({ ...f.data, order: i })))\n                                }\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const group = ((page || {}).groups || []).find(g => g.id === props.group.id);\n    const fields = (group || {}).fields;\n    return {\n        page,\n        group,\n        fields,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            selectItem,\n            setFields\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, Classes } from '@blueprintjs/core';\nimport FieldsPanel from './fields';\nimport ListItem from './item';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\nimport { Group } from '../../../../../models/group';\n\nclass GroupsPanel extends React.Component {\n    openFieldsPanel = group => {\n        const { page, openPanel } = this.props;\n        openPanel({ component: FieldsPanel, props: { page, group } });\n    };\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, groups = [], closePanel, height, selected, setGroups, selectItem } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{page.title}</div>\n                        </div>\n                        <Button\n                            icon=\"plus\"\n                            minimal={true}\n                            onClick={() => setGroups(page, [...groups, new Group({ title: 'New Group' })])}\n                        />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={groups.map(group => ({\n                                    id: group.id,\n                                    data: group,\n                                    selected: selected && selected.group && selected.group.id === group.id,\n                                    onSelect: () => selectItem(page, group),\n                                    openPanel: () => this.openFieldsPanel(group)\n                                }))}\n                                onMoveEnd={newList => setGroups(page, newList.map((g, i) => ({ ...g.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const groups = (page || {}).groups;\n    return {\n        page,\n        groups,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SimpleBar from 'simplebar-react';\nimport DraggableList from 'react-draggable-list';\nimport { Card, Menu, Button } from '@blueprintjs/core';\nimport GroupsPanel from './groups';\nimport ListItem from './item';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport { Page } from '../../../../../models/page';\n\nclass PagesPanel extends React.Component {\n    openGroupsPanel = page => {\n        const { openPanel } = this.props;\n        openPanel({ component: GroupsPanel, props: { page } });\n    };\n\n    render() {\n        const { height, pages = [], selected = {}, setPages, selectItem } = this.props;\n\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Pages</span>\n                        </div>\n                        <Button\n                            icon=\"plus\"\n                            minimal={true}\n                            onClick={() => setPages([...pages, new Page({ title: 'New Page', order: pages.length })])}\n                        />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={pages.map(page => ({\n                                    id: page.id,\n                                    data: page,\n                                    selected: selected && selected.page && selected.page.id === page.id,\n                                    onSelect: () => selectItem(page),\n                                    openPanel: () => this.openGroupsPanel(page)\n                                }))}\n                                onMoveEnd={newList => setPages(newList.map((p, i) => ({ ...p.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    pages: state.configurator.pages,\n    selected: state.configurator.selected,\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PagesPanel);\n","import React from 'react';\nimport { PanelStack } from '@blueprintjs/core';\nimport PagesPanel from './panels/pages';\n\nclass Navigator extends React.Component {\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-navigator\" style={{ height: `${height - 70}px` }}>\n                <div className=\"panel-wrapper bp3-elevation-1\">\n                    <PanelStack initialPanel={{ component: PagesPanel }} showPanelHeader={false} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navigator;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\n\nclass Properties extends React.Component {\n    render() {\n        const { height, selected = {} } = this.props;\n        const { page, group, field } = selected;\n\n        return (\n            <div className=\"configurator-properties\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1}>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Properties</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-20\">\n                            <p>{JSON.stringify(page)}</p>\n                            <p>{JSON.stringify(group)}</p>\n                            <p>{JSON.stringify(field)}</p>\n                        </div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Properties);\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, InputGroup } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass InputField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <InputGroup\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default InputField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Button, TagInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TagField extends React.Component {\n    defaultValue = [];\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: value || []\n            }\n        });\n    };\n\n    clearButton = field => {\n        const { disabled } = this.props;\n        if (field.value.length === 0) return null;\n\n        return <Button disabled={disabled} icon={'cross'} minimal={true} onClick={() => this.onChange([], field)} />;\n    };\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TagInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                addOnBlur={true}\n                                tagProps={{ minimal: true }}\n                                rightElement={this.clearButton(field)}\n                                onChange={v => this.onChange(v, field)}\n                                values={field.value || []}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TagField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass CheckboxField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Checkbox\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default CheckboxField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Switch } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SwitchField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Switch\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SwitchField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, RadioGroup, Radio } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass RadioField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, inline = true, validate, options = [], label, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            className={className}\n                        >\n                            <RadioGroup\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                label={label}\n                                onChange={field.onChange}\n                                selectedValue={field.value}\n                                className={`radio-field`}\n                                inline={inline}\n                            >\n                                {options.map(({ value, label }, index) => (\n                                    <Radio\n                                        key={index}\n                                        label={label}\n                                        value={value.toString()}\n                                        checked={field.value === value}\n                                    />\n                                ))}\n                            </RadioGroup>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default RadioField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'M/D/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <DateInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateRangeInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateRangeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'M/D/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <DateRangeInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateRangeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { TimePicker } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TimeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, useAmPm = true, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TimePicker\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                useAmPm={useAmPm}\n                                selectAllOnFocus={true}\n                                onChange={v => this.onChange(v, field)}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TimeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Spinner, Button, Tag } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\nimport Upload from 'rc-upload';\n\nimport './fields.scss';\n\nclass FileField extends React.Component {\n    defaultValue = [];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pending: [],\n            processed: []\n        };\n\n        this.setPendingFile = this.setPendingFile.bind(this);\n        this.setProcessedFile = this.setProcessedFile.bind(this);\n        this.processFile = this.processFile.bind(this);\n    }\n\n    setPendingFile = (file, cb) => {\n        this.setState({ ...this.state, pending: [...this.state.pending, file] }, cb);\n    };\n    setProcessedFile = (file, field) => {\n        const pending = [...this.state.pending.filter(pend => pend.id !== file.id)];\n        this.setState(\n            {\n                ...this.state,\n                processed: [...this.state.processed, file],\n                pending\n            },\n            () => this.onChange(this.state.processed, field)\n        );\n    };\n    onRemove = (id, field) => {\n        const processed = this.state.processed.filter(f => f.id !== id);\n        this.setState({ ...this.state, processed }, () => this.onChange(processed, field));\n    };\n\n    processFile = ({ id, file }, field) => {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            let fileInfo = {\n                id,\n                name: file.name,\n                type: file.type,\n                size: Math.round(file.size / 1000) + ' kB',\n                base64: reader.result,\n                file: file\n            };\n\n            this.setProcessedFile(fileInfo, field);\n        };\n    };\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            multi = false,\n            types = [],\n            validate,\n            label,\n            placeholder,\n            info,\n            className\n        } = this.props;\n\n        const uploadProps = field => ({\n            action: 'api uri',\n            type: 'drag',\n            accept: types.join(','),\n            multiple: multi,\n            beforeUpload: file => {\n                const fileObject = { file, id: uuid() };\n                this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n            },\n            onStart: () => null,\n            onSuccess: () => null,\n            onProgress: () => null,\n            onError: () => null,\n            customRequest: () => null\n        });\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <div>\n                                {this.state.pending.length > 0 && <Spinner size={15} />}\n                                {this.state.processed.map((p, i) => (\n                                    <Tag\n                                        key={i}\n                                        minimal={true}\n                                        onRemove={() => this.onRemove(p.id, field)}\n                                        fill={true}\n                                        className=\"mg-b-5\"\n                                    >\n                                        {p.name}\n                                    </Tag>\n                                ))}\n                                <Upload\n                                    {...uploadProps(field)}\n                                    beforeUpload={file => {\n                                        const fileObject = { file, id: uuid() };\n                                        this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n                                    }}\n                                >\n                                    <Button rightIcon=\"upload\" text={placeholder} />\n                                </Upload>\n                            </div>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default FileField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, NumericInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass NumberField extends React.Component {\n    defaultValue = 0;\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <NumericInput\n                                max={Number.MAX_SAFE_INTEGER}\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                placeholder={placeholder}\n                                fill={true}\n                                allowNumericCharactersOnly={false}\n                                onValueChange={v => this.onChange(v, field)}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default NumberField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { Select } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = ({ value }, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    renderOption = (option, { handleClick, modifiers }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                className=\"fg-field-fill\"\n                active={modifiers.active}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n            />\n        );\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    const activeOption = options.find(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Select\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                itemRenderer={this.renderOption}\n                                className=\"fg-field-fill\"\n                                inputProps={{ className: 'fg-field-fill' }}\n                                noResults={<MenuItem disabled={true} text=\"-\" />}\n                                onItemSelect={v => this.onItemSelect(v, field)}\n                            >\n                                <Button\n                                    rightIcon=\"caret-down\"\n                                    text={activeOption ? activeOption.label : placeholder}\n                                    className=\"fg-field-fill space-between\"\n                                />\n                            </Select>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SelectField;\n","import InputField from './input';\nimport TagField from './tag';\nimport CheckboxField from './checkbox';\nimport SwitchField from './switch';\nimport RadioField from './radio';\nimport DateField from './date';\nimport DateRangeField from './dateRange';\nimport TimeField from './time';\nimport FileField from './file';\nimport NumberField from './number';\nimport SelectField from './select';\nimport MultiSelectField from './multiSelect';\n\nexport const Fields = {\n    Input: InputField,\n    Tag: TagField,\n    Checkbox: CheckboxField,\n    Switch: SwitchField,\n    Radio: RadioField,\n    Date: DateField,\n    DateRange: DateRangeField,\n    Time: TimeField,\n    File: FileField,\n    Number: NumberField,\n    Select: SelectField,\n    MultiSelect: MultiSelectField\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass MultiSelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = ({ value }, field) => {\n        const { id, name } = this.props;\n        const fieldValue = field.value || [];\n        const values = fieldValue.includes(value) ? fieldValue.filter(fv => fv !== value) : [...fieldValue, value];\n\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onRemove = (_, index, field) => {\n        const { id, name } = this.props;\n        const values = (field.value || []).filter((__, i) => i !== index);\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onClear = ({ onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: []\n            }\n        });\n    };\n\n    renderOption = (option, { handleClick, modifiers }, { value = [] }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                icon={value.includes(option.value) ? 'tick' : 'blank'}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n                shouldDismissPopover={false}\n            />\n        );\n    };\n\n    renderTag = (value, { tagProps, onRemove, rightElement }) => {\n        const { options } = this.props;\n        return (options.find(o => o.value === value) || {}).label;\n    };\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    // const selectedOptions = options.filter(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <MultiSelect\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                placeholder={placeholder}\n                                itemRenderer={(o, c) => this.renderOption(o, c, field)}\n                                tagRenderer={this.renderTag}\n                                popoverProps={{\n                                    className: 'fg-field-fill'\n                                }}\n                                tagInputProps={{\n                                    className: 'fg-field-fill',\n                                    tagProps: { minimal: true },\n                                    onRemove: (_, index) => this.onRemove(_, index, field),\n                                    rightElement:\n                                        !!field.value && field.value.length > 0 ? (\n                                            <Button icon=\"cross\" minimal={true} onClick={() => this.onClear(field)} />\n                                        ) : (\n                                            undefined\n                                        )\n                                }}\n                                noResults={<MenuItem disabled={true} text=\"No results.\" />}\n                                onItemSelect={v => this.onItemSelect(v, field)}\n                                selectedItems={field.value || []}\n                                usePortal={false}\n                                inline={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default MultiSelectField;\n","import React from 'react';\nimport { Card } from '@blueprintjs/core';\nimport { Fields } from '../../../../fields';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport SimpleBar from 'simplebar-react';\n\nclass Preview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    validate = value => {\n        let error;\n        if (!value || value === '') {\n            error = 'Required';\n        }\n        return error;\n    };\n\n    onSubmit = values => {\n        console.log(values);\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-preview\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1}>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Preview</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-20\">\n                            <Formik\n                                enableReinitialize={true}\n                                initialValues={{\n                                    text: '',\n                                    tag: [],\n                                    number: 0.0,\n                                    is_true: false,\n                                    switch: false,\n                                    radio: '',\n                                    select: null\n                                }}\n                                validationSchema={Yup.object().shape({\n                                    select: Yup.mixed().required('Required')\n                                })}\n                                onSubmit={this.onSubmit}\n                                render={({ values, errors }) => {\n                                    return (\n                                        <Form>\n                                            <div className=\"fg-field-wrapper\">\n                                                <Fields.Input\n                                                    name={'text'}\n                                                    label={'text'}\n                                                    placeholder={'placeholder'}\n                                                    className=\"fg-field width-40\"\n                                                />\n                                                <Fields.Tag\n                                                    name={'tag'}\n                                                    label={'tag'}\n                                                    placeholder={'placeholder'}\n                                                    className=\"fg-field width-60\"\n                                                />\n                                                <Fields.Checkbox\n                                                    name={'is_true'}\n                                                    label={'Is true'}\n                                                    placeholder={'is true'}\n                                                    className=\"fg-field width-50\"\n                                                />\n\n                                                <Fields.Radio\n                                                    name={'radio'}\n                                                    label={'radio'}\n                                                    options={[\n                                                        { value: 1, label: 'one' },\n                                                        { value: 2, label: 'two' },\n                                                        { value: 3, label: 'three' }\n                                                    ]}\n                                                    className=\"fg-field width-50\"\n                                                />\n                                                <Fields.Switch\n                                                    name={'switch'}\n                                                    label={'Is on'}\n                                                    placeholder={'is on'}\n                                                    className=\"fg-field width-20\"\n                                                />\n                                                <Fields.Number\n                                                    name={'number'}\n                                                    label={'number'}\n                                                    placeholder={'placeholder'}\n                                                    className=\"fg-field width-30\"\n                                                />\n                                                <Fields.Time\n                                                    name={'time'}\n                                                    label={'time'}\n                                                    className=\"fg-field width-25\"\n                                                />\n                                                <Fields.Date\n                                                    name={'date'}\n                                                    label={'date'}\n                                                    className=\"fg-field width-25\"\n                                                />\n                                                <Fields.DateRange\n                                                    name={'date_range'}\n                                                    label={'date range'}\n                                                    className=\"fg-field width-100\"\n                                                />\n                                                <Fields.Select\n                                                    name={'select'}\n                                                    label={'select'}\n                                                    info={\n                                                        \"(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.)\"\n                                                    }\n                                                    options={[\n                                                        { value: 1, label: 'one' },\n                                                        { value: 2, label: 'two' },\n                                                        { value: 3, label: 'three' }\n                                                    ]}\n                                                    placeholder={'select one option'}\n                                                    className=\"fg-field width-50\"\n                                                />\n                                                <Fields.MultiSelect\n                                                    name={'multi_select'}\n                                                    label={'multi select'}\n                                                    info={'(select some options, multiple if applicable)'}\n                                                    options={[\n                                                        { value: 1, label: 'one' },\n                                                        { value: 2, label: 'two' },\n                                                        { value: 3, label: 'three' }\n                                                    ]}\n                                                    placeholder={'select options'}\n                                                    className=\"fg-field width-50\"\n                                                />\n                                                <Fields.File\n                                                    name={'file'}\n                                                    label={'file'}\n                                                    multi={true}\n                                                    placeholder={'put some files'}\n                                                    className=\"fg-field width-100\"\n                                                />\n                                            </div>\n                                            <p style={{ wordBreak: 'break-all' }}>{JSON.stringify(values)}</p>\n                                            <p style={{ wordBreak: 'break-all' }}>{JSON.stringify(errors)}</p>\n                                            <button type=\"submit\">submit</button>\n                                        </Form>\n                                    );\n                                }}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Preview;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Navigator from './components/navigator';\nimport Properties from './components/properties';\nimport Preview from './components/preview';\nimport { setDimensions } from '../../state/ui';\n\nimport 'simplebar/dist/simplebar.min.css';\nimport './configurator.scss';\n\nclass FormConfigurator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        const { setDimensions } = this.props;\n        var rect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n        setDimensions(rect);\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-wrapper\">\n                <Navigator height={height} />\n                <Properties height={height} />\n                <Preview height={height} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setDimensions\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormConfigurator);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from '../state';\nimport FormConfigurator from './configurator';\nimport {\n    FocusStyleManager,\n    Navbar,\n    NavbarGroup,\n    NavbarDivider,\n    NavbarHeading,\n    Button,\n    Classes\n} from '@blueprintjs/core';\n\nclass FormGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        FocusStyleManager.onlyShowFocusOnTabs();\n\n        return (\n            <Provider store={store}>\n                <div className=\"form-generator\">\n                    <Navbar className=\"fg-navbar\">\n                        <NavbarGroup>\n                            <NavbarHeading>Form Generator</NavbarHeading>\n                            <NavbarDivider />\n                            <Button className={Classes.MINIMAL} icon=\"floppy-disk\" text=\"Save\" />\n                        </NavbarGroup>\n                    </Navbar>\n                    <div className=\"stage\">\n                        <FormConfigurator />\n                    </div>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default FormGenerator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FormGenerator from './containers';\n\nimport './styles/root.scss';\n\nconst root = document.getElementById('root');\nReactDOM.render(<FormGenerator />, root);\n"],"sourceRoot":""}