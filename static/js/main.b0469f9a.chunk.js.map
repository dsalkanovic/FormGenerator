{"version":3,"sources":["utilities/common.jsx","fields/input.jsx","fields/tag.jsx","fields/checkbox.jsx","fields/switch.jsx","fields/radio.jsx","fields/date.jsx","fields/dateRange.jsx","fields/time.jsx","fields/file.jsx","fields/number.jsx","fields/slider.jsx","fields/select.jsx","fields/index.js","fields/multiSelect.jsx","models/definitions/text.jsx","models/definitions/date.jsx","models/definitions/boolean.jsx","models/definitions/select.jsx","models/definitions/file.jsx","models/definitions/fieldTypes.jsx","models/field.jsx","models/group.jsx","models/page.jsx","state/configurator.jsx","testData.jsx","state/actions.jsx","state/fields.jsx","state/ui.jsx","state/index.jsx","containers/configurator/components/navigator/panels/item.jsx","containers/configurator/components/navigator/panels/fields.jsx","containers/configurator/components/navigator/panels/groups.jsx","containers/configurator/components/navigator/panels/pages.jsx","containers/configurator/components/navigator/index.jsx","containers/configurator/components/properties/forms/field.jsx","utilities/constants.jsx","containers/configurator/components/properties/forms/group.jsx","containers/configurator/components/properties/components/propertiesGroup.jsx","containers/configurator/components/properties/forms/page.jsx","containers/configurator/components/properties/index.jsx","containers/renderer/components/buttons.jsx","containers/renderer/components/field.jsx","containers/renderer/components/group.jsx","containers/renderer/components/page.jsx","containers/renderer/index.jsx","containers/configurator/components/preview/index.jsx","containers/configurator/index.jsx","containers/index.jsx","renderedForm.jsx","index.js"],"names":["uuid","n","arguments","length","undefined","replace","Math","random","toString","slice","isEmpty","string","distinct","value","index","self","indexOf","InputField","defaultValue","_this$props","this","props","_this$props$id","id","name","validate","_this$props$type","type","label","placeholder","info","className","extra","react_default","a","createElement","formik_esm","render","_ref","field","formGroup","helperText","labelFor","labelInfo","inputGroup","Object","assign","onChange","e","fill","autoComplete","concat","React","Component","TagField","_callee","_ref2","submitForm","submitOnChange","_this$props$distinct","values","regenerator_default","wrap","_context","prev","next","_this","filter","persist","target","stop","clearButton","disabled","button_buttons","icon","minimal","onClick","_this2","_this$props2","_this$props2$id","_this$props2$type","_ref4","form","tagInput","addOnBlur","tagProps","rightElement","v","inputProps","CheckboxField","controls","checked","SwitchField","RadioField","_this$props$inline","inline","_this$props$options","options","radioGroup","selectedValue","map","key","DateField","momentFormatter","formatDate","_this$props$format","format","date","moment","parseDate","str","toDate","_this$props2$min","min","add","_this$props2$max","max","dateInput","minDate","maxDate","timePrecision","onKeyDown","preventDefault","DateRangeField","locale","dateRangeInput","TimeField","_this$props2$useAmPm","useAmPm","timePicker","selectAllOnFocus","FileField","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setPendingFile","file","cb","setState","objectSpread","state","pending","toConsumableArray","setProcessedFile","pend","processed","onRemove","f","processFile","reader","FileReader","readAsDataURL","onload","fileInfo","size","round","base64","result","bind","assertThisInitialized","_this$props2$multi","multi","_this$props2$types","types","_ref3","spinner","p","i","tag_tag","rc_upload_es","action","accept","join","multiple","beforeUpload","fileObject","onStart","onSuccess","onProgress","onError","customRequest","uploadProps","rightIcon","text","NumberField","numericInput","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","allowNumericCharactersOnly","onValueChange","SliderField","_this$props$submitOnC","_this$props2$extra","stepSize","labelStepSize","_this$props2$disabled","slider","vertical","SelectField","onItemSelect","renderOption","option","_ref5","handleClick","modifiers","matchesPredicate","menuItem","active","_ref6","activeOption","find","o","select_select","items","filterable","itemRenderer","noResults","Fields","Input","Tag","Checkbox","Switch","Radio","Date","DateRange","Time","File","Slider","Select","MultiSelect","fieldValue","includes","fv","_","__","onClear","_this$props3","_ref4$value","shouldDismissPopover","renderTag","_this$props4","_this$props4$id","multiSelect","c","tagRenderer","popoverProps","tagInputProps","selectedItems","usePortal","TextFieldDefinition","_ref$defaultValue","_ref$validation","validation","_ref$isRequired","isRequired","_ref$mask","mask","getValidationFunction","validationFunc","definition","getProperties","getPropertyFields","_ref2$validation","_ref2$isRequired","Yup","required","validator","email","zip","test","val","ssn","matches","message","excludeEmptyString","Fragment","DateFieldDefinition","_ref$format","BooleanFieldDefinition","SelectFieldDefinition","_ref$options","_field$definition","_field$definition$opt","FileFieldDefinition","_ref$isMulti","isMulti","_ref$buttonLabel","buttonLabel","FieldTypeDefinitions","Page","rank","Group","Text","buildDefinition","d","Boolean","FieldTypes","Field","_ref$id","property","_ref$type","_ref$definition","_ref$width","width","mobile","desktop","_ref$title","title","_ref$description","description","_ref$order","order","_ref$visibleIf","visibleIf","typeDefinition","Map","ftd","buildTypeDefinitionDetails","_ref$block","block","_ref$fields","fields","page","_page$id","_page$title","_page$description","_page$header","header","_page$order","_page$visibleIf","_page$groups","groups","_page$buttons","buttons","image","show","showProgress","g","cancel","back","save","defaultState","selected","pages","setPages","asyncToGenerator","mark","dispatch","_x","apply","setGroups","_callee2","_context2","_x2","setFields","group","_callee3","_context3","_x3","selectItem","_callee4","_context4","_x4","list","screen","height","panel","setDimensions","rect","topOffset","window","innerWidth","innerHeight","top","data","middleware","thunk","appReducer","combineReducers","configurator","sgPages","sfPages","ui","composedEnhancers","compose","applyMiddleware","store","createStore","ListItem","_this$props$item","item","_this$props$item$data","_this$props$item$data2","onSelect","openPanel","_this$props$picked","picked","itemSelected","dragHandleProps","FieldsPanel","addField","_this$props$fields","newField","renderBreadcrumb","Classes","BREADCRUMB","BREADCRUMB_CURRENT","_this$props2$fields","_this$props2$selected","_this$props3$group","_this$props3$fields","closePanel","menu","card","elevation","popover","content","toArray","slicedToArray","_ref2$","tooltip","hoverOpenDelay","simplebar_react_esm","style","ref","el","draggable","js_default","itemKey","template","padding","springConfig","stiffness","damping","onMoveEnd","newList","container","connect","bindActionCreators","GroupsPanel","addGroup","_this$props$groups","newGroup","openFieldsPanel","component","_this$props3$groups","_this$props3$selected","_this$props4$groups","PagesPanel","addPage","_this$props$pages","newPage","openGroupsPanel","_this$props2$pages","_this$props3$pages","Navigator","panelStack","initialPanel","showPanelHeader","FieldProperties","onSubmit","enableReinitialize","initialValues","validationSchema","shape","handleChange","getFieldProperties","intent","safeVariablePattern","GroupProperties","PropertiesGroup","toggle","open","children","PageProperties","propertiesGroup","Properties","renderPropertiesForm","_this$props$selected","forms_field","forms_group","forms_page","FormButtons","_this$props$buttons","Intent","SUCCESS","FieldRenderer","getFieldName","getField","_this$props2$field","_this$props2$definiti","fieldProps","JSON","stringify","_this$props3$field","_this$props3$field$wi","GroupRenderer","renderFields","_this$props$group","_group$fields","_group$width","components_field","_this$props2$group","_group$width2","_group$fields2","PageRenderer","progress","borderRadius","marginBottom","backgroundImage","components_group","FromRenderer","updateWindowDimensions","console","log","getInitialValues","groupProperty","flat","forEach","getValidationSchema","pageShape","formShape","pageIndex","addEventListener","removeEventListener","_this$state","activePageOverride","isNaN","parseInt","isValid","components_page","progressBar","animate","position","components_buttons","Preview","containers_renderer","hash","FormConfigurator","ReactDOM","findDOMNode","getBoundingClientRect","components_navigator","properties","preview","FormGenerator","saveFile","blob","Blob","FileSaver","saveAs","FocusStyleManager","onlyShowFocusOnTabs","es","navbar","navbarGroup","navbarHeading","navbarDivider","history","push","process","getState","menuDivider","containers_configurator","_this$props$location$","location","_this$props$location$2","root","document","getElementById","react_router_dom","react_router","exact","path","RenderedForm"],"mappings":"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","file":"static/js/main.b0469f9a.chunk.js","sourcesContent":["export const uuid = (n = 36) => {\n    return '00000000-0000-4000-8000-000000000000'\n        .replace(/0/g, () => (0 | (Math.random() * 16)).toString(16))\n        .slice(0, n);\n};\n\nexport const isEmpty = string => {\n    return string === undefined || string === null || string === '';\n};\n\nexport const distinct = (value, index, self) => {\n    return self.indexOf(value) === index;\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, InputGroup } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass InputField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <InputGroup\n                                {...field}\n                                {...extra}\n                                onChange={e => field.onChange(e)}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                autoComplete={`${uuid()}`}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default InputField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Button, TagInput } from '@blueprintjs/core';\nimport { uuid, distinct } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TagField extends React.Component {\n    defaultValue = [];\n\n    onChange = async (value, { onChange }, { submitForm }) => {\n        const { id, name, submitOnChange, distinct: onlyUnique = false } = this.props;\n        const values = !!onlyUnique ? value.filter(distinct) : value;\n\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values || []\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    clearButton = field => {\n        const { disabled } = this.props;\n        if (!field.value || field.value.length === 0) return null;\n\n        return <Button disabled={disabled} icon={'cross'} minimal={true} onClick={() => this.onChange([], field)} />;\n    };\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field, form }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TagInput\n                                {...extra}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                addOnBlur={true}\n                                tagProps={{ minimal: true }}\n                                rightElement={this.clearButton(field)}\n                                onChange={v => this.onChange(v, field, form)}\n                                values={field.value || []}\n                                inputProps={{ name: `${name}Raw` }}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TagField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass CheckboxField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Checkbox\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default CheckboxField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Switch } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SwitchField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Switch\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SwitchField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, RadioGroup, Radio } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass RadioField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, inline = true, validate, options = [], label, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            className={className}\n                        >\n                            <RadioGroup\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                label={label}\n                                onChange={field.onChange}\n                                selectedValue={field.value}\n                                className={`radio-field`}\n                                inline={inline}\n                            >\n                                {options.map(({ value, label }, index) => (\n                                    <Radio\n                                        key={index}\n                                        label={label}\n                                        value={value.toString()}\n                                        checked={field.value === value}\n                                    />\n                                ))}\n                            </RadioGroup>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default RadioField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateField extends React.Component {\n    defaultValue = '';\n\n    onChange = async (value, { onChange }, { submitForm }) => {\n        const { id = uuid(), name, submitOnChange } = this.props;\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: this.momentFormatter().formatDate(value)\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    momentFormatter = () => {\n        const { format = 'MM/DD/YYY' } = this.props;\n        return {\n            formatDate: date => moment(date).format(format),\n            parseDate: str => moment(str, format).toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            validate,\n            label,\n            info,\n            className,\n            min = moment()\n                .add(-1000, 'years')\n                .toDate(),\n            max = moment()\n                .add(1000, 'years')\n                .toDate()\n        } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field, form }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={`${className} fg-date-field`}\n                        >\n                            <DateInput\n                                minDate={this.momentFormatter().parseDate(min)}\n                                maxDate={this.momentFormatter().parseDate(max)}\n                                defaultValue={this.momentFormatter().parseDate(field.value)}\n                                onChange={v => this.onChange(v, field, form)}\n                                {...this.momentFormatter()}\n                                timePrecision={undefined}\n                                fill={true}\n                                inputProps={{\n                                    onKeyDown: e => {\n                                        e.preventDefault();\n                                        return false;\n                                    }\n                                }}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateRangeInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateRangeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'MM/DD/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <DateRangeInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateRangeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { TimePicker } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TimeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, useAmPm = true, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TimePicker\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                useAmPm={useAmPm}\n                                selectAllOnFocus={true}\n                                onChange={v => this.onChange(v, field)}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TimeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Spinner, Button, Tag } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\nimport Upload from 'rc-upload';\n\nimport './fields.scss';\n\nclass FileField extends React.Component {\n    defaultValue = [];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pending: [],\n            processed: []\n        };\n\n        this.setPendingFile = this.setPendingFile.bind(this);\n        this.setProcessedFile = this.setProcessedFile.bind(this);\n        this.processFile = this.processFile.bind(this);\n    }\n\n    setPendingFile = (file, cb) => {\n        this.setState({ ...this.state, pending: [...this.state.pending, file] }, cb);\n    };\n    setProcessedFile = (file, field) => {\n        const pending = [...this.state.pending.filter(pend => pend.id !== file.id)];\n        this.setState(\n            {\n                ...this.state,\n                processed: [...this.state.processed, file],\n                pending\n            },\n            () => this.onChange(this.state.processed, field)\n        );\n    };\n    onRemove = (id, field) => {\n        const processed = this.state.processed.filter(f => f.id !== id);\n        this.setState({ ...this.state, processed }, () => this.onChange(processed, field));\n    };\n\n    processFile = ({ id, file }, field) => {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            let fileInfo = {\n                id,\n                name: file.name,\n                type: file.type,\n                size: Math.round(file.size / 1000) + ' kB',\n                base64: reader.result,\n                file: file\n            };\n\n            this.setProcessedFile(fileInfo, field);\n        };\n    };\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            multi = false,\n            types = [],\n            validate,\n            label,\n            placeholder,\n            info,\n            className\n        } = this.props;\n\n        const uploadProps = field => ({\n            action: 'api uri',\n            type: 'drag',\n            accept: types.join(','),\n            multiple: multi,\n            beforeUpload: file => {\n                const fileObject = { file, id: uuid() };\n                this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n            },\n            onStart: () => null,\n            onSuccess: () => null,\n            onProgress: () => null,\n            onError: () => null,\n            customRequest: () => null\n        });\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <div>\n                                {this.state.pending.length > 0 && <Spinner size={15} />}\n                                {this.state.processed.map((p, i) => (\n                                    <Tag\n                                        key={i}\n                                        minimal={true}\n                                        onRemove={() => this.onRemove(p.id, field)}\n                                        fill={true}\n                                        className=\"mg-b-5\"\n                                    >\n                                        {p.name}\n                                    </Tag>\n                                ))}\n                                <Upload\n                                    {...uploadProps(field)}\n                                    beforeUpload={file => {\n                                        const fileObject = { file, id: uuid() };\n                                        this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n                                    }}\n                                >\n                                    <Button rightIcon=\"upload\" text={placeholder} />\n                                </Upload>\n                            </div>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default FileField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, NumericInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass NumberField extends React.Component {\n    defaultValue = 0;\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <NumericInput\n                                min={Number.MIN_SAFE_INTEGER}\n                                max={Number.MAX_SAFE_INTEGER}\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                placeholder={placeholder}\n                                fill={true}\n                                allowNumericCharactersOnly={false}\n                                onValueChange={v => this.onChange(v, field)}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default NumberField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Slider } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SliderField extends React.Component {\n    defaultValue = 0;\n\n    onChange = async (value, { onChange }, { submitForm }) => {\n        const { id, name, submitOnChange = false } = this.props;\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            label,\n            info,\n            className,\n            extra = { min: 1, max: 100, stepSize: 1, labelStepSize: 100 },\n            disabled = false\n        } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field, form }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Slider\n                                disabled={disabled}\n                                {...field}\n                                {...extra}\n                                onChange={v => this.onChange(v, field, form)}\n                                value={field.value}\n                                vertical={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SliderField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { Select } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = async ({ value }, { onChange }, { submitForm }) => {\n        const { id, name, submitOnChange } = this.props;\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    renderOption = (option, { handleClick, modifiers }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                className=\"fg-field-fill\"\n                active={modifiers.active}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n            />\n        );\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field, form }) => {\n                    const activeOption = options.find(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Select\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                itemRenderer={this.renderOption}\n                                className=\"fg-field-fill\"\n                                inputProps={{ className: 'fg-field-fill' }}\n                                noResults={<MenuItem disabled={true} text=\"-\" />}\n                                onItemSelect={v => this.onItemSelect(v, field, form)}\n                            >\n                                <Button\n                                    rightIcon=\"caret-down\"\n                                    text={activeOption ? activeOption.label : placeholder}\n                                    className=\"fg-field-fill space-between\"\n                                />\n                            </Select>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SelectField;\n","import InputField from './input';\nimport TagField from './tag';\nimport CheckboxField from './checkbox';\nimport SwitchField from './switch';\nimport RadioField from './radio';\nimport DateField from './date';\nimport DateRangeField from './dateRange';\nimport TimeField from './time';\nimport FileField from './file';\nimport NumberField from './number';\nimport SliderField from './slider';\nimport SelectField from './select';\nimport MultiSelectField from './multiSelect';\n\nexport const Fields = {\n    Input: InputField,\n    Tag: TagField,\n    Checkbox: CheckboxField,\n    Switch: SwitchField,\n    Radio: RadioField,\n    Date: DateField,\n    DateRange: DateRangeField,\n    Time: TimeField,\n    File: FileField,\n    Number: NumberField,\n    Slider: SliderField,\n    Select: SelectField,\n    MultiSelect: MultiSelectField\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass MultiSelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = ({ value }, field) => {\n        const { id, name } = this.props;\n        const fieldValue = field.value || [];\n        const values = fieldValue.includes(value) ? fieldValue.filter(fv => fv !== value) : [...fieldValue, value];\n\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onRemove = (_, index, field) => {\n        const { id, name } = this.props;\n        const values = (field.value || []).filter((__, i) => i !== index);\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onClear = ({ onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: []\n            }\n        });\n    };\n\n    renderOption = (option, { handleClick, modifiers }, { value = [] }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                icon={value.includes(option.value) ? 'tick' : 'blank'}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n                shouldDismissPopover={false}\n            />\n        );\n    };\n\n    renderTag = (value, { tagProps, onRemove, rightElement }) => {\n        const { options } = this.props;\n        return (options.find(o => o.value === value) || {}).label;\n    };\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <MultiSelect\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                placeholder={placeholder}\n                                itemRenderer={(o, c) => this.renderOption(o, c, field)}\n                                tagRenderer={this.renderTag}\n                                popoverProps={{\n                                    className: 'fg-field-fill'\n                                }}\n                                tagInputProps={{\n                                    className: 'fg-field-fill',\n                                    tagProps: { minimal: true },\n                                    onRemove: (_, index) => this.onRemove(_, index, field),\n                                    rightElement:\n                                        !!field.value && field.value.length > 0 ? (\n                                            <Button icon=\"cross\" minimal={true} onClick={() => this.onClear(field)} />\n                                        ) : (\n                                            undefined\n                                        )\n                                }}\n                                noResults={<MenuItem disabled={true} text=\"No results.\" />}\n                                onItemSelect={v => this.onItemSelect(v, field)}\n                                selectedItems={field.value || []}\n                                usePortal={false}\n                                inline={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default MultiSelectField;\n","import React from 'react';\nimport { Fields } from '../../fields';\nimport * as Yup from 'yup';\n\nexport class TextFieldDefinition {\n    defaultValue;\n    validation;\n    isRequired;\n    mask;\n\n    constructor({ defaultValue = '', validation = undefined, isRequired = false, mask = '' }) {\n        this.defaultValue = defaultValue;\n        this.validation = validation;\n        this.isRequired = isRequired;\n        this.mask = mask;\n    }\n\n    static getValidationFunction = field => validationFunc(field.definition);\n    static getProperties = field => getPropertyFields(field);\n}\n\nconst validationFunc = ({ validation = undefined, isRequired = false }) => {\n    if (!validation && !isRequired) return undefined;\n    if (!validation && !!isRequired) return Yup.string().required();\n\n    const validators = {\n        email: Yup.string().email(),\n        zip: Yup.string().test('len', 'Must be exactly 5 characters', val => val.length === 5),\n        ssn: Yup.string().matches(/^[0-9]{3}-?[0-9]{2}-?[0-9]{4}$/, {\n            message: 'Invalid Social Security Number.',\n            excludeEmptyString: true\n        })\n    };\n\n    const validator = validators[validation];\n    return isRequired ? validator.required() : validator;\n};\n\nconst validationOptions = () => {\n    return [{ value: 'email', label: 'Email' }, { value: 'zip', label: 'ZIP' }, { value: 'ssn', label: 'SSN' }];\n};\n\nconst getPropertyFields = field => {\n    return (\n        <React.Fragment>\n            <Fields.Input\n                name={'definition.defaultValue'}\n                label={'Default value'}\n                placeholder={'Default value'}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Checkbox\n                name={'definition.isRequired'}\n                placeholder={'Is Required ?'}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Select\n                name={'definition.validation'}\n                placeholder={'Validation'}\n                submitOnChange={true}\n                options={validationOptions()}\n                className=\"fg-field width-100\"\n            />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { Fields } from '../../fields';\nimport * as Yup from 'yup';\nimport moment from 'moment';\n\nexport class DateFieldDefinition {\n    format;\n    defaultValue;\n    min;\n    max;\n\n    constructor({ defaultValue, format = 'MM/DD/YYYY', min, max }) {\n        this.format = format;\n        this.defaultValue =\n            defaultValue !== undefined && defaultValue !== null && defaultValue !== ''\n                ? defaultValue\n                : moment().format(format);\n        this.min =\n            min !== undefined && min !== null && min !== ''\n                ? min\n                : moment()\n                      .add(-100, 'years')\n                      .format(format);\n        this.max =\n            max !== undefined && max !== null && max !== ''\n                ? max\n                : moment()\n                      .add(100, 'years')\n                      .format(format);\n    }\n\n    static getValidationFunction = field => validationFunc(field.definition);\n    static getProperties = field => getPropertyFields(field);\n}\n\nconst validationFunc = ({ isRequired = false }) => (!!isRequired ? Yup.string().required() : undefined);\n\nconst getPropertyFields = field => {\n    const {\n        definition: { format }\n    } = field;\n\n    return (\n        <React.Fragment>\n            <Fields.Date\n                name={'definition.defaultValue'}\n                label={'Default value'}\n                format={format}\n                submitOnChange={true}\n                placeholder={'Default value'}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Date\n                name={'definition.min'}\n                label={'Earliest'}\n                format={format}\n                submitOnChange={true}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Date\n                name={'definition.max'}\n                label={'Latest'}\n                format={format}\n                submitOnChange={true}\n                className=\"fg-field width-100\"\n            />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { Fields } from '../../fields';\n\nexport class BooleanFieldDefinition {\n    defaultValue;\n\n    constructor({ defaultValue = false }) {\n        this.defaultValue = defaultValue;\n    }\n\n    static getProperties = f => getPropertyFields(f);\n}\n\nexport const getPropertyFields = field => {\n    return (\n        <React.Fragment>\n            <Fields.Checkbox\n                name={'definition.defaultValue'}\n                placeholder={'Default value'}\n                className=\"fg-field width-100\"\n            />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { Fields } from '../../fields';\nimport * as Yup from 'yup';\n\nexport class SelectFieldDefinition {\n    isRequired;\n    defaultValue;\n    options;\n\n    constructor({ isRequired = false, defaultValue = '', options = [] }) {\n        this.isRequired = isRequired;\n        this.defaultValue = defaultValue;\n        this.options = options;\n    }\n\n    static getValidationFunction = field => validationFunc(field.definition);\n    static getProperties = field => getPropertyFields(field);\n}\n\nconst validationFunc = ({ isRequired = false }) => (!!isRequired ? Yup.string().required() : undefined);\n\nconst getPropertyFields = field => {\n    const { definition: { options = [] } = {} } = field;\n    return (\n        <React.Fragment>\n            <Fields.Select\n                name={'definition.defaultValue'}\n                placeholder={'Default value'}\n                options={!!options && options.length > 0 ? options.map(o => ({ value: o, label: o })) : []}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Checkbox\n                name={'definition.isRequired'}\n                placeholder={'Is Required ?'}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Tag\n                name={'definition.options'}\n                label={'Options'}\n                placeholder={'Options'}\n                distinct={true}\n                submitOnChange={true}\n                className=\"fg-field width-100\"\n            />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { Fields } from '../../fields';\nimport * as Yup from 'yup';\n\nexport class FileFieldDefinition {\n    isRequired;\n    isMulti;\n    buttonLabel;\n\n    constructor({ isRequired = false, isMulti = false, buttonLabel = 'Choose ...' }) {\n        this.isRequired = isRequired;\n        this.isMulti = isMulti;\n        this.buttonLabel = buttonLabel;\n    }\n\n    static getValidationFunction = field => validationFunc(field.definition);\n    static getProperties = field => getPropertyFields(field);\n}\n\nconst validationFunc = ({ isRequired = false }) => (!!isRequired ? Yup.string().required() : undefined);\n\nconst getPropertyFields = field => {\n    return (\n        <React.Fragment>\n            <Fields.Input\n                name={'definition.buttonLabel'}\n                label={'Button text'}\n                placeholder={'Button text'}\n                className=\"fg-field width-100\"\n            />\n            <Fields.Checkbox\n                name={'definition.isMulti'}\n                placeholder={'Allow multiple files ?'}\n                className=\"fg-field width-100 mg-b-0\"\n            />\n            <Fields.Checkbox\n                name={'definition.isRequired'}\n                placeholder={'Is Required ?'}\n                className=\"fg-field width-100\"\n            />\n        </React.Fragment>\n    );\n};\n","import { Map } from 'immutable';\nimport { TextFieldDefinition } from './text';\nimport { DateFieldDefinition } from './date';\nimport { BooleanFieldDefinition } from './boolean';\nimport { SelectFieldDefinition } from './select';\nimport { FileFieldDefinition } from './file';\n\nexport const FieldTypeDefinitions = {\n    Page: { name: 'FT_PAGE', label: 'Page', icon: 'applications', rank: 1000 },\n    Group: { name: 'FT_GROUP', label: 'Group', icon: 'application', rank: 900 },\n    Text: {\n        name: 'FT_TEXT',\n        label: 'Text',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'new-text-box',\n        rank: 100\n    },\n    Number: {\n        name: 'FT_NUMBER',\n        label: 'Number',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'numerical',\n        rank: 100\n    },\n    Select: {\n        name: 'FT_SELECT',\n        label: 'Select',\n        buildDefinition: d => new SelectFieldDefinition(d),\n        icon: 'property',\n        rank: 100\n    },\n    Boolean: {\n        name: 'FT_BOOLEAN',\n        label: 'Checkbox',\n        buildDefinition: d => new BooleanFieldDefinition(d),\n        icon: 'form',\n        rank: 100\n    },\n    Date: {\n        name: 'FT_DATE',\n        label: 'Date',\n        buildDefinition: d => new DateFieldDefinition(d),\n        icon: 'calendar',\n        rank: 100\n    },\n    File: {\n        name: 'FT_FILE',\n        label: 'File',\n        buildDefinition: d => new FileFieldDefinition(d),\n        icon: 'cloud-upload',\n        rank: 100\n    }\n};\n\nexport const FieldTypes = {\n    Page: 'FT_PAGE',\n    Group: 'FT_GROUP',\n    Text: 'FT_TEXT',\n    Number: 'FT_NUMBER',\n    Select: 'FT_SELECT',\n    Boolean: 'FT_BOOLEAN',\n    Date: 'FT_DATE',\n    File: 'FT_FILE'\n};\n\nexport const buildTypeDefinitionDetails = (type, definition) => {\n    const typeDefinition = new Map(FieldTypeDefinitions).find(ftd => ftd.name === type) || {};\n    const { icon, buildDefinition } = typeDefinition;\n    return { icon, ...(!!buildDefinition ? buildDefinition(definition) : {}) };\n};\n\nexport const getFieldTypeMenuItems = () => {\n    return new Map(FieldTypeDefinitions)\n        .toArray()\n        .map(([_, { name, label, icon }]) => ({ name, label, icon }))\n        .filter(f => ![FieldTypes.Page, FieldTypes.Group].includes(f.name));\n};\n\nexport const getFieldProperties = field => {\n    switch (field.type) {\n        case FieldTypes.Text:\n            return TextFieldDefinition.getProperties(field);\n        case FieldTypes.Date:\n            return DateFieldDefinition.getProperties(field);\n        case FieldTypes.Boolean:\n            return BooleanFieldDefinition.getProperties(field);\n        case FieldTypes.Select:\n            return SelectFieldDefinition.getProperties(field);\n        case FieldTypes.File:\n            return FileFieldDefinition.getProperties(field);\n\n        case FieldTypes.Number:\n        default:\n            return null;\n    }\n};\n\nexport const getValidationFunction = field => {\n    switch (field.type) {\n        case FieldTypes.Text:\n            return TextFieldDefinition.getValidationFunction(field);\n        case FieldTypes.Date:\n            return DateFieldDefinition.getValidationFunction(field);\n        case FieldTypes.Select:\n            return SelectFieldDefinition.getValidationFunction(field);\n        case FieldTypes.File:\n            return FileFieldDefinition.getValidationFunction(field);\n\n        case FieldTypes.Boolean:\n        case FieldTypes.Number:\n        default:\n            return undefined;\n    }\n};\n","import { uuid } from '../utilities/common';\nimport { FieldTypes, buildTypeDefinitionDetails } from './definitions/fieldTypes';\n\nexport class Field {\n    id;\n    property;\n    title;\n    description;\n    type;\n    definition;\n    width;\n    order;\n    visibleIf;\n\n    constructor({\n        id = uuid(8),\n        property,\n        type = FieldTypes.Text,\n        definition = {},\n        width = { mobile: 100, desktop: 100 },\n        title = 'New Field',\n        description = '',\n        order = 0,\n        visibleIf = true\n    }) {\n        this.id = id;\n        this.property = property || `field_${id}`;\n\n        this.title = title;\n        this.description = description;\n\n        this.type = type;\n        this.definition = buildTypeDefinitionDetails(type, { ...this.definition, ...definition });\n        this.width = width;\n\n        this.order = order;\n        this.visibleIf = visibleIf;\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Field } from './field';\nimport { FieldTypes } from './definitions/fieldTypes';\n\nexport class Group {\n    id;\n    property;\n    title;\n    description;\n    block;\n    width;\n    order;\n    visibleIf;\n    fields;\n\n    constructor({\n        id = uuid(8),\n        property,\n        title = 'New Group',\n        description = '',\n        block = true,\n        width = { mobile: 100, desktop: 100 },\n        order = 0,\n        visibleIf = true,\n        fields = []\n    }) {\n        this.id = id;\n        this.property = property || `group_${id}`;\n        this.title = title;\n        this.type = FieldTypes.Group;\n        this.description = description;\n        this.block = block;\n        this.width = width;\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.fields = fields.map(f => new Field(f));\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Group } from './group';\nimport { FieldTypes } from './definitions/fieldTypes';\n\nexport class Page {\n    id;\n    property;\n    title;\n    type;\n    header;\n    order;\n    visibleIf;\n    groups;\n    buttons;\n\n    constructor(page = {}) {\n        const {\n            id = uuid(8),\n            property,\n            title = 'New Page',\n            description = '',\n            header = {},\n            order = 0,\n            visibleIf = true,\n            groups = [],\n            buttons = {}\n        } = page;\n\n        this.id = id;\n        this.property = property || `page_${id}`;\n        this.title = title;\n        this.type = FieldTypes.Page;\n        this.description = description;\n        this.header = {\n            description: '',\n            image: '',\n            show: true,\n            showProgress: true,\n            ...header\n        };\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.groups = groups.map(g => new Group(g));\n        this.buttons = {\n            cancel: { show: true, text: 'Cancel' },\n            back: { show: true, text: 'Back' },\n            save: { show: true, text: 'Save' },\n            next: { show: true, text: 'Next' },\n            ...buttons\n        };\n    }\n}\n","import {\n    CONFIGURATOR_SELECT_ITEM,\n    CONFIGURATOR_REMOVE_ITEM,\n    CONFIGURATOR_SHOW_PROPERTIES,\n    CONFIGURATOR_SET_PAGES,\n    CONFIGURATOR_SET_GROUPS,\n    CONFIGURATOR_SET_FIELDS\n} from './actions';\nimport { TEST_PAGES } from '../testData';\n\nconst defaultState = {\n    selected: {},\n    form: undefined,\n    pages: TEST_PAGES\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        // Select item to display properties\n        case CONFIGURATOR_SELECT_ITEM:\n            return { ...state, selected: { page: action.page, group: action.group, field: action.field } };\n\n        // Assign pages\n        case CONFIGURATOR_SET_PAGES:\n            return { ...state, pages: action.pages };\n        // Assign groups\n        case CONFIGURATOR_SET_GROUPS:\n            const sgPages = state.pages.map(p => (p.id === action.page.id ? { ...p, groups: action.groups } : p));\n            return { ...state, pages: sgPages };\n        // Assign fields\n        case CONFIGURATOR_SET_FIELDS:\n            const sfPages = state.pages.map(p => {\n                return p.id === action.page.id\n                    ? {\n                          ...p,\n                          groups: p.groups.map(g => {\n                              return g.id === action.group.id ? { ...g, fields: action.fields } : g;\n                          })\n                      }\n                    : p;\n            });\n            return { ...state, pages: sfPages };\n\n        default:\n            return state;\n    }\n}\n\nexport const setPages = pages => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, pages });\n};\nexport const setGroups = (page, groups) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_GROUPS, page, groups });\n};\nexport const setFields = (page, group, fields) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_FIELDS, page, group, fields });\n};\n\nexport const selectItem = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SELECT_ITEM, page, group, field });\n};\n\n//\n// --------------------------------------------------------\n//\n\nexport const removeItem = () => async dispatch => {\n    dispatch({ type: CONFIGURATOR_REMOVE_ITEM });\n};\n\nexport const showProperties = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SHOW_PROPERTIES, page, group, field });\n};\n\nexport const setForm = form => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, form });\n};\n","import { Page } from './models/page';\nimport { Group } from './models/group';\nimport { Field } from './models/field';\nimport { FieldTypes } from './models/definitions/fieldTypes';\n\nexport const TEST_PAGES = [\n    new Page({\n        title: 'Intro',\n        property: 'intro',\n        header: {\n            description:\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a rutrum tellus. Fusce ut mauris id nunc bibendum fringilla. Cras rutrum non ipsum in malesuada. Aliquam semper est vitae magna laoreet sagittis. Integer maximus blandit dictum. Fusce iaculis lacus id quam blandit rhoncus. Sed accumsan massa ac turpis congue fringilla. Etiam rutrum elit non est lacinia, ut posuere velit fringilla. Sed vehicula pharetra elit in suscipit. Phasellus nec ultrices dui. Cras lectus est, fringilla ut velit ut, commodo ullamcorper justo. Maecenas facilisis diam in ante venenatis, sit amet porta nisi auctor. Aenean a ante ut nisi efficitur lacinia.',\n            image: 'http://clipart-library.com/img/752503.jpg',\n            show: true,\n            showProgress: true\n        },\n        buttons: { next: { text: 'Lets Rock!' } },\n        groups: [\n            new Group({\n                title: 'Personal Info',\n                property: 'personal',\n                description:\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a rutrum tellus. Fusce ut mauris id nunc bibendum fringilla.',\n                width: { desktop: 100, mobile: 100 },\n                fields: [\n                    new Field({\n                        title: 'Name',\n                        property: 'name',\n                        width: { desktop: 50, mobile: 100 },\n                        definition: { isRequired: true }\n                    }),\n                    new Field({\n                        title: 'Email',\n                        property: 'email',\n                        width: { desktop: 50, mobile: 100 },\n                        definition: { validation: 'email' }\n                    }),\n                    new Field({\n                        title: 'Date of birth',\n                        property: 'dateOfBirth',\n                        width: { desktop: 50, mobile: 100 },\n                        type: FieldTypes.Date,\n                        definition: { format: 'MM/DD/YYYY' }\n                    }),\n                    new Field({\n                        title: 'Sex',\n                        property: 'sex',\n                        width: { desktop: 50, mobile: 100 },\n                        type: FieldTypes.Select,\n                        definition: { options: ['Male', 'Female', 'Other'] }\n                    }),\n                    new Field({\n                        title: 'Age',\n                        property: 'age',\n                        width: { desktop: 50, mobile: 100 },\n                        type: FieldTypes.Number\n                    }),\n                    new Field({\n                        title: 'Eligible',\n                        property: 'eligible',\n                        description: 'Is Eligible ?',\n                        width: { desktop: 50, mobile: 100 },\n                        type: FieldTypes.Boolean\n                    })\n                ]\n            }),\n            new Group({\n                title: 'Pictures',\n                property: 'images',\n                width: { desktop: 100, mobile: 100 },\n                fields: [\n                    new Field({\n                        title: 'Work',\n                        description: '(upload some work pictures)',\n                        property: 'work',\n                        type: FieldTypes.File,\n                        width: { desktop: 50, mobile: 100 },\n                        definition: { isMulti: true }\n                    }),\n                    new Field({\n                        title: 'Vacation',\n                        description: '(upload some vacation pictures)',\n                        property: 'vacation',\n                        type: FieldTypes.File,\n                        width: { desktop: 50, mobile: 100 },\n                        definition: { isMulti: true }\n                    })\n                ]\n            }),\n            new Group({\n                title: 'Location',\n                property: 'location',\n                width: { desktop: 50, mobile: 100 },\n                fields: [\n                    new Field({ title: 'Country', property: 'country' }),\n                    new Field({ title: 'City', property: 'city' })\n                ]\n            }),\n            new Group({\n                title: 'Some other group',\n                property: 'some',\n                width: { desktop: 50, mobile: 100 },\n                fields: [\n                    new Field({ title: 'Address', property: 'address' }),\n                    new Field({ title: 'Post Code', property: 'zip' })\n                ]\n            })\n        ]\n    })\n    // new Page({\n    //     title: 'Tax Details',\n    //     groups: [\n    //         new Group({ title: 'SSN', fields: [new Field({ title: 'Type' }), new Field({ title: 'Number' })] }),\n    //         new Group({\n    //             title: 'Registration',\n    //             fields: [new Field({ title: 'Date' }), new Field({ title: 'Unit' })]\n    //         })\n    //     ]\n    // }),\n    // new Page({\n    //     title: 'Lorem ipsum dolor',\n    //     groups: [\n    //         new Group({\n    //             title:\n    //                 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n    //             fields: [new Field({ title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit' })]\n    //         })\n    //     ]\n    // })\n];\n","export const CONFIGURATOR_SELECT_ITEM = 'CONFIGURATOR_SELECT_ITEM';\nexport const CONFIGURATOR_REMOVE_ITEM = 'CONFIGURATOR_REMOVE_ITEM';\nexport const CONFIGURATOR_SHOW_PROPERTIES = 'CONFIGURATOR_SHOW_PROPERTIES';\nexport const CONFIGURATOR_SET_FORM = 'CONFIGURATOR_SET_FORM';\nexport const CONFIGURATOR_SET_PAGES = 'CONFIGURATOR_SET_PAGES';\nexport const CONFIGURATOR_SET_GROUPS = 'CONFIGURATOR_SET_GROUPS';\nexport const CONFIGURATOR_SET_FIELDS = 'CONFIGURATOR_SET_FIELDS';\n\nexport const UI_SET_DIMENSIONS = 'UI_SET_DIMENSIONS';\n\nexport const FIELDS_SET_FIELD = 'FIELDS_SET_FIELD';\n","import { FIELDS_SET_FIELD } from './actions';\n\nconst defaultState = {\n    list: undefined\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case FIELDS_SET_FIELD:\n            return { ...state, list: action.data };\n\n        default:\n            return state;\n    }\n}\n","import { UI_SET_DIMENSIONS } from './actions';\n\nconst defaultState = {\n    screen: { width: 0, height: 0 },\n    panel: { height: 0 }\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case UI_SET_DIMENSIONS:\n            return { ...state, ...action.data };\n\n        default:\n            return state;\n    }\n}\n\nexport const setDimensions = rect => async dispatch => {\n    const screen = { width: window.innerWidth, height: window.innerHeight };\n    const topOffset = rect ? rect.top : 0;\n    const panel = { height: screen.height - topOffset - 59 };\n\n    dispatch({ type: UI_SET_DIMENSIONS, data: { screen, panel } });\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { combineReducers } from 'redux';\n\nimport configurator from './configurator';\nimport fields from './fields';\nimport ui from './ui';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    if (typeof window === 'object') {\n        const { __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ } = window;\n        if (__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && typeof __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function') {\n            enhancers.push(__REDUX_DEVTOOLS_EXTENSION_COMPOSE__());\n        }\n    }\n}\n\nconst appReducer = combineReducers({\n    configurator,\n    ui,\n    fields\n});\n\nconst rootReducer = (state, action) => appReducer(state, action);\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\nexport const store = createStore(rootReducer, initialState, composedEnhancers);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass ListItem extends React.Component {\n    render() {\n        const {\n            item: {\n                data: { title, definition: { icon } = {} },\n                selected,\n                onSelect,\n                openPanel\n            },\n            picked = this.props.itemSelected > 0,\n            dragHandleProps\n        } = this.props;\n\n        return (\n            <div className={`fg-panel-item ${picked ? 'dragged' : ''} ${selected ? 'selected' : ''}`}>\n                <Button minimal={true} icon={selected ? 'manually-entered-data' : 'cog'} onClick={onSelect} />\n                <div className=\"item-title ellipsis\" {...dragHandleProps}>\n                    {title}\n                </div>\n                {!!openPanel ? (\n                    <Button minimal={true} icon=\"caret-right\" onClick={openPanel} />\n                ) : (\n                    <Button className=\"fg-type-indicator\" disabled={true} icon={icon} />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, MenuItem, Popover, Classes, Tooltip } from '@blueprintjs/core';\nimport ListItem from './item';\nimport { selectItem, setFields } from '../../../../../state/configurator';\nimport { Field } from '../../../../../models/field';\nimport { getFieldTypeMenuItems } from '../../../../../models/definitions/fieldTypes';\n\nclass FieldsPanel extends React.Component {\n    componentDidMount() {\n        const { page, group, fields = [], selected: { field } = {}, selectItem } = this.props;\n        if (!field && fields.length > 0) selectItem(page, group, fields[0]);\n    }\n\n    addField = async type => {\n        const { page, group, fields = [], setFields, selectItem } = this.props;\n        const newField = new Field({ title: 'New Field', type, order: fields.length });\n        await setFields(page, group, [...fields, newField]);\n        selectItem(page, group, newField);\n    };\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, group = {}, fields = [], closePanel, height, selected, selectItem, setFields } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page, group);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{group.title}</div>\n                        </div>\n\n                        <Popover\n                            content={\n                                <Menu>\n                                    {getFieldTypeMenuItems().map(({ name, label, icon }, i) => (\n                                        <MenuItem\n                                            key={i}\n                                            icon={icon}\n                                            text={label}\n                                            onClick={() => this.addField(name)}\n                                        />\n                                    ))}\n                                </Menu>\n                            }\n                        >\n                            <Tooltip content=\"Add new field\" hoverOpenDelay={1000}>\n                                <Button minimal={true} icon=\"plus\" />\n                            </Tooltip>\n                        </Popover>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={fields.map(field => ({\n                                    id: field.id,\n                                    data: field,\n                                    selected: selected && selected.field && selected.field.id === field.id,\n                                    onSelect: () => selectItem(page, group, field)\n                                }))}\n                                onMoveEnd={newList =>\n                                    setFields(page, group, newList.map((f, i) => ({ ...f.data, order: i })))\n                                }\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const group = ((page || {}).groups || []).find(g => g.id === props.group.id);\n    const fields = (group || {}).fields;\n    return {\n        page,\n        group,\n        fields,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            selectItem,\n            setFields\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, Classes, Tooltip } from '@blueprintjs/core';\nimport FieldsPanel from './fields';\nimport ListItem from './item';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\nimport { Group } from '../../../../../models/group';\n\nclass GroupsPanel extends React.Component {\n    componentDidMount() {\n        const { page, groups = [], selected: { group } = {}, selectItem } = this.props;\n        if (!group && groups.length > 0) selectItem(page, groups[0]);\n    }\n\n    addGroup = async () => {\n        const { page, groups = [], setGroups, selectItem } = this.props;\n        const newGroup = new Group({ title: 'New Group', order: groups.length });\n        await setGroups(page, [...groups, newGroup]);\n        selectItem(page, newGroup);\n    };\n\n    openFieldsPanel = group => {\n        const { page, openPanel } = this.props;\n        openPanel({ component: FieldsPanel, props: { page, group } });\n    };\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, groups = [], closePanel, height, selected, setGroups, selectItem } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{page.title}</div>\n                        </div>\n                        <Tooltip content=\"Add new group\" hoverOpenDelay={1000}>\n                            <Button icon=\"plus\" minimal={true} onClick={this.addGroup} />\n                        </Tooltip>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={groups.map(group => ({\n                                    id: group.id,\n                                    data: group,\n                                    selected: selected && selected.group && selected.group.id === group.id,\n                                    onSelect: () => selectItem(page, group),\n                                    openPanel: () => this.openFieldsPanel(group)\n                                }))}\n                                onMoveEnd={newList => setGroups(page, newList.map((g, i) => ({ ...g.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const groups = (page || {}).groups;\n    return {\n        page,\n        groups,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SimpleBar from 'simplebar-react';\nimport DraggableList from 'react-draggable-list';\nimport { Card, Menu, Button, Tooltip } from '@blueprintjs/core';\nimport GroupsPanel from './groups';\nimport ListItem from './item';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport { Page } from '../../../../../models/page';\n\nclass PagesPanel extends React.Component {\n    componentDidMount() {\n        const { pages = [], selected: { page } = {}, selectItem } = this.props;\n        if (!page && pages.length > 0) selectItem(pages[0]);\n    }\n\n    addPage = async () => {\n        const { pages = [], setPages, selectItem } = this.props;\n        const newPage = new Page({ title: 'New Page', order: pages.length });\n        await setPages([...pages, newPage]);\n        selectItem(newPage);\n    };\n\n    openGroupsPanel = page => {\n        const { openPanel } = this.props;\n        openPanel({ component: GroupsPanel, props: { page } });\n    };\n\n    render() {\n        const { height, pages = [], selected = {}, setPages, selectItem } = this.props;\n\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Pages</span>\n                        </div>\n                        <Tooltip content=\"Add new page\" hoverOpenDelay={1000}>\n                            <Button icon=\"plus\" minimal={true} onClick={this.addPage} />\n                        </Tooltip>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={pages.map(page => ({\n                                    id: page.id,\n                                    data: page,\n                                    selected: selected && selected.page && selected.page.id === page.id,\n                                    onSelect: () => selectItem(page),\n                                    openPanel: () => this.openGroupsPanel(page)\n                                }))}\n                                onMoveEnd={newList => setPages(newList.map((p, i) => ({ ...p.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    pages: state.configurator.pages,\n    selected: state.configurator.selected,\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PagesPanel);\n","import React from 'react';\nimport { PanelStack } from '@blueprintjs/core';\nimport PagesPanel from './panels/pages';\n\nclass Navigator extends React.Component {\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-navigator\" style={{ height: `${height - 70}px` }}>\n                <div className=\"panel-wrapper bp3-elevation-1\">\n                    <PanelStack initialPanel={{ component: PagesPanel }} showPanelHeader={false} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navigator;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setFields, selectItem } from '../../../../../state/configurator';\nimport { getFieldProperties } from '../../../../../models/definitions/fieldTypes';\n\nclass FieldProperties extends React.Component {\n    onSubmit = values => {\n        const { setFields, page, group, fields = [] } = this.props;\n        setFields(page, group, [...fields.map(f => (f.id === values.id ? { ...f, ...values } : f))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setFields, page, group, fields, field } = this.props;\n        await selectItem();\n        setFields(page, group, [...fields.filter(f => f.id !== field.id)]);\n    };\n\n    render() {\n        const { page, group, field } = this.props;\n\n        return (\n            <React.Fragment>\n                <Formik\n                    key={field.id}\n                    enableReinitialize={true}\n                    initialValues={{ ...field }}\n                    validationSchema={Yup.object().shape({})}\n                    onSubmit={this.onSubmit}\n                    render={({ handleChange, submitForm, values }) => {\n                        return (\n                            <Form\n                                onChange={async e => {\n                                    await handleChange(e);\n                                    submitForm();\n                                }}\n                            >\n                                <Fields.Input\n                                    name={'title'}\n                                    label={'Title'}\n                                    placeholder={'Title'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'description'}\n                                    label={'Description'}\n                                    placeholder={'Description'}\n                                    className=\"fg-field width-100\"\n                                />\n\n                                {getFieldProperties(field)}\n\n                                <Fields.Slider\n                                    label={'Width'}\n                                    info={'(desktop)'}\n                                    name={'width.desktop'}\n                                    submitOnChange={true}\n                                    extra={{\n                                        min: 25,\n                                        max: 100,\n                                        stepSize: 5,\n                                        labelStepSize: 25\n                                    }}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Slider\n                                    label={'Width'}\n                                    info={'(mobile)'}\n                                    name={'width.mobile'}\n                                    submitOnChange={true}\n                                    extra={{\n                                        min: 25,\n                                        max: 100,\n                                        stepSize: 5,\n                                        labelStepSize: 25\n                                    }}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'property'}\n                                    label={'Property'}\n                                    info={`(${page.property}.${group.property}.${values.property})`}\n                                    placeholder={'Property'}\n                                    className=\"fg-field width-100\"\n                                />\n\n                                <div className=\"pd-15\">\n                                    <Button\n                                        type=\"button\"\n                                        intent=\"danger\"\n                                        icon=\"trash\"\n                                        text=\"Remove\"\n                                        fill={true}\n                                        onClick={this.onRemove}\n                                    />\n                                </div>\n                            </Form>\n                        );\n                    }}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    const groups = (page || {}).groups;\n    const group = (groups || []).find(g => g.id === selected.group.id);\n\n    const fields = (group || {}).fields;\n    const field = (fields || []).find(f => f.id === selected.field.id);\n\n    return {\n        selected,\n        pages,\n        page,\n        groups,\n        group,\n        fields,\n        field\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setFields,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldProperties);\n","/* eslint-disable */\nexport const safeVariablePattern = /^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\nimport { safeVariablePattern } from '../../../../../utilities/constants';\n\nclass GroupProperties extends React.Component {\n    onSubmit = values => {\n        const { setGroups, page, groups = [] } = this.props;\n        setGroups(page, [...groups.map(g => (g.id === values.id ? { ...g, ...values } : g))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setGroups, page, groups, group } = this.props;\n        await selectItem();\n        setGroups(page, [...groups.filter(g => g.id !== group.id)]);\n    };\n\n    render() {\n        const { page, group } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...group }}\n                validationSchema={Yup.object().shape({\n                    property: Yup.string()\n                        .matches(safeVariablePattern, { message: 'Invalid property name.' })\n                        .required()\n                })}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm, values }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'description'}\n                                label={'Description'}\n                                placeholder={'Description'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Checkbox\n                                name={'block'}\n                                placeholder={'Block (show as block?)'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Slider\n                                label={'Width'}\n                                info={'(desktop)'}\n                                name={'width.desktop'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100 mg-b-0\"\n                            />\n                            <Fields.Slider\n                                label={'Width'}\n                                info={'(mobile)'}\n                                name={'width.mobile'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'property'}\n                                label={'Property'}\n                                info={`(${page.property}.${values.property})`}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n                            <div className=\"pd-15\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    const groups = (page || {}).groups;\n    const group = (groups || []).find(g => g.id === selected.group.id);\n\n    return {\n        selected,\n        pages,\n        page,\n        groups,\n        group\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupProperties);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass PropertiesGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { open: !!props.open };\n    }\n\n    toggle = () => this.setState({ ...this.state, open: !this.state.open });\n\n    render() {\n        const { open } = this.state;\n        const { title, children } = this.props;\n        return (\n            <div className=\"fg-properties-group\">\n                <div className=\"fg-properties-group-header mg-x-15\">\n                    <Button\n                        fill={true}\n                        text={title}\n                        rightIcon={!!open ? 'caret-up' : 'caret-down'}\n                        onClick={this.toggle}\n                        className=\"mg-b-20\"\n                    />\n                </div>\n                {!!open && <div className=\"fg-properties-group-body\">{children}</div>}\n            </div>\n        );\n    }\n}\n\nexport default PropertiesGroup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport PropertiesGroup from '../components/propertiesGroup';\nimport { safeVariablePattern } from '../../../../../utilities/constants';\n\nclass PageProperties extends React.Component {\n    onSubmit = values => {\n        const { setPages, pages = [] } = this.props;\n        setPages([...pages.map(p => (p.id === values.id ? { ...p, ...values } : p))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setPages, pages, page } = this.props;\n        await selectItem();\n        setPages([...pages.filter(p => p.id !== page.id)]);\n    };\n\n    render() {\n        const { page } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...page }}\n                validationSchema={Yup.object().shape({\n                    property: Yup.string()\n                        .matches(safeVariablePattern, { message: 'Invalid property name.' })\n                        .required()\n                })}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <PropertiesGroup title=\"Header\">\n                                <Fields.Input\n                                    name={'header.description'}\n                                    label={'Description'}\n                                    placeholder={'Description'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'header.image'}\n                                    label={'Header Image'}\n                                    placeholder={'Url'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Checkbox\n                                    name={'header.show'}\n                                    placeholder={'Show header ?'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'header.showProgress'}\n                                    placeholder={'Show progress bar ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                            </PropertiesGroup>\n\n                            <PropertiesGroup title=\"Buttons\">\n                                <Fields.Input\n                                    name={'buttons.cancel.text'}\n                                    label={'Cancel label'}\n                                    placeholder={'Cancel label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.cancel.show'}\n                                    placeholder={'Show cancel button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n\n                                <Fields.Input\n                                    name={'buttons.back.text'}\n                                    label={'Back label'}\n                                    placeholder={'Back label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.back.show'}\n                                    placeholder={'Show back button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'buttons.save.text'}\n                                    label={'Save label'}\n                                    placeholder={'Save label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.save.show'}\n                                    placeholder={'Show save button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'buttons.next.text'}\n                                    label={'Next label'}\n                                    placeholder={'Next label'}\n                                    className=\"fg-field width-100\"\n                                />\n                            </PropertiesGroup>\n\n                            <Fields.Input\n                                name={'property'}\n                                label={'Property'}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n\n                            <div className=\"mg-x-15 mg-t-20\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    return {\n        selected,\n        pages,\n        page\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PageProperties);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\nimport FieldProperties from './forms/field';\nimport GroupProperties from './forms/group';\nimport PageProperties from './forms/page';\n\nclass Properties extends React.Component {\n    renderPropertiesForm = () => {\n        const { selected = {} } = this.props;\n        const { page, group, field } = selected;\n        if (!!field) {\n            return <FieldProperties />;\n        }\n        if (!!group) {\n            return <GroupProperties />;\n        }\n        if (!!page) {\n            return <PageProperties />;\n        }\n\n        return <div className=\"pd-20 tx-center\">Select item to show properties.</div>;\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-properties\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1}>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Properties</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-y-20 pd-x-5\">{this.renderPropertiesForm()}</div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Properties);\n","import React from 'react';\nimport { Card, Button, Intent } from '@blueprintjs/core';\n\nclass FormButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        const {\n            buttons: { cancel, back, save, next }\n        } = this.props;\n\n        return (\n            <Card elevation={0} className=\"fg-buttons\">\n                <div className=\"fg-left-buttons\">\n                    {!!cancel.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {cancel.text}\n                        </Button>\n                    )}\n                    {!!back.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {back.text}\n                        </Button>\n                    )}\n                </div>\n                <div className=\"fg-right-buttons\">\n                    {!!save.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {save.text}\n                        </Button>\n                    )}\n\n                    <Button type=\"submit\" intent={Intent.SUCCESS}>\n                        {next.text}\n                    </Button>\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default FormButtons;\n","import React from 'react';\nimport { FieldTypes } from '../../../models/definitions/fieldTypes';\nimport { Fields } from '../../../fields';\nimport { isEmpty } from '../../../utilities/common';\n\nclass FieldRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    getFieldName = () => {\n        const { page, group, field } = this.props;\n        let property = '';\n        property = isEmpty(page.property) ? property : `${page.property}`;\n        property = isEmpty(group.property) ? property : `${property}.${group.property}`;\n        property = isEmpty(field.property) ? property : `${property}.${field.property}`;\n        return property;\n    };\n\n    getField = () => {\n        const { field: { id, title, description, type } = {}, definition = {} } = this.props;\n\n        const fieldProps = {\n            id,\n            name: this.getFieldName(),\n            label: title,\n            description,\n            info: description,\n            placeholder: title,\n            className: 'fg-field-fill'\n        };\n\n        switch (type) {\n            case FieldTypes.Text:\n                return <Fields.Input {...fieldProps} />;\n\n            case FieldTypes.Number:\n                return <Fields.Number {...fieldProps} />;\n\n            case FieldTypes.File:\n                return (\n                    <Fields.File\n                        {...fieldProps}\n                        placeholder={definition.buttonLabel || title}\n                        multi={definition.isMulti}\n                    />\n                );\n\n            case FieldTypes.Boolean:\n                return <Fields.Checkbox {...fieldProps} label={description} info={''} placeholder={title} />;\n\n            case FieldTypes.Date:\n                return (\n                    <Fields.Date {...fieldProps} format={definition.format} min={definition.min} max={definition.max} />\n                );\n\n            case FieldTypes.Select:\n                return (\n                    <Fields.Select\n                        {...fieldProps}\n                        options={(definition.options || []).map(o => ({ value: o, label: o }))}\n                    />\n                );\n\n            default:\n                return (\n                    <div>\n                        <span>{title}</span> <span>{JSON.stringify(type)}</span>\n                    </div>\n                );\n        }\n    };\n\n    render() {\n        const { screen, field: { width: { desktop, mobile } } = { width: { desktop: 100, mobile: 100 } } } = this.props;\n\n        return (\n            <div className=\"fg-field-renderer\" style={{ width: `${screen.width > 500 ? desktop : mobile}%` }}>\n                {this.getField()}\n            </div>\n        );\n    }\n}\n\nexport default FieldRenderer;\n","import React from 'react';\nimport { Card } from '@blueprintjs/core';\nimport FieldRenderer from './field';\n\nclass GroupRenderer extends React.Component {\n    renderFields = () => {\n        const { page, group = {} } = this.props;\n        const { fields = [], width: { desktop } = { desktop: 100, mobile: 100 } } = group;\n\n        return (\n            <div className=\"fg-group-renderer\" style={{ width: `${desktop}%` }}>\n                <div className=\"fg-fields-wrapper pd-t-10\">\n                    {fields.map((field, i) => (\n                        <FieldRenderer key={i} page={page} group={group} field={field} definition={field.definition} />\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        const { page, group = {}, screen } = this.props;\n        const {\n            title,\n            description,\n            block,\n            width: { desktop, mobile } = { desktop: 100, mobile: 100 },\n            fields = []\n        } = group;\n\n        if (!block) return this.renderFields();\n\n        return (\n            <div className=\"fg-group-renderer\" style={{ width: `${screen.width > 500 ? desktop : mobile}%` }}>\n                <Card elevation={0} className=\"\">\n                    <div className=\"fg-group-header mg-b-20\">\n                        <h3 className=\"mg-0\">{title}</h3>\n                        {!!description && <span className=\"bp3-text-small bp3-text-muted\">{description}</span>}\n                    </div>\n                    <div className=\"fg-fields-wrapper\">\n                        {fields.map((field, i) => (\n                            <FieldRenderer\n                                key={i}\n                                screen={screen}\n                                page={page}\n                                group={group}\n                                field={field}\n                                definition={field.definition}\n                            />\n                        ))}\n                    </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default GroupRenderer;\n","import React from 'react';\nimport { Card } from '@blueprintjs/core';\nimport GroupRenderer from './group';\n\nclass PageRenderer extends React.Component {\n    render() {\n        const { progress, page, screen } = this.props;\n        const {\n            title,\n            header: { description, image, show, showProgress },\n            groups = []\n        } = page;\n\n        return (\n            <React.Fragment>\n                {progress({\n                    style: { borderRadius: !!show ? '3px 3px 0 0' : '3px', marginBottom: !!show ? '0px' : '20px' },\n                    showProgress\n                })}\n                {!!show && (\n                    <Card\n                        elevation={0}\n                        className=\"fg-renderer-header\"\n                        style={{ borderRadius: !!showProgress ? '0 0 3px 3px' : '3px' }}\n                    >\n                        {!!image && (\n                            <div\n                                className=\"fg-page-header-image\"\n                                style={{\n                                    backgroundImage: `url(${image})`,\n                                    borderRadius: !!showProgress ? '0px' : '3px 3px 0 0'\n                                }}\n                            />\n                        )}\n                        <h2 className=\"mg-0\">{title}</h2>\n                        {!!description && <span className=\"bp3-text-small bp3-text-muted\">{description}</span>}\n                    </Card>\n                )}\n                <div className=\"fg-groups-wrapper\">\n                    {groups.map((group, i) => (\n                        <GroupRenderer key={i} screen={screen} page={page} group={group} />\n                    ))}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PageRenderer;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Card, Button, ProgressBar, Popover, Menu, MenuItem } from '@blueprintjs/core';\nimport FormButtons from './components/buttons';\nimport PageRenderer from './components/page';\nimport { getValidationFunction } from '../../models/definitions/fieldTypes';\n\nimport './renderer.scss';\n\nclass FromRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pageIndex: 0, screen: undefined };\n\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ ...this.state, screen: { width: window.innerWidth, height: window.innerHeight } });\n    };\n\n    onSubmit = values => {\n        console.log(values);\n    };\n\n    getInitialValues = page => {\n        const initialValues = {};\n        if (!page) return initialValues;\n\n        const { groups = [] } = page;\n        if (!groups || groups.length === 0) return initialValues;\n\n        groups\n            .map(g => g.fields.map(f => ({ ...f, groupProperty: g.property })))\n            .flat()\n            .forEach(field => {\n                const { property, groupProperty, definition } = field;\n                initialValues[page.property] = !!initialValues[page.property] ? initialValues[page.property] : {};\n                initialValues[page.property][groupProperty] = !!initialValues[page.property][groupProperty]\n                    ? initialValues[page.property][groupProperty]\n                    : {};\n                initialValues[page.property][groupProperty][property] = definition.defaultValue;\n            });\n\n        return initialValues;\n    };\n\n    getValidationSchema = page => {\n        if (!page) return Yup.object().shape({});\n        if (!page.groups || page.groups.length === 0) return Yup.object().shape({});\n\n        const groups = page.groups\n            .map(g => ({\n                property: g.property,\n                fields: g.fields.filter(f => !!f.definition && (!!f.definition.isRequired || !!f.definition.validation))\n            }))\n            .filter(g => g.fields && g.fields.length > 0);\n\n        const pageShape = {};\n        groups.forEach(({ property, fields }) => {\n            const group = {};\n            fields.forEach(field => (group[field.property] = getValidationFunction(field)));\n            pageShape[property] = Yup.object().shape(group);\n        });\n\n        if (_.isEmpty(pageShape)) {\n            return undefined;\n        }\n\n        const formShape = {};\n        formShape[page.property] = Yup.object().shape(pageShape);\n        return Yup.object().shape(formShape);\n    };\n\n    render() {\n        const { pageIndex, screen } = this.state;\n        const { pages = [], activePageOverride } = this.props;\n        if (!screen || pages.length === 0) return null;\n\n        const index = Number.isNaN(Number.parseInt(activePageOverride)) ? pageIndex : activePageOverride;\n        const page = pages[index];\n        const initialValues = this.getInitialValues(page);\n        const validationSchema = this.getValidationSchema(page);\n\n        return (\n            <div className=\"form-renderer\">\n                <Formik\n                    key={page.id}\n                    enableReinitialize={true}\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={this.onSubmit}\n                    render={({ isValid }) => {\n                        return (\n                            <Form>\n                                <PageRenderer\n                                    screen={screen}\n                                    page={page}\n                                    progress={({ style, showProgress }) =>\n                                        !!showProgress && (\n                                            <Card elevation={0} className=\"fg-renderer-navigation\" style={style}>\n                                                <ProgressBar\n                                                    value={(index + 1) / (pages.length || 1)}\n                                                    className=\"bp3-intent-success fg-renderer-progress\"\n                                                    animate={false}\n                                                />\n                                                <Popover\n                                                    position=\"left-top\"\n                                                    content={\n                                                        <Menu>\n                                                            {pages.map((p, i) => (\n                                                                <MenuItem\n                                                                    key={i}\n                                                                    icon={i === index ? 'confirm' : 'circle'}\n                                                                    disabled={i === index}\n                                                                    text={p.title}\n                                                                />\n                                                            ))}\n                                                        </Menu>\n                                                    }\n                                                >\n                                                    <Button icon=\"menu\" minimal={true} className=\"fg-renderer-menu\" />\n                                                </Popover>\n                                            </Card>\n                                        )\n                                    }\n                                />\n                                <FormButtons buttons={page.buttons} />\n                            </Form>\n                        );\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FromRenderer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\nimport FromRenderer from '../../../renderer';\nimport { hash } from 'immutable';\n\nclass Preview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const { height, pages = [], selected: { page } = {} } = this.props;\n        const index =\n            pages.map((p, i) => (p.id === (!!page ? page.id : p.id) ? i : undefined)).find(i => i !== undefined) || 0;\n\n        return (\n            <div className=\"configurator-preview\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1} className=\"fg-panel-wrapper\">\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Preview</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-20\">\n                            <FromRenderer key={hash(pages)} pages={pages} activePageOverride={index} />\n                        </div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected,\n    pages: state.configurator.pages\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Preview);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Navigator from './components/navigator';\nimport Properties from './components/properties';\nimport Preview from './components/preview';\nimport { setDimensions } from '../../state/ui';\n\nimport 'simplebar/dist/simplebar.min.css';\nimport './configurator.scss';\n\nclass FormConfigurator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        const { setDimensions } = this.props;\n        var rect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n        setDimensions(rect);\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-wrapper\">\n                <Navigator height={height} />\n                <Properties height={height} />\n                <Preview height={height} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setDimensions\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormConfigurator);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport FileSaver from 'file-saver';\nimport { store } from '../state';\nimport FormConfigurator from './configurator';\nimport {\n    FocusStyleManager,\n    Navbar,\n    NavbarGroup,\n    NavbarDivider,\n    NavbarHeading,\n    Menu,\n    MenuItem,\n    Popover,\n    Button,\n    MenuDivider\n} from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nclass FormGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    saveFile = ({ form, pages }) => {\n        var blob = new Blob([JSON.stringify({ form, pages })], { type: 'text/plain;charset=utf-8' });\n        FileSaver.saveAs(blob, `form-${uuid(8)}.json`);\n    };\n\n    render() {\n        FocusStyleManager.onlyShowFocusOnTabs();\n\n        return (\n            <Provider store={store}>\n                <div className=\"form-generator\">\n                    <Navbar className=\"fg-navbar\">\n                        <NavbarGroup>\n                            <NavbarHeading>Form Generator</NavbarHeading>\n                            <NavbarDivider />\n                            <Popover\n                                content={\n                                    <Menu>\n                                        <MenuItem\n                                            icon=\"eye-open\"\n                                            text=\"Preview\"\n                                            onClick={() =>\n                                                this.props.history.push(`${process.env.PUBLIC_URL}/form`, {\n                                                    pages: store.getState().configurator.pages\n                                                })\n                                            }\n                                        />\n                                        <MenuItem icon=\"floppy-disk\" text=\"Save\" disabled={true} />\n                                        <MenuDivider />\n                                        <MenuItem icon=\"new-object\" text=\"New\" disabled={true} />\n                                        <MenuDivider />\n                                        <MenuItem\n                                            icon=\"export\"\n                                            text=\"Export\"\n                                            onClick={() => this.saveFile(store.getState().configurator)}\n                                        />\n                                        <MenuItem icon=\"import\" text=\"Import\" disabled={true} />\n                                    </Menu>\n                                }\n                            >\n                                <Button minimal={true} text=\"File\" />\n                            </Popover>\n                        </NavbarGroup>\n                    </Navbar>\n                    <div className=\"stage\">\n                        <FormConfigurator />\n                    </div>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default FormGenerator;\n","import React from 'react';\nimport Renderer from './containers/renderer';\n\nclass FromRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {\n            location: { state: { pages = [] } = {} }\n        } = this.props;\n\n        return (\n            <div className=\"pd-20\">\n                <Renderer pages={pages} />\n            </div>\n        );\n    }\n}\n\nexport default FromRenderer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport FormGenerator from './containers';\nimport RenderedForm from './renderedForm';\n\nimport './styles/root.scss';\n\nconst root = document.getElementById('root');\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={FormGenerator} />\n            <Route path={`${process.env.PUBLIC_URL}/form`} component={RenderedForm} />\n        </Switch>\n    </BrowserRouter>,\n    root\n);\n"],"sourceRoot":""}