{"version":3,"sources":["utilities/common.jsx","models/definitions/text.jsx","models/definitions/fieldTypes.jsx","models/field.jsx","models/group.jsx","models/page.jsx","state/configurator.jsx","testData.jsx","state/actions.jsx","state/fields.jsx","state/ui.jsx","state/index.jsx","containers/configurator/components/navigator/panels/item.jsx","containers/configurator/components/navigator/panels/fields.jsx","containers/configurator/components/navigator/panels/groups.jsx","containers/configurator/components/navigator/panels/pages.jsx","containers/configurator/components/navigator/index.jsx","fields/input.jsx","fields/tag.jsx","fields/checkbox.jsx","fields/switch.jsx","fields/radio.jsx","fields/date.jsx","fields/dateRange.jsx","fields/time.jsx","fields/file.jsx","fields/number.jsx","fields/slider.jsx","fields/select.jsx","fields/index.js","fields/multiSelect.jsx","containers/configurator/components/properties/forms/field.jsx","containers/configurator/components/properties/forms/group.jsx","containers/configurator/components/properties/components/propertiesGroup.jsx","containers/configurator/components/properties/forms/page.jsx","containers/configurator/components/properties/index.jsx","containers/renderer/components/buttons.jsx","containers/renderer/components/field.jsx","containers/renderer/components/group.jsx","containers/renderer/components/page.jsx","containers/renderer/index.jsx","containers/configurator/components/preview/index.jsx","containers/configurator/index.jsx","containers/index.jsx","index.js"],"names":["uuid","n","arguments","length","undefined","replace","Math","random","toString","slice","TextFieldDefinition","Object","classCallCheck","this","FieldTypeDefinitions","Page","name","label","icon","rank","Group","Text","buildDefinition","d","Number","Select","Boolean","Date","File","FieldTypes","Field","_ref","_ref$id","id","_ref$type","type","_ref$definition","definition","_ref$width","width","mobile","desktop","_ref$title","title","description","_ref$order","order","_ref$visibleIf","visibleIf","typeDefinition","Map","find","ftd","objectSpread","buildTypeDefinitionDetails","_ref$description","_ref$block","block","_ref$fields","fields","map","f","page","_page$id","_page$title","_page$description","_page$header","header","_page$order","_page$visibleIf","_page$groups","groups","_page$buttons","buttons","image","show","showProgress","g","cancel","text","back","save","next","defaultState","selected","form","pages","setPages","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","stop","_x","apply","setGroups","_ref2","_callee2","_context2","_x2","setFields","group","_ref3","_callee3","_context3","_x3","selectItem","field","_ref4","_callee4","_context4","_x4","list","screen","height","panel","setDimensions","rect","topOffset","window","innerWidth","innerHeight","top","data","middleware","thunk","appReducer","combineReducers","configurator","state","action","sgPages","p","sfPages","ui","composedEnhancers","compose","applyMiddleware","concat","store","createStore","ListItem","_this$props","props","_this$props$item","item","_this$props$item$data","_this$props$item$data2","onSelect","openPanel","_this$props$picked","picked","itemSelected","dragHandleProps","react_default","createElement","className","button_buttons","minimal","onClick","assign","disabled","React","Component","FieldsPanel","renderBreadcrumb","Classes","BREADCRUMB","BREADCRUMB_CURRENT","_this$props$fields","_this$props$selected","_this2","_this$props2","_this$props2$fields","closePanel","menu","card","elevation","popover","content","toArray","slicedToArray","_ref2$","filter","includes","i","menuItem","key","toConsumableArray","simplebar_react_esm","style","ref","el","draggable","js_default","itemKey","template","padding","springConfig","stiffness","damping","onMoveEnd","newList","container","connect","bindActionCreators","GroupsPanel","openFieldsPanel","_this","component","_this$props2$groups","_this$props2$selected","_this$props3","_this$props3$groups","PagesPanel","addPage","_this$props$pages","newPage","openGroupsPanel","_this$props2$pages","_this$props3$pages","_this$props3$selected","Navigator","panelStack","initialPanel","showPanelHeader","InputField","defaultValue","_this$props$id","validate","_this$props$type","placeholder","info","extra","formik_esm","render","formGroup","helperText","labelFor","labelInfo","inputGroup","onChange","e","fill","autoComplete","TagField","value","persist","target","clearButton","_this$props2$id","_this$props2$type","tagInput","addOnBlur","tagProps","rightElement","v","values","CheckboxField","controls","checked","SwitchField","RadioField","_this$props$inline","inline","_this$props$options","options","radioGroup","selectedValue","index","DateField","momentFormatter","_this$props$format","format","formatDate","date","locale","moment","parseDate","str","toDate","dateInput","DateRangeField","dateRangeInput","TimeField","_this$props2$useAmPm","useAmPm","timePicker","selectAllOnFocus","FileField","possibleConstructorReturn","getPrototypeOf","call","setPendingFile","file","cb","setState","pending","setProcessedFile","pend","processed","onRemove","processFile","reader","FileReader","readAsDataURL","onload","fileInfo","size","round","base64","result","bind","assertThisInitialized","_this$props2$multi","multi","_this$props2$types","types","spinner","tag_tag","rc_upload_es","accept","join","multiple","beforeUpload","fileObject","onStart","onSuccess","onProgress","onError","customRequest","uploadProps","rightIcon","NumberField","numericInput","min","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","allowNumericCharactersOnly","onValueChange","SliderField","submitForm","_this$props$submitOnC","submitOnChange","_this$props2$extra","stepSize","labelStepSize","_this$props2$disabled","slider","vertical","SelectField","onItemSelect","renderOption","option","_ref5","handleClick","modifiers","matchesPredicate","active","_ref6","activeOption","o","select_select","items","filterable","itemRenderer","inputProps","noResults","Fields","Input","Tag","Checkbox","Switch","Radio","DateRange","Time","Slider","MultiSelect","fieldValue","fv","_","__","onClear","_ref4$value","shouldDismissPopover","renderTag","_this$props4","_this$props4$id","multiSelect","c","tagRenderer","popoverProps","tagInputProps","selectedItems","usePortal","FieldProperties","onSubmit","enableReinitialize","initialValues","validationSchema","Yup","shape","handleChange","intent","GroupProperties","_this$props$groups","PropertiesGroup","toggle","open","children","PageProperties","propertiesGroup","Properties","renderPropertiesForm","forms_field","forms_group","forms_page","FormButtons","_this$props$buttons","Intent","SUCCESS","FieldRenderer","getField","_this$props$field","JSON","stringify","_this$props$field2","GroupRenderer","renderFields","_this$props$group","_this$props$group$fie","_this$props$group$wid","_this$props$group2","_group$width","_group$fields","components_field","PageRenderer","progress","Fragment","borderRadius","marginBottom","backgroundImage","components_group","FromRenderer","console","log","pageIndex","activePageOverride","isNaN","components_page","progressBar","animate","position","components_buttons","Preview","containers_renderer","FormConfigurator","updateWindowDimensions","ReactDOM","findDOMNode","getBoundingClientRect","addEventListener","removeEventListener","components_navigator","properties","preview","FormGenerator","FocusStyleManager","onlyShowFocusOnTabs","es","navbar","navbarGroup","navbarHeading","navbarDivider","menuDivider","containers_configurator","root","document","getElementById","containers"],"mappings":"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","file":"static/js/main.b6b80752.chunk.js","sourcesContent":["export const uuid = (n = 36) => {\n    return '00000000-0000-4000-8000-000000000000'.replace(/0/g, () => (0 | (Math.random() * 16)).toString(16)).slice(0, n);\n};\n","export class TextFieldDefinition {}\n","import { Map } from 'immutable';\nimport { TextFieldDefinition } from './text';\n\nexport const FieldTypeDefinitions = {\n    Page: { name: 'FT_PAGE', label: 'Page', icon: 'applications', rank: 1000 },\n    Group: { name: 'FT_GROUP', label: 'Group', icon: 'application', rank: 900 },\n    Text: {\n        name: 'FT_TEXT',\n        label: 'Text',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'new-text-box',\n        rank: 100\n    },\n    Number: {\n        name: 'FT_NUMBER',\n        label: 'Number',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'numerical',\n        rank: 100\n    },\n    Select: {\n        name: 'FT_SELECT',\n        label: 'Select',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'property',\n        rank: 100\n    },\n    Boolean: {\n        name: 'FT_BOOLEAN',\n        label: 'Checkbox',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'form',\n        rank: 100\n    },\n    Date: {\n        name: 'FT_DATE',\n        label: 'Date',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'calendar',\n        rank: 100\n    },\n    File: {\n        name: 'FT_FILE',\n        label: 'File',\n        buildDefinition: d => new TextFieldDefinition(d),\n        icon: 'cloud-upload',\n        rank: 100\n    }\n};\n\nexport const FieldTypes = {\n    Page: 'FT_PAGE',\n    Group: 'FT_GROUP',\n    Text: 'FT_TEXT',\n    Number: 'FT_NUMBER',\n    Select: 'FT_SELECT',\n    Boolean: 'FT_BOOLEAN',\n    Date: 'FT_DATE',\n    File: 'FT_FILE'\n};\n\nexport const buildTypeDefinitionDetails = (type, definition) => {\n    const typeDefinition = new Map(FieldTypeDefinitions).find(ftd => ftd.name === type) || {};\n    const { name, label, icon, buildDefinition } = typeDefinition;\n    return { name, label, icon, ...(!!buildDefinition ? buildDefinition(definition) : {}) };\n};\n\nexport const getFieldTypeMenuItems = () => {\n    return new Map(FieldTypeDefinitions)\n        .toArray()\n        .map(([_, { name, label, icon }]) => ({ name, label, icon }))\n        .filter(f => ![FieldTypes.Page, FieldTypes.Group].includes(f.name));\n};\n","import { uuid } from '../utilities/common';\nimport { FieldTypes, buildTypeDefinitionDetails } from './definitions/fieldTypes';\n\nexport class Field {\n    id;\n    title;\n    description;\n    type;\n    definition;\n    width;\n    order;\n    visibleIf;\n\n    constructor({\n        id = uuid(8),\n        type = FieldTypes.Text,\n        definition = {},\n        width = { mobile: 100, desktop: 100 },\n        title = 'New Field',\n        description,\n        order = 0,\n        visibleIf = true\n    }) {\n        this.id = id;\n        this.title = title;\n        this.description = description;\n\n        this.type = type;\n        this.definition = buildTypeDefinitionDetails(type, { ...this.definition, ...definition });\n        this.width = width;\n\n        this.order = order;\n        this.visibleIf = visibleIf;\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Field } from './field';\nimport { FieldTypes } from './definitions/fieldTypes';\n\nexport class Group {\n    id;\n    title;\n    description;\n    block;\n    width;\n    order;\n    visibleIf;\n    fields;\n\n    constructor({\n        id = uuid(8),\n        title = 'New Group',\n        description = '',\n        block = true,\n        width = { mobile: 100, desktop: 100 },\n        order = 0,\n        visibleIf = true,\n        fields = []\n    }) {\n        this.id = id;\n        this.title = title;\n        this.type = FieldTypes.Group;\n        this.description = description;\n        this.block = block;\n        this.width = width;\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.fields = fields.map(f => new Field(f));\n    }\n}\n","import { uuid } from '../utilities/common';\nimport { Group } from './group';\nimport { FieldTypes } from './definitions/fieldTypes';\n\nexport class Page {\n    id;\n    title;\n    type;\n    header;\n    order;\n    visibleIf;\n    groups;\n    buttons;\n\n    constructor(page = {}) {\n        const {\n            id = uuid(8),\n            title = 'New Page',\n            description = '',\n            header = {},\n            order = 0,\n            visibleIf = true,\n            groups = [],\n            buttons = {}\n        } = page;\n\n        this.id = id;\n        this.title = title;\n        this.type = FieldTypes.Page;\n        this.description = description;\n        this.header = {\n            description: '',\n            image: '',\n            show: true,\n            showProgress: true,\n            ...header\n        };\n        this.order = order;\n        this.visibleIf = visibleIf;\n        this.groups = groups.map(g => new Group(g));\n        this.buttons = {\n            cancel: { show: true, text: 'Cancel' },\n            back: { show: true, text: 'Back' },\n            save: { show: true, text: 'Save' },\n            next: { show: true, text: 'Next' },\n            ...buttons\n        };\n    }\n}\n","import {\n    CONFIGURATOR_SELECT_ITEM,\n    CONFIGURATOR_REMOVE_ITEM,\n    CONFIGURATOR_SHOW_PROPERTIES,\n    CONFIGURATOR_SET_PAGES,\n    CONFIGURATOR_SET_GROUPS,\n    CONFIGURATOR_SET_FIELDS\n} from './actions';\nimport { TEST_PAGES } from '../testData';\n\nconst defaultState = {\n    selected: {},\n    form: undefined,\n    pages: TEST_PAGES\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        // Select item to display properties\n        case CONFIGURATOR_SELECT_ITEM:\n            return { ...state, selected: { page: action.page, group: action.group, field: action.field } };\n\n        // Assign pages\n        case CONFIGURATOR_SET_PAGES:\n            return { ...state, pages: action.pages };\n        // Assign groups\n        case CONFIGURATOR_SET_GROUPS:\n            const sgPages = state.pages.map(p => (p.id === action.page.id ? { ...p, groups: action.groups } : p));\n            return { ...state, pages: sgPages };\n        // Assign fields\n        case CONFIGURATOR_SET_FIELDS:\n            const sfPages = state.pages.map(p => {\n                return p.id === action.page.id\n                    ? {\n                          ...p,\n                          groups: p.groups.map(g => {\n                              return g.id === action.group.id ? { ...g, fields: action.fields } : g;\n                          })\n                      }\n                    : p;\n            });\n            return { ...state, pages: sfPages };\n\n        default:\n            return state;\n    }\n}\n\nexport const setPages = pages => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, pages });\n};\nexport const setGroups = (page, groups) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_GROUPS, page, groups });\n};\nexport const setFields = (page, group, fields) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_FIELDS, page, group, fields });\n};\n\nexport const selectItem = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SELECT_ITEM, page, group, field });\n};\n\n//\n// --------------------------------------------------------\n//\n\nexport const removeItem = () => async dispatch => {\n    dispatch({ type: CONFIGURATOR_REMOVE_ITEM });\n};\n\nexport const showProperties = (page, group, field) => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SHOW_PROPERTIES, page, group, field });\n};\n\nexport const setForm = form => async dispatch => {\n    dispatch({ type: CONFIGURATOR_SET_PAGES, form });\n};\n","import { Page } from './models/page';\nimport { Group } from './models/group';\nimport { Field } from './models/field';\nimport { FieldTypes } from './models/definitions/fieldTypes';\n\nexport const TEST_PAGES = [\n    new Page({\n        title: 'Intro',\n        header: {\n            description:\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a rutrum tellus. Fusce ut mauris id nunc bibendum fringilla. Cras rutrum non ipsum in malesuada. Aliquam semper est vitae magna laoreet sagittis. Integer maximus blandit dictum. Fusce iaculis lacus id quam blandit rhoncus. Sed accumsan massa ac turpis congue fringilla. Etiam rutrum elit non est lacinia, ut posuere velit fringilla. Sed vehicula pharetra elit in suscipit. Phasellus nec ultrices dui. Cras lectus est, fringilla ut velit ut, commodo ullamcorper justo. Maecenas facilisis diam in ante venenatis, sit amet porta nisi auctor. Aenean a ante ut nisi efficitur lacinia.',\n            image: 'http://clipart-library.com/img/752503.jpg',\n            show: true,\n            showProgress: true\n        },\n        buttons: { next: { show: true, text: 'Move forward' } },\n        groups: [\n            new Group({\n                title: 'Personal Info',\n                description:\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a rutrum tellus. Fusce ut mauris id nunc bibendum fringilla.',\n                width: { desktop: 100, mobile: 100 },\n                fields: [\n                    new Field({ title: 'Name', width: { desktop: 50, mobile: 100 } }),\n                    new Field({ title: 'Email', width: { desktop: 50, mobile: 100 } }),\n                    new Field({ title: 'Age', width: { desktop: 50, mobile: 100 }, type: FieldTypes.Number }),\n                    new Field({ title: 'Sex', width: { desktop: 50, mobile: 100 }, type: FieldTypes.Select }),\n                    new Field({ title: 'Date of birth', width: { desktop: 50, mobile: 100 }, type: FieldTypes.Date }),\n                    new Field({\n                        title: 'Eligible',\n                        description: 'Is Eligible ?',\n                        width: { desktop: 50, mobile: 100 },\n                        type: FieldTypes.Boolean\n                    })\n                ]\n            }),\n            new Group({\n                title: 'Location',\n                width: { desktop: 50, mobile: 100 },\n                fields: [new Field({ title: 'Country' }), new Field({ title: 'City' })]\n            }),\n            new Group({\n                title: 'Some other group',\n                width: { desktop: 50, mobile: 100 },\n                fields: [new Field({ title: 'Address' }), new Field({ title: 'Post Code' })]\n            })\n        ]\n    }),\n    new Page({\n        title: 'Tax Details',\n        groups: [\n            new Group({ title: 'SSN', fields: [new Field({ title: 'Type' }), new Field({ title: 'Number' })] }),\n            new Group({\n                title: 'Registration',\n                fields: [new Field({ title: 'Date' }), new Field({ title: 'Unit' })]\n            })\n        ]\n    }),\n    new Page({\n        title: 'Lorem ipsum dolor',\n        groups: [\n            new Group({\n                title:\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n                fields: [new Field({ title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit' })]\n            })\n        ]\n    })\n];\n","export const CONFIGURATOR_SELECT_ITEM = 'CONFIGURATOR_SELECT_ITEM';\nexport const CONFIGURATOR_REMOVE_ITEM = 'CONFIGURATOR_REMOVE_ITEM';\nexport const CONFIGURATOR_SHOW_PROPERTIES = 'CONFIGURATOR_SHOW_PROPERTIES';\nexport const CONFIGURATOR_SET_FORM = 'CONFIGURATOR_SET_FORM';\nexport const CONFIGURATOR_SET_PAGES = 'CONFIGURATOR_SET_PAGES';\nexport const CONFIGURATOR_SET_GROUPS = 'CONFIGURATOR_SET_GROUPS';\nexport const CONFIGURATOR_SET_FIELDS = 'CONFIGURATOR_SET_FIELDS';\n\nexport const UI_SET_DIMENSIONS = 'UI_SET_DIMENSIONS';\n\nexport const FIELDS_SET_FIELD = 'FIELDS_SET_FIELD';\n","import { FIELDS_SET_FIELD } from './actions';\n\nconst defaultState = {\n    list: undefined\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case FIELDS_SET_FIELD:\n            return { ...state, list: action.data };\n\n        default:\n            return state;\n    }\n}\n","import { UI_SET_DIMENSIONS } from './actions';\n\nconst defaultState = {\n    screen: { width: 0, height: 0 },\n    panel: { height: 0 }\n};\n\n/**\n * State mapper.\n * @param {object} state\n * @param {string} action\n */\nexport default function(state = defaultState, action) {\n    switch (action.type) {\n        case UI_SET_DIMENSIONS:\n            return { ...state, ...action.data };\n\n        default:\n            return state;\n    }\n}\n\nexport const setDimensions = rect => async dispatch => {\n    const screen = { width: window.innerWidth, height: window.innerHeight };\n    const topOffset = rect ? rect.top : 0;\n    const panel = { height: screen.height - topOffset - 59 };\n\n    dispatch({ type: UI_SET_DIMENSIONS, data: { screen, panel } });\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { combineReducers } from 'redux';\n\nimport configurator from './configurator';\nimport fields from './fields';\nimport ui from './ui';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    if (typeof window === 'object') {\n        const { __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ } = window;\n        if (__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && typeof __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function') {\n            enhancers.push(__REDUX_DEVTOOLS_EXTENSION_COMPOSE__());\n        }\n    }\n}\n\nconst appReducer = combineReducers({\n    configurator,\n    ui,\n    fields\n});\n\nconst rootReducer = (state, action) => appReducer(state, action);\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\nexport const store = createStore(rootReducer, initialState, composedEnhancers);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass ListItem extends React.Component {\n    render() {\n        const {\n            item: {\n                data: { title, definition: { icon } = {} },\n                selected,\n                onSelect,\n                openPanel\n            },\n            picked = this.props.itemSelected > 0,\n            dragHandleProps\n        } = this.props;\n\n        return (\n            <div className={`fg-panel-item ${picked ? 'dragged' : ''} ${selected ? 'selected' : ''}`}>\n                <Button minimal={true} icon={selected ? 'manually-entered-data' : 'cog'} onClick={onSelect} />\n                <div className=\"item-title ellipsis\" {...dragHandleProps}>\n                    {title}\n                </div>\n                {!!openPanel ? (\n                    <Button minimal={true} icon=\"caret-right\" onClick={openPanel} />\n                ) : (\n                    <Button className=\"fg-type-indicator\" disabled={true} icon={icon} />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, MenuItem, Popover, Classes } from '@blueprintjs/core';\nimport ListItem from './item';\nimport { selectItem, setFields } from '../../../../../state/configurator';\nimport { Field } from '../../../../../models/field';\nimport { getFieldTypeMenuItems } from '../../../../../models/definitions/fieldTypes';\n\nclass FieldsPanel extends React.Component {\n    componentDidMount() {\n        const { page, group, fields = [], selected: { field } = {}, selectItem } = this.props;\n        if (!field && fields.length > 0) selectItem(page, group, fields[0]);\n    }\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, group, fields = [], closePanel, height, selected, selectItem, setFields } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page, group);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{group.title}</div>\n                        </div>\n\n                        <Popover\n                            content={\n                                <Menu>\n                                    {getFieldTypeMenuItems().map(({ name, label, icon }, i) => (\n                                        <MenuItem\n                                            key={i}\n                                            icon={icon}\n                                            text={label}\n                                            onClick={() =>\n                                                setFields(page, group, [\n                                                    ...fields,\n                                                    new Field({ title: 'New Field', type: name })\n                                                ])\n                                            }\n                                        />\n                                    ))}\n                                </Menu>\n                            }\n                        >\n                            <Button minimal={true} icon=\"plus\" />\n                        </Popover>\n\n                        {/* <Button\n                            icon=\"plus\"\n                            minimal={true}\n                            onClick={() => setFields(page, group, [...fields, new Field({ title: 'New Field' })])}\n                        /> */}\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={fields.map(field => ({\n                                    id: field.id,\n                                    data: field,\n                                    selected: selected && selected.field && selected.field.id === field.id,\n                                    onSelect: () => selectItem(page, group, field)\n                                }))}\n                                onMoveEnd={newList =>\n                                    setFields(page, group, newList.map((f, i) => ({ ...f.data, order: i })))\n                                }\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const group = ((page || {}).groups || []).find(g => g.id === props.group.id);\n    const fields = (group || {}).fields;\n    return {\n        page,\n        group,\n        fields,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            selectItem,\n            setFields\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DraggableList from 'react-draggable-list';\nimport SimpleBar from 'simplebar-react';\nimport { Button, Card, Menu, Classes } from '@blueprintjs/core';\nimport FieldsPanel from './fields';\nimport ListItem from './item';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\nimport { Group } from '../../../../../models/group';\n\nclass GroupsPanel extends React.Component {\n    componentDidMount() {\n        const { page, groups = [], selected: { group } = {}, selectItem } = this.props;\n        if (!group && groups.length > 0) selectItem(page, groups[0]);\n    }\n\n    openFieldsPanel = group => {\n        const { page, openPanel } = this.props;\n        openPanel({ component: FieldsPanel, props: { page, group } });\n    };\n\n    renderBreadcrumb = ({ text, onClick }) => (\n        <div className={`ellipsis ${Classes.BREADCRUMB} ${Classes.BREADCRUMB_CURRENT}`} onClick={onClick}>\n            {text}\n        </div>\n    );\n\n    render() {\n        const { page, groups = [], closePanel, height, selected, setGroups, selectItem } = this.props;\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"ellipsis\">\n                            <Button\n                                icon=\"chevron-left\"\n                                minimal={true}\n                                onClick={() => {\n                                    closePanel();\n                                    selectItem(page);\n                                }}\n                            />\n                            <div className=\"fg-panel-title\">{page.title}</div>\n                        </div>\n                        <Button\n                            icon=\"plus\"\n                            minimal={true}\n                            onClick={() => setGroups(page, [...groups, new Group({ title: 'New Group' })])}\n                        />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={groups.map(group => ({\n                                    id: group.id,\n                                    data: group,\n                                    selected: selected && selected.group && selected.group.id === group.id,\n                                    onSelect: () => selectItem(page, group),\n                                    openPanel: () => this.openFieldsPanel(group)\n                                }))}\n                                onMoveEnd={newList => setGroups(page, newList.map((g, i) => ({ ...g.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const page = (state.configurator.pages || []).find(p => p.id === props.page.id);\n    const groups = (page || {}).groups;\n    return {\n        page,\n        groups,\n        selected: state.configurator.selected,\n        height: state.ui.screen.height\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupsPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SimpleBar from 'simplebar-react';\nimport DraggableList from 'react-draggable-list';\nimport { Card, Menu, Button } from '@blueprintjs/core';\nimport GroupsPanel from './groups';\nimport ListItem from './item';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport { Page } from '../../../../../models/page';\n\nclass PagesPanel extends React.Component {\n    componentDidMount() {\n        const { pages = [], selected: { page } = {}, selectItem } = this.props;\n        if (!page && pages.length > 0) selectItem(pages[0]);\n    }\n\n    addPage = async () => {\n        const { pages = [], setPages, selectItem } = this.props;\n        const newPage = new Page({ title: 'New Page', order: pages.length });\n        await setPages([...pages, newPage]);\n        selectItem(newPage);\n    };\n\n    openGroupsPanel = page => {\n        const { openPanel } = this.props;\n        openPanel({ component: GroupsPanel, props: { page } });\n    };\n\n    render() {\n        const { height, pages = [], selected = {}, setPages, selectItem } = this.props;\n\n        return (\n            <div className=\"fg-panel-container\">\n                <Menu>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Pages</span>\n                        </div>\n                        <Button icon=\"plus\" minimal={true} onClick={this.addPage} />\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"draggable-area\" ref={el => (this.draggable = el)}>\n                            <DraggableList\n                                itemKey=\"id\"\n                                template={ListItem}\n                                padding={0}\n                                springConfig={{ stiffness: 750, damping: 50 }}\n                                list={pages.map(page => ({\n                                    id: page.id,\n                                    data: page,\n                                    selected: selected && selected.page && selected.page.id === page.id,\n                                    onSelect: () => selectItem(page),\n                                    openPanel: () => this.openGroupsPanel(page)\n                                }))}\n                                onMoveEnd={newList => setPages(newList.map((p, i) => ({ ...p.data, order: i })))}\n                                container={() => this.draggable}\n                            />\n                        </div>\n                    </SimpleBar>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    pages: state.configurator.pages,\n    selected: state.configurator.selected,\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PagesPanel);\n","import React from 'react';\nimport { PanelStack } from '@blueprintjs/core';\nimport PagesPanel from './panels/pages';\n\nclass Navigator extends React.Component {\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-navigator\" style={{ height: `${height - 70}px` }}>\n                <div className=\"panel-wrapper bp3-elevation-1\">\n                    <PanelStack initialPanel={{ component: PagesPanel }} showPanelHeader={false} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navigator;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, InputGroup } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass InputField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <InputGroup\n                                {...field}\n                                {...extra}\n                                onChange={e => field.onChange(e)}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                autoComplete={`${uuid()}`}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default InputField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Button, TagInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TagField extends React.Component {\n    defaultValue = [];\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: value || []\n            }\n        });\n    };\n\n    clearButton = field => {\n        const { disabled } = this.props;\n        if (field.value.length === 0) return null;\n\n        return <Button disabled={disabled} icon={'cross'} minimal={true} onClick={() => this.onChange([], field)} />;\n    };\n\n    render() {\n        const { id = uuid(), name, validate, type = 'text', label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TagInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                type={type}\n                                placeholder={placeholder}\n                                fill={true}\n                                addOnBlur={true}\n                                tagProps={{ minimal: true }}\n                                rightElement={this.clearButton(field)}\n                                onChange={v => this.onChange(v, field)}\n                                values={field.value || []}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TagField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass CheckboxField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Checkbox\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default CheckboxField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Switch } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SwitchField extends React.Component {\n    defaultValue = false;\n\n    render() {\n        const { id = uuid(), name, validate, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Switch\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                checked={!!field.value}\n                                label={placeholder}\n                                onChange={field.onChange}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SwitchField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, RadioGroup, Radio } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass RadioField extends React.Component {\n    defaultValue = '';\n\n    render() {\n        const { id = uuid(), name, inline = true, validate, options = [], label, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            className={className}\n                        >\n                            <RadioGroup\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                label={label}\n                                onChange={field.onChange}\n                                selectedValue={field.value}\n                                className={`radio-field`}\n                                inline={inline}\n                            >\n                                {options.map(({ value, label }, index) => (\n                                    <Radio\n                                        key={index}\n                                        label={label}\n                                        value={value.toString()}\n                                        checked={field.value === value}\n                                    />\n                                ))}\n                            </RadioGroup>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default RadioField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'M/D/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={`${className} fg-date-field`}\n                        >\n                            <DateInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateField;\n","import React from 'react';\nimport moment from 'moment';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { DateRangeInput } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass DateRangeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    momentFormatter = () => {\n        const { format = 'M/D/YYYY' } = this.props;\n        return {\n            formatDate: (date, locale) =>\n                moment(date)\n                    .locale(locale)\n                    .format(format),\n            parseDate: (str, locale) =>\n                moment(str, format)\n                    .locale(locale)\n                    .toDate(),\n            placeholder: format\n        };\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, extra, locale } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <DateRangeInput\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                locale={locale || moment.locale()}\n                                onChange={v => this.onChange(v, field)}\n                                {...this.momentFormatter()}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default DateRangeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup } from '@blueprintjs/core';\nimport { TimePicker } from '@blueprintjs/datetime';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass TimeField extends React.Component {\n    defaultValue = '';\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, className, useAmPm = true, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <TimePicker\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                useAmPm={useAmPm}\n                                selectAllOnFocus={true}\n                                onChange={v => this.onChange(v, field)}\n                                fill={true}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default TimeField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Spinner, Button, Tag } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\nimport Upload from 'rc-upload';\n\nimport './fields.scss';\n\nclass FileField extends React.Component {\n    defaultValue = [];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pending: [],\n            processed: []\n        };\n\n        this.setPendingFile = this.setPendingFile.bind(this);\n        this.setProcessedFile = this.setProcessedFile.bind(this);\n        this.processFile = this.processFile.bind(this);\n    }\n\n    setPendingFile = (file, cb) => {\n        this.setState({ ...this.state, pending: [...this.state.pending, file] }, cb);\n    };\n    setProcessedFile = (file, field) => {\n        const pending = [...this.state.pending.filter(pend => pend.id !== file.id)];\n        this.setState(\n            {\n                ...this.state,\n                processed: [...this.state.processed, file],\n                pending\n            },\n            () => this.onChange(this.state.processed, field)\n        );\n    };\n    onRemove = (id, field) => {\n        const processed = this.state.processed.filter(f => f.id !== id);\n        this.setState({ ...this.state, processed }, () => this.onChange(processed, field));\n    };\n\n    processFile = ({ id, file }, field) => {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            let fileInfo = {\n                id,\n                name: file.name,\n                type: file.type,\n                size: Math.round(file.size / 1000) + ' kB',\n                base64: reader.result,\n                file: file\n            };\n\n            this.setProcessedFile(fileInfo, field);\n        };\n    };\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            multi = false,\n            types = [],\n            validate,\n            label,\n            placeholder,\n            info,\n            className\n        } = this.props;\n\n        const uploadProps = field => ({\n            action: 'api uri',\n            type: 'drag',\n            accept: types.join(','),\n            multiple: multi,\n            beforeUpload: file => {\n                const fileObject = { file, id: uuid() };\n                this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n            },\n            onStart: () => null,\n            onSuccess: () => null,\n            onProgress: () => null,\n            onError: () => null,\n            customRequest: () => null\n        });\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <div>\n                                {this.state.pending.length > 0 && <Spinner size={15} />}\n                                {this.state.processed.map((p, i) => (\n                                    <Tag\n                                        key={i}\n                                        minimal={true}\n                                        onRemove={() => this.onRemove(p.id, field)}\n                                        fill={true}\n                                        className=\"mg-b-5\"\n                                    >\n                                        {p.name}\n                                    </Tag>\n                                ))}\n                                <Upload\n                                    {...uploadProps(field)}\n                                    beforeUpload={file => {\n                                        const fileObject = { file, id: uuid() };\n                                        this.setPendingFile(fileObject, () => this.processFile(fileObject, field));\n                                    }}\n                                >\n                                    <Button rightIcon=\"upload\" text={placeholder} />\n                                </Upload>\n                            </div>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default FileField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, NumericInput } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass NumberField extends React.Component {\n    defaultValue = 0;\n\n    onChange = (value, { onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n    };\n\n    render() {\n        const { id = uuid(), name, label, placeholder, info, className, extra } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <NumericInput\n                                min={Number.MIN_SAFE_INTEGER}\n                                max={Number.MAX_SAFE_INTEGER}\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                placeholder={placeholder}\n                                fill={true}\n                                allowNumericCharactersOnly={false}\n                                onValueChange={v => this.onChange(v, field)}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default NumberField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Slider } from '@blueprintjs/core';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SliderField extends React.Component {\n    defaultValue = 0;\n\n    onChange = async (value, { onChange }, { submitForm }) => {\n        const { id, name, submitOnChange = false } = this.props;\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    render() {\n        const {\n            id = uuid(),\n            name,\n            label,\n            info,\n            className,\n            extra = { min: 1, max: 100, stepSize: 1, labelStepSize: 100 },\n            disabled = false\n        } = this.props;\n\n        return (\n            <Field\n                name={name}\n                render={({ field, form }) => {\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Slider\n                                disabled={disabled}\n                                {...field}\n                                {...extra}\n                                onChange={v => this.onChange(v, field, form)}\n                                value={field.value}\n                                vertical={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SliderField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { Select } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass SelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = async ({ value }, { onChange }, { submitForm }) => {\n        const { id, name, submitOnChange } = this.props;\n        await onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value\n            }\n        });\n\n        if (!!submitOnChange) {\n            submitForm();\n        }\n    };\n\n    renderOption = (option, { handleClick, modifiers }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                className=\"fg-field-fill\"\n                active={modifiers.active}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n            />\n        );\n    };\n\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field, form }) => {\n                    const activeOption = options.find(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <Select\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                itemRenderer={this.renderOption}\n                                className=\"fg-field-fill\"\n                                inputProps={{ className: 'fg-field-fill' }}\n                                noResults={<MenuItem disabled={true} text=\"-\" />}\n                                onItemSelect={v => this.onItemSelect(v, field, form)}\n                            >\n                                <Button\n                                    rightIcon=\"caret-down\"\n                                    text={activeOption ? activeOption.label : placeholder}\n                                    className=\"fg-field-fill space-between\"\n                                />\n                            </Select>\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SelectField;\n","import InputField from './input';\nimport TagField from './tag';\nimport CheckboxField from './checkbox';\nimport SwitchField from './switch';\nimport RadioField from './radio';\nimport DateField from './date';\nimport DateRangeField from './dateRange';\nimport TimeField from './time';\nimport FileField from './file';\nimport NumberField from './number';\nimport SliderField from './slider';\nimport SelectField from './select';\nimport MultiSelectField from './multiSelect';\n\nexport const Fields = {\n    Input: InputField,\n    Tag: TagField,\n    Checkbox: CheckboxField,\n    Switch: SwitchField,\n    Radio: RadioField,\n    Date: DateField,\n    DateRange: DateRangeField,\n    Time: TimeField,\n    File: FileField,\n    Number: NumberField,\n    Slider: SliderField,\n    Select: SelectField,\n    MultiSelect: MultiSelectField\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, MenuItem, Button } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport { uuid } from '../utilities/common';\n\nimport './fields.scss';\n\nclass MultiSelectField extends React.Component {\n    defaultValue = '';\n\n    onItemSelect = ({ value }, field) => {\n        const { id, name } = this.props;\n        const fieldValue = field.value || [];\n        const values = fieldValue.includes(value) ? fieldValue.filter(fv => fv !== value) : [...fieldValue, value];\n\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onRemove = (_, index, field) => {\n        const { id, name } = this.props;\n        const values = (field.value || []).filter((__, i) => i !== index);\n        field.onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: values\n            }\n        });\n    };\n\n    onClear = ({ onChange }) => {\n        const { id, name } = this.props;\n        onChange({\n            persist: () => {},\n            target: {\n                type: 'change',\n                id,\n                name,\n                value: []\n            }\n        });\n    };\n\n    renderOption = (option, { handleClick, modifiers }, { value = [] }) => {\n        if (!modifiers.matchesPredicate) {\n            return null;\n        }\n\n        return (\n            <MenuItem\n                icon={value.includes(option.value) ? 'tick' : 'blank'}\n                disabled={modifiers.disabled}\n                key={option.value}\n                onClick={handleClick}\n                text={option.label}\n                shouldDismissPopover={false}\n            />\n        );\n    };\n\n    renderTag = (value, { tagProps, onRemove, rightElement }) => {\n        const { options } = this.props;\n        return (options.find(o => o.value === value) || {}).label;\n    };\n    render() {\n        const { id = uuid(), name, validate, label, info, placeholder, className, extra, options } = this.props;\n\n        return (\n            <Field\n                name={name}\n                validate={validate}\n                render={({ field }) => {\n                    // const selectedOptions = options.filter(o => o.value === field.value);\n\n                    return (\n                        <FormGroup\n                            helperText={\n                                <span className=\"validation-message\">\n                                    <ErrorMessage name={name} />\n                                </span>\n                            }\n                            label={label}\n                            labelFor={id}\n                            labelInfo={info}\n                            className={className}\n                        >\n                            <MultiSelect\n                                {...field}\n                                {...extra}\n                                id={id}\n                                name={name}\n                                items={options}\n                                filterable={false}\n                                placeholder={placeholder}\n                                itemRenderer={(o, c) => this.renderOption(o, c, field)}\n                                tagRenderer={this.renderTag}\n                                popoverProps={{\n                                    className: 'fg-field-fill'\n                                }}\n                                tagInputProps={{\n                                    className: 'fg-field-fill',\n                                    tagProps: { minimal: true },\n                                    onRemove: (_, index) => this.onRemove(_, index, field),\n                                    rightElement:\n                                        !!field.value && field.value.length > 0 ? (\n                                            <Button icon=\"cross\" minimal={true} onClick={() => this.onClear(field)} />\n                                        ) : (\n                                            undefined\n                                        )\n                                }}\n                                noResults={<MenuItem disabled={true} text=\"No results.\" />}\n                                onItemSelect={v => this.onItemSelect(v, field)}\n                                selectedItems={field.value || []}\n                                usePortal={false}\n                                inline={false}\n                            />\n                        </FormGroup>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default MultiSelectField;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setFields, selectItem } from '../../../../../state/configurator';\n\nclass FieldProperties extends React.Component {\n    onSubmit = values => {\n        const { setFields, page, group, fields = [] } = this.props;\n        setFields(page, group, [...fields.map(f => (f.id === values.id ? { ...f, ...values } : f))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setFields, page, group, fields, field } = this.props;\n        await selectItem(page, group);\n        setFields(page, group, [...fields.filter(f => f.id !== field.id)]);\n    };\n\n    render() {\n        const { field } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...field }}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'id'}\n                                label={'Property'}\n                                info={'(form unique)'}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'description'}\n                                label={'Description'}\n                                placeholder={'Description'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Slider\n                                label={'Width'}\n                                info={'(desktop)'}\n                                name={'width.desktop'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100 mg-b-0\"\n                            />\n                            <Fields.Slider\n                                disabled={true}\n                                label={'Width'}\n                                info={'(mobile)'}\n                                name={'width.mobile'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100\"\n                            />\n\n                            <div className=\"pd-15\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    const groups = (page || {}).groups;\n    const group = (groups || []).find(g => g.id === selected.group.id);\n\n    const fields = (group || {}).fields;\n    const field = (fields || []).find(f => f.id === selected.field.id);\n\n    return {\n        selected,\n        pages,\n        page,\n        groups,\n        group,\n        fields,\n        field\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setFields,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FieldProperties);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setGroups, selectItem } from '../../../../../state/configurator';\n\nclass GroupProperties extends React.Component {\n    onSubmit = values => {\n        const { setGroups, page, groups = [] } = this.props;\n        setGroups(page, [...groups.map(g => (g.id === values.id ? { ...g, ...values } : g))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setGroups, page, groups, group } = this.props;\n        await selectItem(page);\n        setGroups(page, [...groups.filter(g => g.id !== group.id)]);\n    };\n\n    render() {\n        const { group } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...group }}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'id'}\n                                label={'Property'}\n                                info={'(form unique)'}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'description'}\n                                label={'Description'}\n                                placeholder={'Description'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Checkbox\n                                name={'block'}\n                                placeholder={'Block (show as block?)'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Slider\n                                label={'Width'}\n                                info={'(desktop)'}\n                                name={'width.desktop'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100 mg-b-0\"\n                            />\n                            <Fields.Slider\n                                disabled={true}\n                                label={'Width'}\n                                info={'(mobile)'}\n                                name={'width.mobile'}\n                                submitOnChange={true}\n                                extra={{\n                                    min: 25,\n                                    max: 100,\n                                    stepSize: 5,\n                                    labelStepSize: 25\n                                }}\n                                className=\"fg-field width-100\"\n                            />\n                            <div className=\"pd-15\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    const groups = (page || {}).groups;\n    const group = (groups || []).find(g => g.id === selected.group.id);\n\n    return {\n        selected,\n        pages,\n        page,\n        groups,\n        group\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setGroups,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupProperties);\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nclass PropertiesGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { open: !!props.open };\n    }\n\n    toggle = () => this.setState({ ...this.state, open: !this.state.open });\n\n    render() {\n        const { open } = this.state;\n        const { title, children } = this.props;\n        return (\n            <div className=\"fg-properties-group\">\n                <div className=\"fg-properties-group-header mg-x-15\">\n                    <Button\n                        fill={true}\n                        text={title}\n                        rightIcon={!!open ? 'caret-up' : 'caret-down'}\n                        onClick={this.toggle}\n                        className=\"mg-b-20\"\n                    />\n                </div>\n                {!!open && <div className=\"fg-properties-group-body\">{children}</div>}\n            </div>\n        );\n    }\n}\n\nexport default PropertiesGroup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@blueprintjs/core';\nimport { Fields } from '../../../../../fields';\nimport { setPages, selectItem } from '../../../../../state/configurator';\nimport PropertiesGroup from '../components/propertiesGroup';\n\nclass PageProperties extends React.Component {\n    onSubmit = values => {\n        const { setPages, pages = [] } = this.props;\n        setPages([...pages.map(p => (p.id === values.id ? { ...p, ...values } : p))]);\n    };\n\n    onRemove = async () => {\n        const { selectItem, setPages, pages, page } = this.props;\n        await selectItem();\n        setPages([...pages.filter(p => p.id !== page.id)]);\n    };\n\n    render() {\n        const { page } = this.props;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{ ...page }}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={({ handleChange, submitForm }) => {\n                    return (\n                        <Form\n                            onChange={async e => {\n                                await handleChange(e);\n                                submitForm();\n                            }}\n                        >\n                            <Fields.Input\n                                name={'id'}\n                                label={'Property'}\n                                info={'(form unique)'}\n                                placeholder={'Property'}\n                                className=\"fg-field width-100\"\n                            />\n                            <Fields.Input\n                                name={'title'}\n                                label={'Title'}\n                                placeholder={'Title'}\n                                className=\"fg-field width-100\"\n                            />\n                            <PropertiesGroup title=\"Header\">\n                                <Fields.Input\n                                    name={'header.description'}\n                                    label={'Description'}\n                                    placeholder={'Description'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'header.image'}\n                                    label={'Header Image'}\n                                    placeholder={'Url'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Checkbox\n                                    name={'header.show'}\n                                    placeholder={'Show header ?'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'header.showProgress'}\n                                    placeholder={'Show progress bar ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                            </PropertiesGroup>\n\n                            <PropertiesGroup title=\"Buttons\">\n                                <Fields.Input\n                                    name={'buttons.cancel.text'}\n                                    label={'Cancel label'}\n                                    placeholder={'Cancel label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.cancel.show'}\n                                    placeholder={'Show cancel button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n\n                                <Fields.Input\n                                    name={'buttons.back.text'}\n                                    label={'Back label'}\n                                    placeholder={'Back label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.back.show'}\n                                    placeholder={'Show back button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'buttons.save.text'}\n                                    label={'Save label'}\n                                    placeholder={'Save label'}\n                                    className=\"fg-field width-100 mg-b-0\"\n                                />\n                                <Fields.Checkbox\n                                    name={'buttons.save.show'}\n                                    placeholder={'Show save button ?'}\n                                    className=\"fg-field width-100\"\n                                />\n                                <Fields.Input\n                                    name={'buttons.next.text'}\n                                    label={'Next label'}\n                                    placeholder={'Next label'}\n                                    className=\"fg-field width-100\"\n                                />\n                            </PropertiesGroup>\n\n                            <div className=\"mg-x-15 mg-t-20\">\n                                <Button\n                                    type=\"button\"\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                    text=\"Remove\"\n                                    fill={true}\n                                    onClick={this.onRemove}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const selected = state.configurator.selected;\n    const pages = state.configurator.pages;\n    const page = (pages || []).find(p => p.id === selected.page.id);\n\n    return {\n        selected,\n        pages,\n        page\n    };\n};\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setPages,\n            selectItem\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PageProperties);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\nimport FieldProperties from './forms/field';\nimport GroupProperties from './forms/group';\nimport PageProperties from './forms/page';\n\nclass Properties extends React.Component {\n    renderPropertiesForm = () => {\n        const { selected = {} } = this.props;\n        const { page, group, field } = selected;\n        if (!!field) {\n            return <FieldProperties />;\n        }\n        if (!!group) {\n            return <GroupProperties />;\n        }\n        if (!!page) {\n            return <PageProperties />;\n        }\n\n        return <div className=\"pd-20 tx-center\">Select item to show properties.</div>;\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-properties\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1}>\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Properties</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-y-20 pd-x-5\">{this.renderPropertiesForm()}</div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Properties);\n","import React from 'react';\nimport { Card, Button, Intent } from '@blueprintjs/core';\n\nclass FormButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        const {\n            buttons: { cancel, back, save, next }\n        } = this.props;\n\n        return (\n            <Card elevation={0} className=\"fg-buttons\">\n                <div className=\"fg-left-buttons\">\n                    {!!cancel.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {cancel.text}\n                        </Button>\n                    )}\n                    {!!back.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {back.text}\n                        </Button>\n                    )}\n                </div>\n                <div className=\"fg-right-buttons\">\n                    {!!save.show && (\n                        <Button type=\"button\" minimal={true}>\n                            {save.text}\n                        </Button>\n                    )}\n\n                    <Button type=\"submit\" intent={Intent.SUCCESS}>\n                        {next.text}\n                    </Button>\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default FormButtons;\n","import React from 'react';\nimport { FieldTypes } from '../../../models/definitions/fieldTypes';\nimport { Fields } from '../../../fields';\n\nclass FieldRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    getField = () => {\n        const { field: { id, title, description, type } = {} } = this.props;\n\n        switch (type) {\n            case FieldTypes.Text:\n                return (\n                    <Fields.Input\n                        id={id}\n                        name={id}\n                        label={title}\n                        info={description}\n                        placeholder={title}\n                        className=\"fg-field-fill\"\n                    />\n                );\n\n            case FieldTypes.Number:\n                return (\n                    <Fields.Number\n                        id={id}\n                        name={id}\n                        label={title}\n                        info={description}\n                        placeholder={title}\n                        className=\"fg-field-fill\"\n                    />\n                );\n\n            case FieldTypes.Boolean:\n                return (\n                    <Fields.Checkbox\n                        id={id}\n                        name={id}\n                        label={title}\n                        placeholder={description}\n                        className=\"fg-field-fill\"\n                    />\n                );\n\n            case FieldTypes.Date:\n                return (\n                    <Fields.Date\n                        id={id}\n                        name={id}\n                        label={title}\n                        info={description}\n                        placeholder={title}\n                        className=\"fg-field-fill\"\n                    />\n                );\n\n            case FieldTypes.Select:\n                return (\n                    <Fields.Select\n                        id={id}\n                        name={id}\n                        label={title}\n                        info={description}\n                        placeholder={title}\n                        options={[]}\n                        className=\"fg-field-fill\"\n                    />\n                );\n\n            default:\n                return (\n                    <div>\n                        <span>{title}</span> <span>{JSON.stringify(type)}</span>\n                    </div>\n                );\n        }\n    };\n\n    render() {\n        const { field: { width: { desktop } } = { width: { desktop: 100 } } } = this.props;\n        return (\n            <div className=\"fg-field-renderer\" style={{ width: `${desktop}%` }}>\n                {this.getField()}\n            </div>\n        );\n    }\n}\n\nexport default FieldRenderer;\n","import React from 'react';\nimport { Card } from '@blueprintjs/core';\nimport FieldRenderer from './field';\n\nclass GroupRenderer extends React.Component {\n    renderFields = () => {\n        const { group: { fields = [], width: { desktop } = { desktop: 100, mobile: 100 } } = {} } = this.props;\n        return (\n            <div className=\"fg-group-renderer\" style={{ width: `${desktop}%` }}>\n                {fields.map((field, i) => (\n                    <div key={i}>field {field.id}</div>\n                ))}\n            </div>\n        );\n    };\n\n    render() {\n        const { group = {} } = this.props;\n        const { title, description, block, width: { desktop } = { desktop: 100, mobile: 100 }, fields = [] } = group;\n\n        if (!block) return this.renderFields();\n\n        return (\n            <div className=\"fg-group-renderer\" style={{ width: `${desktop}%` }}>\n                <Card elevation={0} className=\"\">\n                    <div className=\"fg-group-header mg-b-20\">\n                        <h3 className=\"mg-0\">{title}</h3>\n                        {!!description && <span className=\"bp3-text-small bp3-text-muted\">{description}</span>}\n                    </div>\n                    <div className=\"fg-fields-wrapper\">\n                        {fields.map((field, i) => (\n                            <FieldRenderer key={i} field={field} />\n                        ))}\n                    </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default GroupRenderer;\n","import React from 'react';\nimport { Card } from '@blueprintjs/core';\nimport GroupRenderer from './group';\n\nclass PageRenderer extends React.Component {\n    render() {\n        const { progress, page } = this.props;\n        const {\n            title,\n            header: { description, image, show, showProgress },\n            groups = []\n        } = page;\n\n        return (\n            <React.Fragment>\n                {progress({\n                    style: { borderRadius: !!show ? '3px 3px 0 0' : '3px', marginBottom: !!show ? '0px' : '20px' },\n                    showProgress\n                })}\n                {!!show && (\n                    <Card\n                        elevation={0}\n                        className=\"fg-renderer-header\"\n                        style={{ borderRadius: !!showProgress ? '0 0 3px 3px' : '3px' }}\n                    >\n                        {!!image && (\n                            <div\n                                className=\"fg-page-header-image\"\n                                style={{\n                                    backgroundImage: `url(${image})`,\n                                    borderRadius: !!showProgress ? '0px' : '3px 3px 0 0'\n                                }}\n                            />\n                        )}\n                        <h2 className=\"mg-0\">{title}</h2>\n                        {!!description && <span className=\"bp3-text-small bp3-text-muted\">{description}</span>}\n                    </Card>\n                )}\n                <div className=\"fg-groups-wrapper\">\n                    {groups.map((group, i) => (\n                        <GroupRenderer key={i} group={group} />\n                    ))}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PageRenderer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Card, Button, ProgressBar, Popover, Menu, MenuItem } from '@blueprintjs/core';\nimport FormButtons from './components/buttons';\nimport PageRenderer from './components/page';\n\nimport './renderer.scss';\n\nclass FromRenderer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pageIndex: 0 };\n    }\n\n    onSubmit = values => {\n        console.log(values);\n    };\n\n    render() {\n        const { pageIndex } = this.state;\n        const { pages = [], activePageOverride } = this.props;\n        if (pages.length === 0) return null;\n\n        const index = Number.isNaN(activePageOverride) ? pageIndex : activePageOverride;\n\n        return (\n            <Formik\n                enableReinitialize={true}\n                initialValues={{}}\n                validationSchema={Yup.object().shape({})}\n                onSubmit={this.onSubmit}\n                render={() => {\n                    return (\n                        <Form>\n                            <PageRenderer\n                                page={pages[index]}\n                                progress={({ style, showProgress }) =>\n                                    !!showProgress && (\n                                        <Card elevation={0} className=\"fg-renderer-navigation\" style={style}>\n                                            <ProgressBar\n                                                value={(index + 1) / (pages.length || 1)}\n                                                className=\"bp3-intent-success fg-renderer-progress\"\n                                                animate={false}\n                                            />\n                                            <Popover\n                                                position=\"left-top\"\n                                                content={\n                                                    <Menu>\n                                                        {pages.map((p, i) => (\n                                                            <MenuItem\n                                                                key={i}\n                                                                icon={i === index ? 'confirm' : 'circle'}\n                                                                disabled={i === index}\n                                                                text={p.title}\n                                                            />\n                                                        ))}\n                                                    </Menu>\n                                                }\n                                            >\n                                                <Button icon=\"menu\" minimal={true} className=\"fg-renderer-menu\" />\n                                            </Popover>\n                                        </Card>\n                                    )\n                                }\n                            />\n                            <FormButtons buttons={pages[index].buttons} />\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FromRenderer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Card } from '@blueprintjs/core';\nimport SimpleBar from 'simplebar-react';\nimport FromRenderer from '../../../renderer';\n\nclass Preview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const { height, pages = [], selected: { page } = {} } = this.props;\n        const index =\n            pages.map((p, i) => (p.id === (!!page ? page.id : p.id) ? i : undefined)).find(i => i !== undefined) || 0;\n\n        return (\n            <div className=\"configurator-preview\" style={{ height: `${height - 70}px` }}>\n                <Card elevation={1} className=\"fg-panel-wrapper\">\n                    <Card elevation={0} className=\"fg-panel-header\">\n                        <div className=\"fg-panel-title\">\n                            <span className=\"pd-l-5\">Preview</span>\n                        </div>\n                    </Card>\n                    <SimpleBar style={{ height: `${height - 121}px` }}>\n                        <div className=\"pd-20\">\n                            <FromRenderer pages={pages} activePageOverride={index} />\n                        </div>\n                    </SimpleBar>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: state.configurator.selected,\n    pages: state.configurator.pages\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Preview);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Navigator from './components/navigator';\nimport Properties from './components/properties';\nimport Preview from './components/preview';\nimport { setDimensions } from '../../state/ui';\n\nimport 'simplebar/dist/simplebar.min.css';\nimport './configurator.scss';\n\nclass FormConfigurator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        const { setDimensions } = this.props;\n        var rect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n        setDimensions(rect);\n    };\n\n    render() {\n        const { height } = this.props;\n\n        return (\n            <div className=\"configurator-wrapper\">\n                <Navigator height={height} />\n                <Properties height={height} />\n                <Preview height={height} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    height: state.ui.screen.height\n});\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setDimensions\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormConfigurator);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from '../state';\nimport FormConfigurator from './configurator';\nimport {\n    FocusStyleManager,\n    Navbar,\n    NavbarGroup,\n    NavbarDivider,\n    NavbarHeading,\n    Menu,\n    MenuItem,\n    Popover,\n    Button,\n    MenuDivider\n} from '@blueprintjs/core';\n\nclass FormGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        FocusStyleManager.onlyShowFocusOnTabs();\n\n        return (\n            <Provider store={store}>\n                <div className=\"form-generator\">\n                    <Navbar className=\"fg-navbar\">\n                        <NavbarGroup>\n                            <NavbarHeading>Form Generator</NavbarHeading>\n                            <NavbarDivider />\n                            <Popover\n                                content={\n                                    <Menu>\n                                        <MenuItem icon=\"floppy-disk\" text=\"Save\" />\n                                        <MenuDivider />\n                                        <MenuItem icon=\"new-object\" text=\"New\" />\n                                        <MenuDivider />\n                                        <MenuItem icon=\"export\" text=\"Export\" />\n                                        <MenuItem icon=\"import\" text=\"Import\" />\n                                    </Menu>\n                                }\n                            >\n                                <Button minimal={true} text=\"File\" />\n                            </Popover>\n                        </NavbarGroup>\n                    </Navbar>\n                    <div className=\"stage\">\n                        <FormConfigurator />\n                    </div>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default FormGenerator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FormGenerator from './containers';\n\nimport './styles/root.scss';\n\nconst root = document.getElementById('root');\nReactDOM.render(<FormGenerator />, root);\n"],"sourceRoot":""}